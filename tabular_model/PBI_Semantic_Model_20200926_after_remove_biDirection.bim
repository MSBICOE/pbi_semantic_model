{
  "name": "40be62b0-592c-4c9b-9e18-6c879b3b62e0",
  "compatibilityLevel": 1520,
  "model": {
    "culture": "en-AU",
    "dataAccessOptions": {
      "legacyRedirects": true,
      "returnErrorValuesAsNull": true
    },
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "sourceQueryCulture": "en-AU",
    "tables": [
      {
        "name": "Dim_Banner",
        "columns": [
          {
            "name": "banner_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "banner_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "banner_code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "banner_code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Banner Name",
            "dataType": "string",
            "sourceColumn": "Banner Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Banner Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "banner_name_historical",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "banner_name_historical",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_name_historical"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Banner Report Group",
            "dataType": "string",
            "sourceColumn": "Banner Report Group",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Banner Report Group"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "banner_report_scan",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "banner_report_scan",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_report_scan"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "banner_report_group_scan",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "banner_report_group_scan",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_report_group_scan"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "banner_report_group_custom_1",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "banner_report_group_custom_1",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_report_group_custom_1"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "banner_report_group_custom_2",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "banner_report_group_custom_2",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_report_group_custom_2"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Banner for CWH Brick",
            "dataType": "string",
            "sourceColumn": "Banner for CWH Brick",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Banner for CWH Brick"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Banner Association",
            "dataType": "string",
            "sourceColumn": "Banner Association",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Banner Association"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Banner Model",
            "dataType": "string",
            "sourceColumn": "Banner Model",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Banner Model"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "is_banner_scan_reportable",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "is_banner_scan_reportable",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "is_banner_scan_reportable"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "partition_group",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "partition_group",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "partition_group"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Channel",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Channel",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Channel"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "is_iri_panel",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "is_iri_panel",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "is_iri_panel"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "use_iri",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "use_iri",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "use_iri"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "is_below_line",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "is_below_line",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "is_below_line"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Banner-d640bb76-0699-4af3-9f3c-7ebee5a6826a",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Banner = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Banner\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_Dim_Banner,{{\"banner_association\", \"Banner Association\"}, {\"banner_model\", \"Banner Model\"}, {\"banner_name\", \"Banner Name\"}, {\"banner_report_group\", \"Banner Report Group\"}, {\"channel\", \"Channel\"}, {\"banner_report_cwh_brick\", \"Banner for CWH Brick\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Dim_Date_Base",
        "isHidden": true,
        "columns": [
          {
            "name": "period_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_base",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "period_base",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_base"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_start",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "period_start",
            "formatString": "dddd\\, d mmmm yyyy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneralPattern\"><DateTimes><DateTime LCID=\"3081\" Group=\"LongDate\" FormatString=\"dddd, d MMMM yyyy\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####Date"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_start"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_end",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "period_end",
            "formatString": "dddd\\, d mmmm yyyy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneralPattern\"><DateTimes><DateTime LCID=\"3081\" Group=\"LongDate\" FormatString=\"dddd, d MMMM yyyy\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####Date"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_end"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Date_Base-c1d50702-0e2d-4492-a458-c1d5f08c5faa",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Date_Base = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Date_Base\"]}[Data]",
                "in",
                "    dbo_Dim_Date_Base"
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Dim_Client",
        "isHidden": true,
        "columns": [
          {
            "name": "client_number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "client_number",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "client_number"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Company Name",
            "dataType": "string",
            "sourceColumn": "Company Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Company Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "name_display",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "name_display",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "name_display"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "client_short_name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "client_short_name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "client_short_name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "client_object_name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "client_object_name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "client_object_name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "client_iri_name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "client_iri_name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "client_iri_name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "outlet_restriction",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "outlet_restriction",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "outlet_restriction"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Company Logo",
            "dataType": "string",
            "sourceColumn": "Company Logo",
            "dataCategory": "ImageUrl",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Company Logo"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "use_iri",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "use_iri",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "use_iri"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "client_manufacturer_names",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "client_manufacturer_names",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "client_manufacturer_names"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "default_report_service",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "default_report_service",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "default_report_service"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "default_period_name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "default_period_name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "default_period_name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Client-4e0f6ad9-64d9-4f9b-aed5-0a1645bc681b",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Client = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Client\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_Dim_Client,{{\"client_name\", \"Company Name\"}, {\"client_logo\", \"Company Logo\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Dim_Banner_State",
        "columns": [
          {
            "name": "banner_state_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "banner_state_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_state_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "banner_state",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "banner_state",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_state"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Banner Scan Reportable",
            "dataType": "string",
            "sourceColumn": "Banner Scan Reportable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Banner Scan Reportable"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_reportable_state",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "period_reportable_state",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_reportable_state"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Banner State Reportable",
            "dataType": "string",
            "sourceColumn": "Banner State Reportable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Banner State Reportable"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "State Banner Reportable",
            "dataType": "string",
            "sourceColumn": "State Banner Reportable",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "State Banner Reportable"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "banner_state_original",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "banner_state_original",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_state_original"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "banner_id",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "banner_id",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "replace_banner_state_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "replace_banner_state_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "replace_banner_state_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Banner_State-2e80d294-23cc-40e7-bef7-4b19ae537d2b",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Banner_State = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Banner_State\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_Dim_Banner_State,{{\"period_reportable_banner\", \"Banner Scan Reportable\"}, {\"reportable_banner_state\", \"Banner State Reportable\"}, {\"reportable_state_banner\", \"State Banner Reportable\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Dim_Date",
        "columns": [
          {
            "name": "period_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_base",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "period_base",
            "sortByColumn": "period_type_order",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_base"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Period Type",
            "dataType": "string",
            "sourceColumn": "Period Type",
            "sortByColumn": "period_order",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Period Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_type_short",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "period_type_short",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_type_short"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_start_min",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "period_start_min",
            "formatString": "dd/mm/yyyy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"3081\" Group=\"ShortDate\" FormatString=\"dd/MM/yyyy\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####Date"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_start_min"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_start_max",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "period_start_max",
            "formatString": "dd/mm/yyyy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"3081\" Group=\"ShortDate\" FormatString=\"dd/MM/yyyy\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####Date"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_start_max"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_end_min",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "period_end_min",
            "formatString": "dd/mm/yyyy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"3081\" Group=\"ShortDate\" FormatString=\"dd/MM/yyyy\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####Date"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_end_min"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_end_max",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "period_end_max",
            "formatString": "dd/mm/yyyy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"3081\" Group=\"ShortDate\" FormatString=\"dd/MM/yyyy\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####Date"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_end_max"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_type_order",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_type_order",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_type_order"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Period Date",
            "dataType": "dateTime",
            "sourceColumn": "Period Date",
            "formatString": "dd/mm/yyyy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"3081\" Group=\"ShortDate\" FormatString=\"dd/MM/yyyy\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####Date"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Period Date"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Period Name",
            "dataType": "string",
            "sourceColumn": "Period Name",
            "sortByColumn": "Date Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Period Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Period Long Name",
            "dataType": "string",
            "sourceColumn": "Period Long Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Period Long Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Period Year",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Period Year",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Period Year"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_code",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_code",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_code_name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "period_code_name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_code_name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Date Code",
            "dataType": "int64",
            "sourceColumn": "Date Code",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Date Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "current_year",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "current_year",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "current_year"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_order",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_order",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_order"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "periods",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "periods",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "periods"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "MAT Year",
            "dataType": "int64",
            "sourceColumn": "MAT Year",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "MAT Year"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_seq",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_seq",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_seq"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_seq_mat",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_seq_mat",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_seq_mat"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "discrete_date",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "discrete_date",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "discrete_date"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Period Sequence Name",
            "dataType": "string",
            "sourceColumn": "Period Sequence Name",
            "sortByColumn": "period_seq",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Period Sequence Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "periods_count",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "periods_count",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "periods_count"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Date-3f2114a8-520e-471e-9ea3-8bc592e064cd",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Date_Client = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Date_Client\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_Dim_Date_Client,{{\"date_code\", \"Date Code\"}, {\"mat_year\", \"MAT Year\"}, {\"period_date\", \"Period Date\"}, {\"period_long_name\", \"Period Long Name\"}, {\"period_name\", \"Period Name\"}, {\"period_type\", \"Period Type\"}, {\"period_year\", \"Period Year\"}, {\"period_sequence_name\", \"Period Sequence Name\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Dim_Sellin_Scanout",
        "columns": [
          {
            "name": "partition_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "partition_key",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "partition_key"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "part_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "part_id",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "part_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sales Type",
            "dataType": "string",
            "sourceColumn": "Sales Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sales Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "sales_type_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "sales_type_key",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "sales_type_key"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "period_type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_type_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_type_key",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_type_key"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_year",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_year",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_year"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_start_min",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_start_min",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_start_min"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_start_max",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_start_max",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_start_max"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_start_min_int",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_start_min_int",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_start_min_int"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_start_max_int",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_start_max_int",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_start_max_int"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Sellin_Scanout-ce43ae55-b886-4abc-9f6c-31f70b4c0034",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Sellin_Scanout = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Sellin_Scanout\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_Dim_Sellin_Scanout,{{\"sales_type\", \"Sales Type\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Dim_Banner_Store_Period",
        "isHidden": true,
        "columns": [
          {
            "name": "eid",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "eid",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "eid"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_outlet_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_outlet_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_outlet_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "banner_state_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "banner_state_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_state_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "sellin_amount",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "sellin_amount",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "sellin_amount"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "scan_amount",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "scan_amount",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "scan_amount"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Banner_Store_Period-a0516a10-c7cb-4fb3-8ee9-5c1432fd05e2",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Banner_Store_Period = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Banner_Store_Period\"]}[Data]",
                "in",
                "    dbo_Dim_Banner_Store_Period"
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Dim_Product_Base",
        "isHidden": true,
        "columns": [
          {
            "name": "FCC",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FCC",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "FCC"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "in_iri",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "in_iri",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "in_iri"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Product_Base-62ce105f-e0d2-487e-a947-4060bb3643db",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Product_Starndard = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Product\"]}[Data]",
                "in",
                "    dbo_Dim_Product_Starndard"
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "LinkedQueryName",
            "value": "Dim_Product_Base"
          }
        ]
      },
      {
        "name": "Dim_Brick",
        "columns": [
          {
            "name": "Brick ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Brick ID",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Brick ID"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Brick Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Brick Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Brick Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Scan Brick ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Scan Brick ID",
            "formatString": "0",
            "summarizeBy": "count",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Scan Brick ID"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Scan Brick Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Scan Brick Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Scan Brick Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CWH Brick ID",
            "dataType": "int64",
            "sourceColumn": "CWH Brick ID",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CWH Brick ID"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CWH Brick Name",
            "dataType": "string",
            "sourceColumn": "CWH Brick Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CWH Brick Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Population Total",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Population Total",
            "formatString": "0",
            "displayFolder": "Demographic",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Population Total"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Population Female",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Population Female",
            "formatString": "0",
            "displayFolder": "Demographic",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Population Female"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Population Male",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Population Male",
            "formatString": "0",
            "displayFolder": "Demographic",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Population Male"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Population <10",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Population <10",
            "formatString": "0",
            "displayFolder": "Demographic",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Population <10"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Population Teenage",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Population Teenage",
            "formatString": "0",
            "displayFolder": "Demographic",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Population Teenage"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Population 20-65",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Population 20-65",
            "formatString": "0",
            "displayFolder": "Demographic",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Population 20-65"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Population >65",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Population >65",
            "formatString": "0",
            "displayFolder": "Demographic",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Population >65"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Areas (KM2)",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Areas (KM2)",
            "formatString": "0",
            "displayFolder": "Demographic",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Areas (KM2)"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Store # Total",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Store # Total",
            "formatString": "0",
            "displayFolder": "Store Count",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Store # Total"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Store # CWH",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Store # CWH",
            "formatString": "0",
            "displayFolder": "Store Count",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Store # CWH"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Store # Priceline",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Store # Priceline",
            "formatString": "0",
            "displayFolder": "Store Count",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Store # Priceline"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Store # TerryWhite",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Store # TerryWhite",
            "formatString": "0",
            "displayFolder": "Store Count",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Store # TerryWhite"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Store # Amcal",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Store # Amcal",
            "formatString": "0",
            "displayFolder": "Store Count",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Store # Amcal"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "State",
            "dataType": "string",
            "sourceColumn": "State",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "State"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Brick_Structure_Base",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Brick_Structure_Base",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Brick_Structure_Base"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Brick-c3dfed43-0d0f-44fe-8ce3-557fef5be808",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Brick = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Brick\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_Dim_Brick,{{\"Brick_Name\", \"Brick Name\"}, {\"Brick_ID\", \"Brick ID\"}, {\"CWH_Brick_ID\", \"CWH Brick ID\"}, {\"CWH_Brick_Name\", \"CWH Brick Name\"}, {\"Number_of_AMC_Store\", \"Store # Amcal\"}, {\"Number_of_CWH_Store\", \"Store # CWH\"}, {\"Number_of_PL_Store\", \"Store # Priceline\"}, {\"Number_of_Store\", \"Store # Total\"}, {\"Number_of_TW_Store\", \"Store # TerryWhite\"}, {\"Population_20_65Y\", \"Population 20-65\"}, {\"Population_Female\", \"Population Female\"}, {\"Population_GT_65Y\", \"Population >65\"}, {\"Population_LT_10Y\", \"Population <10\"}, {\"Population_Male\", \"Population Male\"}, {\"Population_Teenage\", \"Population Teenage\"}, {\"Population_Total\", \"Population Total\"}, {\"Scan_Brick_ID\", \"Scan Brick ID\"}, {\"Scan_Brick_Name\", \"Scan Brick Name\"}, {\"Areas\", \"Areas (KM2)\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Fact_Banner_Brick_Sales",
        "isHidden": true,
        "refreshPolicy": {
          "policyType": "basic",
          "rollingWindowGranularity": "month",
          "rollingWindowPeriods": 36,
          "incrementalGranularity": "month",
          "incrementalPeriods": 36,
          "sourceExpression": [
            "let",
            "    Source = Sql.Database(Server_Name, Database_Name),",
            "    dbo_Fact_Banner_Brick_Sales = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Fact_Banner_Brick_Sales\"]}[Data],",
            "    #\"Filtered Rows\" = Table.SelectRows(dbo_Fact_Banner_Brick_Sales, each [period_id] >= fun_CDatetoInt(RangeStart) and [period_id] < fun_CDatetoInt(RangeEnd))",
            "in",
            "    #\"Filtered Rows\""
          ]
        },
        "columns": [
          {
            "name": "partition_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "partition_key",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "partition_key"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "banner_state_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "banner_state_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "banner_state_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "brick_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "brick_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "brick_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "fcc",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "fcc",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "fcc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "amount",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "amount",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "amount"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "unit",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "unit",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "unit"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "baseline_sales_amount",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "baseline_sales_amount",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "baseline_sales_amount"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "baseline_sales_unit",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "baseline_sales_unit",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "baseline_sales_unit"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "promotion_sales_amount",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "promotion_sales_amount",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "promotion_sales_amount"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "promotion_sales_unit",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "promotion_sales_unit",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "promotion_sales_unit"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "export_amount",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "export_amount",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "export_amount"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "export_unit",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "export_unit",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "export_unit"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "online_amount",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "online_amount",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "online_amount"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "online_unit",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "online_unit",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "online_unit"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "date_updated",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "date_updated",
            "formatString": "dddd\\, d mmmm yyyy",
            "sourceProviderType": "datetime",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneralPattern\"><DateTimes><DateTime LCID=\"3081\" Group=\"LongDate\" FormatString=\"dddd, d MMMM yyyy\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "date_updated"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Fact_Banner_Brick_Sales-0a9b7208-a8d4-4c2e-bb97-825748f66756",
            "mode": "import",
            "queryGroup": "Fact Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Fact_Banner_Brick_Sales = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Fact_Banner_Brick_Sales\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(dbo_Fact_Banner_Brick_Sales, each [period_id] >= fun_CDatetoInt(RangeStart) and [period_id] < fun_CDatetoInt(RangeEnd))",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Base BB Unit Sales",
            "description": "is the total base sales for the all selected filters or the context expressed in unit value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[amount]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            SUM ( 'Fact_Banner_Brick_Sales'[unit] ) / 10,",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )            ",
              "        )",
              "",
              "//var source = [const_Selected_Source]",
              "//var row_check = calculate(countrows('Fact_Banner_Brick_Sales'), filter(All('Dim_Sellin_Scanout'[Sales Type]), 'Dim_Sellin_Scanout'[Sales Type] = source))",
              "//return if(row_check > 0, ",
              "//calculate(sum('Fact_Banner_Brick_Sales'[unit]) / 10, filter(All('Dim_Sellin_Scanout'[Sales Type]), 'Dim_Sellin_Scanout'[Sales Type] = source)))"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Val Sales",
            "description": "is the total base sales for the all selected filters or the context expressed in currency value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[unit]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            SUM ( 'Fact_Banner_Brick_Sales'[amount] ) / 10,",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )",
              "        )",
              "",
              "//var source = [const_Selected_Source]",
              "//var row_check = calculate(countrows('Fact_Banner_Brick_Sales'), filter(All('Dim_Sellin_Scanout'[Sales Type]), 'Dim_Sellin_Scanout'[Sales Type] = source))",
              "//return if(row_check > 0, ",
              "//calculate(sum('Fact_Banner_Brick_Sales'[amount]) / 10, filter(All('Dim_Sellin_Scanout'[Sales Type]), 'Dim_Sellin_Scanout'[Sales Type] = source)))"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "Base BB Baseline Val Sales",
            "description": "is the total base sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in currency value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[baseline_sales_amount]) / 10)",
            "expression": [
              "if([Base BB Val Sales] - [Base BB Baseline Val Sales Interim] >= 0, [Base BB Baseline Val Sales Interim], [Base BB Val Sales])",
              "",
              "//var source = [const_Selected_Source]",
              "//var row_check = calculate(countrows('Fact_Banner_Brick_Sales'), filter(All('Dim_Sellin_Scanout'[Sales Type]), 'Dim_Sellin_Scanout'[Sales Type] = source))",
              "//return if(row_check > 0, ",
              "//calculate(sum('Fact_Banner_Brick_Sales'[baseline_sales_amount]) / 10, filter(All('Dim_Sellin_Scanout'[Sales Type]), 'Dim_Sellin_Scanout'[Sales Type] = source)))"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Baseline Unit Sales",
            "description": "is the total base sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in unit value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[baseline_sales_unit]) / 10)",
            "expression": [
              "var source = [const_Selected_Source]",
              "var row_check = calculate(countrows('Fact_Banner_Brick_Sales'), filter(All('Dim_Sellin_Scanout'[Sales Type]), 'Dim_Sellin_Scanout'[Sales Type] = source))",
              "return if(row_check > 0, ",
              "calculate(sum('Fact_Banner_Brick_Sales'[baseline_sales_unit]) / 10, filter(All('Dim_Sellin_Scanout'[Sales Type]), 'Dim_Sellin_Scanout'[Sales Type] = source)))"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Promo Val Sales",
            "description": "is the total base sales in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in currency value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[promotion_sales_amount]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            SUM ( 'Fact_Banner_Brick_Sales'[promotion_sales_amount]) / 10,",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )",
              "        )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Promo Unit Sales",
            "description": "is the total base sales in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in unit value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[promotion_sales_unit]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            SUM ( 'Fact_Banner_Brick_Sales'[promotion_sales_unit]) / 10,",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )",
              "        )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Export Val Sales",
            "description": "is the total base sales in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in currency value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[export_amount]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            SUM ( 'Fact_Banner_Brick_Sales'[export_amount] ) / 10,",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )",
              "        )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Export Unit Sales",
            "description": "is the total base sales in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in unit value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[export_unit]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            SUM ( 'Fact_Banner_Brick_Sales'[export_unit] ) / 10,",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )",
              "        )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Online Val Sales",
            "description": "is the total base sales in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in currency value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[online_amount]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "VAR pds =",
              "    VALUES ( 'Dim_Product'[FCC] )",
              "VAR dates =",
              "    VALUES ( 'Dim_Date'[period_id] )",
              "VAR final_val =",
              "    CALCULATE (",
              "        SUM ( 'Fact_Banner_Brick_Sales'[online_amount] ) / 10,",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        ),",
              "        FILTER ( ALL ( 'Dim_Product_Base' ), 'Dim_Product_Base'[FCC] IN pds ),",
              "        FILTER ( ALL ( 'Dim_Date_Base' ), 'Dim_Date_Base'[period_id] IN dates )",
              "    )",
              "RETURN",
              "    IF ( [f_OnlineAllowed], final_val, BLANK () )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Online Unit Sales",
            "description": "is the total base sales in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in unit value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[online_unit]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "VAR pds =",
              "    VALUES ( 'Dim_Product'[FCC] )",
              "VAR dates =",
              "    VALUES ( 'Dim_Date'[period_id] )",
              "VAR final_val =",
              "    CALCULATE (",
              "        SUM ( 'Fact_Banner_Brick_Sales'[online_unit] ) / 10,",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        ),",
              "        FILTER ( ALL ( 'Dim_Product_Base' ), 'Dim_Product_Base'[FCC] IN pds ),",
              "        FILTER ( ALL ( 'Dim_Date_Base' ), 'Dim_Date_Base'[period_id] IN dates )",
              "    )",
              "RETURN",
              "    IF ( [f_OnlineAllowed], final_val, BLANK () )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Domestic Unit Sales",
            "expression": "if([Base BB Export Unit Sales] > 0, [Base BB Unit Sales] - [Base BB Export Unit Sales])",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Domestic Val Sales",
            "expression": "if([Base BB Export Val Sales] > 0, [Base BB Val Sales] - [Base BB Export Val Sales])",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB B&M Unit Sales",
            "expression": "[Base BB Unit Sales] - [Base BB Online Unit Sales]",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB B&M Val Sales",
            "expression": "[Base BB Val Sales] - [Base BB Online Val Sales]",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "BB Unit Sales",
            "description": "is the total banner brick sales for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Val Sales",
            "description": "is the total banner brick sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "var cps = values('Dim_Date'[Date Code])",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "BB Baseline Val Sales",
            "description": "is the total banner brick sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Baseline Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Baseline Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Baseline Unit Sales",
            "description": "is the total banner brick sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Baseline Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Baseline Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Promo Val Sales",
            "description": "is the total banner brick sales in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Promo Unit Sales",
            "description": "is the total banner brick sales in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Export Val Sales",
            "description": "is the total banner brick sales in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Export Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Export Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Export Unit Sales",
            "description": "is the total banner brick sales in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Export Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Export Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Online Val Sales",
            "description": "is the total banner brick sales in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Online Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Online Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Online Unit Sales",
            "description": "is the total banner brick sales in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Online Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Online Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB B&M Unit Sales",
            "description": "is the total banner brick sales in related to brick & mortar Sales activity (products bought through physical store)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB B&M Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB B&M Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB B&M Val Sales",
            "description": "is the total banner brick sales in related to brick & mortar Sales activity (products bought through physical store) for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB B&M Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB B&M Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Domestic Unit Sales",
            "description": "is the total banner brick sales in related to the domestic activity (products bought and consumed locally)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Domestic Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Domestic Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Domestic Val Sales",
            "description": "is the total banner brick sales in related to the domestic activity (products bought and consumed locally)  for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Domestic Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Domestic Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Unit Prod Sales",
            "description": "is the banner brick product sales for the all selected filters or the context expressed in unit value.",
            "expression": [
              "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Unit Sales], calculate([BB Unit Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Val Prod Sales",
            "description": "is the banner brick product sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "var val = calculate([BB Val Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
              "return if(or([f_SKUSelected], [f_ProductOwnership]), [BB Val Sales], val)"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "BB B&M Unit Prod Sales",
            "description": "is the banner brick product sales in related to brick & mortar Sales activity (products bought through physical store)  for the all selected filters or the context expressed in unit value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB B&M Unit Sales], calculate([BB B&M Unit Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB B&M Val Prod Sales",
            "description": "is the banner brick product sales in related to brick & mortar Sales activity (products bought through physical store) for the all selected filters or the context expressed in currency value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB B&M Val Sales], calculate([BB B&M Val Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Baseline Unit Prod Sales",
            "description": "is the banner brick product sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in unit value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Baseline Unit Sales], calculate([BB Baseline Unit Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Baseline Val Prod Sales",
            "description": "is the banner brick product sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in currency value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Baseline Val Sales], calculate([BB Baseline Val Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Domestic Unit Prod Sales",
            "description": "is the banner brick product sales in related to the domestic activity (products bought and consumed locally)  for the all selected filters or the context expressed in unit value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Domestic Unit Sales], calculate([BB Domestic Unit Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Domestic Val Prod Sales",
            "description": "is the banner brick product sales in related to the domestic activity (products bought and consumed locally)  for the all selected filters or the context expressed in currency value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Domestic Val Sales], calculate([BB Domestic Val Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Export Unit Prod Sales",
            "description": "is the banner brick product sales in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in unit value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Export Unit Sales], calculate([BB Export Unit Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Export Val Prod Sales",
            "description": "is the banner brick product sales in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in currency value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Export Val Sales], calculate([BB Export Val Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Online Unit Prod Sales",
            "description": "is the banner brick product sales in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in unit value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Online Unit Sales], calculate([BB Online Unit Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Online Val Prod Sales",
            "description": "is the banner brick product sales in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in currency value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Online Val Sales], calculate([BB Online Val Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Promo Unit Prod Sales",
            "description": "is the banner brick product sales in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in unit value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Promo Unit Sales], calculate([BB Promo Unit Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Promo Val Prod Sales",
            "description": "is the banner brick product sales in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in currency value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Promo Val Sales], calculate([BB Promo Val Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Unit Mkt Sales",
            "description": "is the banner brick market sales for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Val Mkt Sales",
            "description": "is the banner brick market sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "VAR p_market =",
              "    CALCULATE (",
              "        [BB Val Sales],",
              "        ALL ( 'Dim_Product'[Product Ownership] ),",
              "        ALLSELECTED ( 'Dim_Product'[APN] ),",
              "        ALLSELECTED ( 'Dim_Product'[Brand] ),",
              "        ALLSELECTED ( 'Dim_Product'[Manufacturer] ),",
              "        ALLSELECTED ( 'Dim_Product'[Pack Long Name] ),",
              "        ALLSELECTED ( 'Dim_Product'[PFC] ),",
              "        ALLSELECTED ( 'Dim_Product'[Sub Brand] )",
              "    )",
              "VAR owner_market =",
              "    CALCULATE ( [BB Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "BB B&M Unit Mkt Sales",
            "description": "is the banner brick market sales in related to brick & mortar Sales activity (products bought through physical store)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB B&M Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB B&M Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB B&M Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB B&M Val Mkt Sales",
            "description": "is the banner brick market sales in related to brick & mortar Sales activity (products bought through physical store) for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB B&M Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB B&M Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB B&M Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Baseline Unit Mkt Sales",
            "description": "is the banner brick market sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Baseline Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Baseline Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Baseline Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Baseline Val Mkt Sales",
            "description": "is the banner brick market sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Baseline Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Baseline Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Baseline Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Domestic Unit Mkt Sales",
            "description": "is the banner brick market sales in related to the domestic activity (products bought and consumed locally)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Domestic Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Domestic Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Domestic Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Domestic Val Mkt Sales",
            "description": "is the banner brick market sales in related to the domestic activity (products bought and consumed locally)  for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Domestic Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Domestic Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Domestic Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Export Unit Mkt Sales",
            "description": "is the banner brick market sales in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Export Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Export Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Export Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Export Val Mkt Sales",
            "description": "is the banner brick market sales in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Export Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Export Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Export Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Online Unit Mkt Sales",
            "description": "is the banner brick market sales in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Online Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Online Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Online Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Online Val Mkt Sales",
            "description": "is the banner brick market sales in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Online Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Online Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Online Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Promo Unit Mkt Sales",
            "description": "is the banner brick market sales in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Promo Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Promo Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Promo Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Promo Val Mkt Sales",
            "description": "is the banner brick market sales in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Promo Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Promo Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Promo Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Unit Comp Sales",
            "description": "is the banner brick competitor sales for the all selected filters or the context expressed in unit value.",
            "expression": "[BB Unit Mkt Sales] - [BB Unit Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Val Comp Sales",
            "description": "is the banner brick competitor sales for the all selected filters or the context expressed in currency value.",
            "expression": "[BB Val Mkt Sales] - [BB Val Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB B&M Unit Comp Sales",
            "description": "is the banner brick competitor sales in related to brick & mortar Sales activity (products bought through physical store)  for the all selected filters or the context expressed in unit value.",
            "expression": "[BB B&M Unit Mkt Sales] - [BB B&M Unit Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB B&M Val Comp Sales",
            "description": "is the banner brick competitor sales in related to brick & mortar Sales activity (products bought through physical store) for the all selected filters or the context expressed in currency value.",
            "expression": "[BB B&M Val Mkt Sales] - [BB B&M Val Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Baseline Unit Comp Sales",
            "description": "is the banner brick competitor sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in unit value.",
            "expression": "[BB Baseline Unit Mkt Sales] - [BB Baseline Unit Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Baseline Val Comp Sales",
            "description": "is the banner brick competitor sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in currency value.",
            "expression": "[BB Baseline Val Mkt Sales] - [BB Baseline Val Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Domestic Unit Comp Sales",
            "description": "is the banner brick competitor sales in related to the domestic activity (products bought and consumed locally)  for the all selected filters or the context expressed in unit value.",
            "expression": "[BB Domestic Unit Mkt Sales] - [BB Domestic Unit Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Domestic Val Comp Sales",
            "description": "is the banner brick competitor sales in related to the domestic activity (products bought and consumed locally)  for the all selected filters or the context expressed in currency value.",
            "expression": "[BB Domestic Val Mkt Sales] - [BB Domestic Val Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Export Unit Comp Sales",
            "description": "is the banner brick competitor sales in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in unit value.",
            "expression": "[BB Export Unit Mkt Sales] - [BB Export Unit Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Export Val Comp Sales",
            "description": "is the banner brick competitor sales in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in currency value.",
            "expression": "[BB Export Val Mkt Sales] - [BB Export Val Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Online Unit Comp Sales",
            "description": "is the banner brick competitor sales in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in unit value.",
            "expression": "[BB Online Unit Mkt Sales] - [BB Online Unit Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Online Val Comp Sales",
            "description": "is the banner brick competitor sales in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in currency value.",
            "expression": "[BB Online Val Mkt Sales] - [BB Online Val Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Promo Unit Comp Sales",
            "description": "is the banner brick competitor sales in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in unit value.",
            "expression": "[BB Promo Unit Mkt Sales] - [BB Promo Unit Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Promo Val Comp Sales",
            "description": "is the banner brick competitor sales in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in currency value.",
            "expression": "[BB Promo Val Mkt Sales] - [BB Promo Val Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Unit % Mkt Shr",
            "description": "is the banner brick product market share for the all selected filters or the context expressed in unit %.",
            "expression": "DIVIDE ( [BB Unit Prod Sales], [BB Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Val % Mkt Shr",
            "description": "is the banner brick product market share for the all selected filters or the context expressed in currency %.",
            "expression": "DIVIDE ( [BB Val Prod Sales], [BB Val Mkt Sales] )",
            "formatString": "0.00%;-0.00%;0.00%",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Percentage\" Accuracy=\"2\" />"
              }
            ]
          },
          {
            "name": "BB B&M Unit % Mkt Shr",
            "description": "is the banner brick product market share in related to brick & mortar Sales activity (products bought through physical store)  for the all selected filters or the context expressed in unit %.",
            "expression": "DIVIDE ( [BB B&M Unit Prod Sales], [BB B&M Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB B&M Val % Mkt Shr",
            "description": "is the banner brick product market share in related to brick & mortar Sales activity (products bought through physical store) for the all selected filters or the context expressed in currency %.",
            "expression": "DIVIDE ( [BB B&M Val Prod Sales], [BB B&M Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Baseline Unit % Mkt Shr",
            "description": "is the banner brick product market share in the absence of any store-level promotional activity for the all selected filters or the context expressed in unit %.",
            "expression": "DIVIDE ( [BB Baseline Unit Prod Sales], [BB Baseline Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Baseline Val % Mkt Shr",
            "description": "is the banner brick product market share in the absence of any store-level promotional activity for the all selected filters or the context expressed in currency %.",
            "expression": "DIVIDE ( [BB Baseline Val Prod Sales], [BB Baseline Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Domestic Unit % Mkt Shr",
            "description": "is the banner brick product market share in related to the domestic activity (products bought and consumed locally)  for the all selected filters or the context expressed in unit %.",
            "expression": "DIVIDE ( [BB Domestic Unit Prod Sales], [BB Domestic Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Domestic Val % Mkt Shr",
            "description": "is the banner brick product market share in related to the domestic activity (products bought and consumed locally)  for the all selected filters or the context expressed in currency %.",
            "expression": "DIVIDE ( [BB Domestic Val Prod Sales], [BB Domestic Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Export Unit % Mkt Shr",
            "description": "is the banner brick product market share in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in unit %.",
            "expression": "DIVIDE ( [BB Export Unit Prod Sales], [BB Export Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Export Val % Mkt Shr",
            "description": "is the banner brick product market share in related to the exporting activity (products bought by Daigou)  for the all selected filters or the context expressed in currency %.",
            "expression": "DIVIDE ( [BB Export Val Prod Sales], [BB Export Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Online Unit % Mkt Shr",
            "description": "is the banner brick product market share in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in unit %.",
            "expression": "DIVIDE ( [BB Online Unit Prod Sales], [BB Online Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Online Val % Mkt Shr",
            "description": "is the banner brick product market share in related to the online Sales activity (products bought through e-commerce channel)  for the all selected filters or the context expressed in currency %.",
            "expression": "DIVIDE ( [BB Online Val Prod Sales], [BB Online Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Promo Unit % Mkt Shr",
            "description": "is the banner brick product market share in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in unit %.",
            "expression": "DIVIDE ( [BB Promo Unit Prod Sales], [BB Promo Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Promo Val % Mkt Shr",
            "description": "is the banner brick product market share in related to the promotional activity (price discounting)  for the all selected filters or the context expressed in currency %.",
            "expression": "DIVIDE ( [BB Promo Val Prod Sales], [BB Promo Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB B&M Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Unit Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Unit Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Unit Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Unit Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Unit Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Unit Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Unit Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Unit Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Val Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Val Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Val Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Val Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Val Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Val Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Val Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Val Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Val Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Val Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Unit Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Unit Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Unit Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Unit Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Unit Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Unit Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Unit Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Unit Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Val Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Val Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Val Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Val Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Val Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Val Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Val Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Val Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Val Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Val Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Unit Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Unit Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Unit Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Unit Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Unit Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Unit Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Unit Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Unit Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Val Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Val Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Val Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Val Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Val Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Val Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Val Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Val Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Val Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Val Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Unit Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Unit Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Unit Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Unit Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Unit Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Unit Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Unit Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Unit Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Val Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Val Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Val Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Val Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Val Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Val Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Val Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Val Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Val Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Val Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Unit Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Unit Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Unit Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Unit Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Unit Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Unit Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Unit Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Unit Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Val Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Val Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Val Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Val Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Val Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Val Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Val Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Val Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Val Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Val Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Unit Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Unit Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Unit Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Unit Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Unit Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Unit Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Unit Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Unit Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Val Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Val Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Val Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Val Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Val Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Val Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Val Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Val Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Val Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Val Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Unit Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Unit Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Unit Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Unit Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Unit Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Unit Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Unit Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Unit Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Val Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Val Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Val Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Val Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Val Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Val Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Val Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Val Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Val Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Val Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([BB B&M Unit % Mkt Shr LY]), blank(), [BB B&M Unit % Mkt Shr] - [BB B&M Unit % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([BB B&M Unit % Mkt Shr PP]), blank(), [BB B&M Unit % Mkt Shr] - [BB B&M Unit % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Unit Comp Sales +/- LY",
            "expression": "if(isblank([BB B&M Unit Comp Sales LY]), blank(), [BB B&M Unit Comp Sales] - [BB B&M Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Unit Comp Sales +/- PP",
            "expression": "if(isblank([BB B&M Unit Comp Sales PP]), blank(), [BB B&M Unit Comp Sales] - [BB B&M Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Unit Mkt Sales +/- LY",
            "expression": "if(isblank([BB B&M Unit Mkt Sales LY]), blank(), [BB B&M Unit Mkt Sales] - [BB B&M Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Unit Mkt Sales +/- PP",
            "expression": "if(isblank([BB B&M Unit Mkt Sales PP]), blank(), [BB B&M Unit Mkt Sales] - [BB B&M Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Unit Prod Sales +/- LY",
            "expression": "if(isblank([BB B&M Unit Prod Sales LY]), blank(), [BB B&M Unit Prod Sales] - [BB B&M Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Unit Prod Sales +/- PP",
            "expression": "if(isblank([BB B&M Unit Prod Sales PP]), blank(), [BB B&M Unit Prod Sales] - [BB B&M Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Unit Sales +/- LY",
            "expression": "if(isblank([BB B&M Unit Sales LY]), blank(), [BB B&M Unit Sales] - [BB B&M Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Unit Sales +/- PP",
            "expression": "if(isblank([BB B&M Unit Sales PP]), blank(), [BB B&M Unit Sales] - [BB B&M Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Val % Mkt Shr +/- LY",
            "expression": "if(isblank([BB B&M Val % Mkt Shr LY]), blank(), [BB B&M Val % Mkt Shr] - [BB B&M Val % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Val % Mkt Shr +/- PP",
            "expression": "if(isblank([BB B&M Val % Mkt Shr PP]), blank(), [BB B&M Val % Mkt Shr] - [BB B&M Val % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Val Comp Sales +/- LY",
            "expression": "if(isblank([BB B&M Val Comp Sales LY]), blank(), [BB B&M Val Comp Sales] - [BB B&M Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Val Comp Sales +/- PP",
            "expression": "if(isblank([BB B&M Val Comp Sales PP]), blank(), [BB B&M Val Comp Sales] - [BB B&M Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Val Mkt Sales +/- LY",
            "expression": "if(isblank([BB B&M Val Mkt Sales LY]), blank(), [BB B&M Val Mkt Sales] - [BB B&M Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Val Mkt Sales +/- PP",
            "expression": "if(isblank([BB B&M Val Mkt Sales PP]), blank(), [BB B&M Val Mkt Sales] - [BB B&M Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Val Prod Sales +/- LY",
            "expression": "if(isblank([BB B&M Val Prod Sales LY]), blank(), [BB B&M Val Prod Sales] - [BB B&M Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Val Prod Sales +/- PP",
            "expression": "if(isblank([BB B&M Val Prod Sales PP]), blank(), [BB B&M Val Prod Sales] - [BB B&M Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Val Sales +/- LY",
            "expression": "if(isblank([BB B&M Val Sales LY]), blank(), [BB B&M Val Sales] - [BB B&M Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Val Sales +/- PP",
            "expression": "if(isblank([BB B&M Val Sales PP]), blank(), [BB B&M Val Sales] - [BB B&M Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Baseline Unit % Mkt Shr LY]), blank(), [BB Baseline Unit % Mkt Shr] - [BB Baseline Unit % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Baseline Unit % Mkt Shr PP]), blank(), [BB Baseline Unit % Mkt Shr] - [BB Baseline Unit % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Unit Comp Sales +/- LY",
            "expression": "if(isblank([BB Baseline Unit Comp Sales LY]), blank(), [BB Baseline Unit Comp Sales] - [BB Baseline Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Unit Comp Sales +/- PP",
            "expression": "if(isblank([BB Baseline Unit Comp Sales PP]), blank(), [BB Baseline Unit Comp Sales] - [BB Baseline Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Unit Mkt Sales +/- LY",
            "expression": "if(isblank([BB Baseline Unit Mkt Sales LY]), blank(), [BB Baseline Unit Mkt Sales] - [BB Baseline Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Unit Mkt Sales +/- PP",
            "expression": "if(isblank([BB Baseline Unit Mkt Sales PP]), blank(), [BB Baseline Unit Mkt Sales] - [BB Baseline Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Unit Prod Sales +/- LY",
            "expression": "if(isblank([BB Baseline Unit Prod Sales LY]), blank(), [BB Baseline Unit Prod Sales] - [BB Baseline Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Unit Prod Sales +/- PP",
            "expression": "if(isblank([BB Baseline Unit Prod Sales PP]), blank(), [BB Baseline Unit Prod Sales] - [BB Baseline Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Unit Sales +/- LY",
            "expression": "if(isblank([BB Baseline Unit Sales LY]), blank(), [BB Baseline Unit Sales] - [BB Baseline Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Unit Sales +/- PP",
            "expression": "if(isblank([BB Baseline Unit Sales PP]), blank(), [BB Baseline Unit Sales] - [BB Baseline Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Val % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Baseline Val % Mkt Shr LY]), blank(), [BB Baseline Val % Mkt Shr] - [BB Baseline Val % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Val % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Baseline Val % Mkt Shr PP]), blank(), [BB Baseline Val % Mkt Shr] - [BB Baseline Val % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Val Comp Sales +/- LY",
            "expression": "if(isblank([BB Baseline Val Comp Sales LY]), blank(), [BB Baseline Val Comp Sales] - [BB Baseline Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Val Comp Sales +/- PP",
            "expression": "if(isblank([BB Baseline Val Comp Sales PP]), blank(), [BB Baseline Val Comp Sales] - [BB Baseline Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Val Mkt Sales +/- LY",
            "expression": "if(isblank([BB Baseline Val Mkt Sales LY]), blank(), [BB Baseline Val Mkt Sales] - [BB Baseline Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Val Mkt Sales +/- PP",
            "expression": "if(isblank([BB Baseline Val Mkt Sales PP]), blank(), [BB Baseline Val Mkt Sales] - [BB Baseline Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Val Prod Sales +/- LY",
            "expression": "if(isblank([BB Baseline Val Prod Sales LY]), blank(), [BB Baseline Val Prod Sales] - [BB Baseline Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Val Prod Sales +/- PP",
            "expression": "if(isblank([BB Baseline Val Prod Sales PP]), blank(), [BB Baseline Val Prod Sales] - [BB Baseline Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Val Sales +/- LY",
            "expression": "if(isblank([BB Baseline Val Sales LY]), blank(), [BB Baseline Val Sales] - [BB Baseline Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Val Sales +/- PP",
            "expression": "if(isblank([BB Baseline Val Sales PP]), blank(), [BB Baseline Val Sales] - [BB Baseline Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Domestic Unit % Mkt Shr LY]), blank(), [BB Domestic Unit % Mkt Shr] - [BB Domestic Unit % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Domestic Unit % Mkt Shr PP]), blank(), [BB Domestic Unit % Mkt Shr] - [BB Domestic Unit % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Unit Comp Sales +/- LY",
            "expression": "if(isblank([BB Domestic Unit Comp Sales LY]), blank(), [BB Domestic Unit Comp Sales] - [BB Domestic Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Unit Comp Sales +/- PP",
            "expression": "if(isblank([BB Domestic Unit Comp Sales PP]), blank(), [BB Domestic Unit Comp Sales] - [BB Domestic Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Unit Mkt Sales +/- LY",
            "expression": "if(isblank([BB Domestic Unit Mkt Sales LY]), blank(), [BB Domestic Unit Mkt Sales] - [BB Domestic Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Unit Mkt Sales +/- PP",
            "expression": "if(isblank([BB Domestic Unit Mkt Sales PP]), blank(), [BB Domestic Unit Mkt Sales] - [BB Domestic Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Unit Prod Sales +/- LY",
            "expression": "if(isblank([BB Domestic Unit Prod Sales LY]), blank(), [BB Domestic Unit Prod Sales] - [BB Domestic Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Unit Prod Sales +/- PP",
            "expression": "if(isblank([BB Domestic Unit Prod Sales PP]), blank(), [BB Domestic Unit Prod Sales] - [BB Domestic Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Unit Sales +/- LY",
            "expression": "if(isblank([BB Domestic Unit Sales LY]), blank(), [BB Domestic Unit Sales] - [BB Domestic Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Unit Sales +/- PP",
            "expression": "if(isblank([BB Domestic Unit Sales PP]), blank(), [BB Domestic Unit Sales] - [BB Domestic Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Val % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Domestic Val % Mkt Shr LY]), blank(), [BB Domestic Val % Mkt Shr] - [BB Domestic Val % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Val % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Domestic Val % Mkt Shr PP]), blank(), [BB Domestic Val % Mkt Shr] - [BB Domestic Val % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Val Comp Sales +/- LY",
            "expression": "if(isblank([BB Domestic Val Comp Sales LY]), blank(), [BB Domestic Val Comp Sales] - [BB Domestic Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Val Comp Sales +/- PP",
            "expression": "if(isblank([BB Domestic Val Comp Sales PP]), blank(), [BB Domestic Val Comp Sales] - [BB Domestic Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Val Mkt Sales +/- LY",
            "expression": "if(isblank([BB Domestic Val Mkt Sales LY]), blank(), [BB Domestic Val Mkt Sales] - [BB Domestic Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Val Mkt Sales +/- PP",
            "expression": "if(isblank([BB Domestic Val Mkt Sales PP]), blank(), [BB Domestic Val Mkt Sales] - [BB Domestic Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Val Prod Sales +/- LY",
            "expression": "if(isblank([BB Domestic Val Prod Sales LY]), blank(), [BB Domestic Val Prod Sales] - [BB Domestic Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Val Prod Sales +/- PP",
            "expression": "if(isblank([BB Domestic Val Prod Sales PP]), blank(), [BB Domestic Val Prod Sales] - [BB Domestic Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Val Sales +/- LY",
            "expression": "if(isblank([BB Domestic Val Sales LY]), blank(), [BB Domestic Val Sales] - [BB Domestic Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Val Sales +/- PP",
            "expression": "if(isblank([BB Domestic Val Sales PP]), blank(), [BB Domestic Val Sales] - [BB Domestic Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Export Unit % Mkt Shr LY]), blank(), [BB Export Unit % Mkt Shr] - [BB Export Unit % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Export Unit % Mkt Shr PP]), blank(), [BB Export Unit % Mkt Shr] - [BB Export Unit % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Unit Comp Sales +/- LY",
            "expression": "if(isblank([BB Export Unit Comp Sales LY]), blank(), [BB Export Unit Comp Sales] - [BB Export Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Unit Comp Sales +/- PP",
            "expression": "if(isblank([BB Export Unit Comp Sales PP]), blank(), [BB Export Unit Comp Sales] - [BB Export Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Unit Mkt Sales +/- LY",
            "expression": "if(isblank([BB Export Unit Mkt Sales LY]), blank(), [BB Export Unit Mkt Sales] - [BB Export Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Unit Mkt Sales +/- PP",
            "expression": "if(isblank([BB Export Unit Mkt Sales PP]), blank(), [BB Export Unit Mkt Sales] - [BB Export Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Unit Prod Sales +/- LY",
            "expression": "if(isblank([BB Export Unit Prod Sales LY]), blank(), [BB Export Unit Prod Sales] - [BB Export Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Unit Prod Sales +/- PP",
            "expression": "if(isblank([BB Export Unit Prod Sales PP]), blank(), [BB Export Unit Prod Sales] - [BB Export Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Unit Sales +/- LY",
            "expression": "if(isblank([BB Export Unit Sales LY]), blank(), [BB Export Unit Sales] - [BB Export Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Unit Sales +/- PP",
            "expression": "if(isblank([BB Export Unit Sales PP]), blank(), [BB Export Unit Sales] - [BB Export Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Val % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Export Val % Mkt Shr LY]), blank(), [BB Export Val % Mkt Shr] - [BB Export Val % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Val % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Export Val % Mkt Shr PP]), blank(), [BB Export Val % Mkt Shr] - [BB Export Val % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Val Comp Sales +/- LY",
            "expression": "if(isblank([BB Export Val Comp Sales LY]), blank(), [BB Export Val Comp Sales] - [BB Export Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Val Comp Sales +/- PP",
            "expression": "if(isblank([BB Export Val Comp Sales PP]), blank(), [BB Export Val Comp Sales] - [BB Export Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Val Mkt Sales +/- LY",
            "expression": "if(isblank([BB Export Val Mkt Sales LY]), blank(), [BB Export Val Mkt Sales] - [BB Export Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Val Mkt Sales +/- PP",
            "expression": "if(isblank([BB Export Val Mkt Sales PP]), blank(), [BB Export Val Mkt Sales] - [BB Export Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Val Prod Sales +/- LY",
            "expression": "if(isblank([BB Export Val Prod Sales LY]), blank(), [BB Export Val Prod Sales] - [BB Export Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Val Prod Sales +/- PP",
            "expression": "if(isblank([BB Export Val Prod Sales PP]), blank(), [BB Export Val Prod Sales] - [BB Export Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Val Sales +/- LY",
            "expression": "if(isblank([BB Export Val Sales LY]), blank(), [BB Export Val Sales] - [BB Export Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Val Sales +/- PP",
            "expression": "if(isblank([BB Export Val Sales PP]), blank(), [BB Export Val Sales] - [BB Export Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Online Unit % Mkt Shr LY]), blank(), [BB Online Unit % Mkt Shr] - [BB Online Unit % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Online Unit % Mkt Shr PP]), blank(), [BB Online Unit % Mkt Shr] - [BB Online Unit % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Unit Comp Sales +/- LY",
            "expression": "if(isblank([BB Online Unit Comp Sales LY]), blank(), [BB Online Unit Comp Sales] - [BB Online Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Unit Comp Sales +/- PP",
            "expression": "if(isblank([BB Online Unit Comp Sales PP]), blank(), [BB Online Unit Comp Sales] - [BB Online Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Unit Mkt Sales +/- LY",
            "expression": "if(isblank([BB Online Unit Mkt Sales LY]), blank(), [BB Online Unit Mkt Sales] - [BB Online Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Unit Mkt Sales +/- PP",
            "expression": "if(isblank([BB Online Unit Mkt Sales PP]), blank(), [BB Online Unit Mkt Sales] - [BB Online Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Unit Prod Sales +/- LY",
            "expression": "if(isblank([BB Online Unit Prod Sales LY]), blank(), [BB Online Unit Prod Sales] - [BB Online Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Unit Prod Sales +/- PP",
            "expression": "if(isblank([BB Online Unit Prod Sales PP]), blank(), [BB Online Unit Prod Sales] - [BB Online Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Unit Sales +/- LY",
            "expression": "if(isblank([BB Online Unit Sales LY]), blank(), [BB Online Unit Sales] - [BB Online Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Unit Sales +/- PP",
            "expression": "if(isblank([BB Online Unit Sales PP]), blank(), [BB Online Unit Sales] - [BB Online Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Val % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Online Val % Mkt Shr LY]), blank(), [BB Online Val % Mkt Shr] - [BB Online Val % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Val % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Online Val % Mkt Shr PP]), blank(), [BB Online Val % Mkt Shr] - [BB Online Val % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Val Comp Sales +/- LY",
            "expression": "if(isblank([BB Online Val Comp Sales LY]), blank(), [BB Online Val Comp Sales] - [BB Online Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Val Comp Sales +/- PP",
            "expression": "if(isblank([BB Online Val Comp Sales PP]), blank(), [BB Online Val Comp Sales] - [BB Online Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Val Mkt Sales +/- LY",
            "expression": "if(isblank([BB Online Val Mkt Sales LY]), blank(), [BB Online Val Mkt Sales] - [BB Online Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Val Mkt Sales +/- PP",
            "expression": "if(isblank([BB Online Val Mkt Sales PP]), blank(), [BB Online Val Mkt Sales] - [BB Online Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Val Prod Sales +/- LY",
            "expression": "if(isblank([BB Online Val Prod Sales LY]), blank(), [BB Online Val Prod Sales] - [BB Online Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Val Prod Sales +/- PP",
            "expression": "if(isblank([BB Online Val Prod Sales PP]), blank(), [BB Online Val Prod Sales] - [BB Online Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Val Sales +/- LY",
            "expression": "if(isblank([BB Online Val Sales LY]), blank(), [BB Online Val Sales] - [BB Online Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Val Sales +/- PP",
            "expression": "if(isblank([BB Online Val Sales PP]), blank(), [BB Online Val Sales] - [BB Online Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Promo Unit % Mkt Shr LY]), blank(), [BB Promo Unit % Mkt Shr] - [BB Promo Unit % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Promo Unit % Mkt Shr PP]), blank(), [BB Promo Unit % Mkt Shr] - [BB Promo Unit % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Unit Comp Sales +/- LY",
            "expression": "if(isblank([BB Promo Unit Comp Sales LY]), blank(), [BB Promo Unit Comp Sales] - [BB Promo Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Unit Comp Sales +/- PP",
            "expression": "if(isblank([BB Promo Unit Comp Sales PP]), blank(), [BB Promo Unit Comp Sales] - [BB Promo Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Unit Mkt Sales +/- LY",
            "expression": "if(isblank([BB Promo Unit Mkt Sales LY]), blank(), [BB Promo Unit Mkt Sales] - [BB Promo Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Unit Mkt Sales +/- PP",
            "expression": "if(isblank([BB Promo Unit Mkt Sales PP]), blank(), [BB Promo Unit Mkt Sales] - [BB Promo Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Unit Prod Sales +/- LY",
            "expression": "if(isblank([BB Promo Unit Prod Sales LY]), blank(), [BB Promo Unit Prod Sales] - [BB Promo Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Unit Prod Sales +/- PP",
            "expression": "if(isblank([BB Promo Unit Prod Sales PP]), blank(), [BB Promo Unit Prod Sales] - [BB Promo Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Unit Sales +/- LY",
            "expression": "if(isblank([BB Promo Unit Sales LY]), blank(), [BB Promo Unit Sales] - [BB Promo Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Unit Sales +/- PP",
            "expression": "if(isblank([BB Promo Unit Sales PP]), blank(), [BB Promo Unit Sales] - [BB Promo Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Val % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Promo Val % Mkt Shr LY]), blank(), [BB Promo Val % Mkt Shr] - [BB Promo Val % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Val % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Promo Val % Mkt Shr PP]), blank(), [BB Promo Val % Mkt Shr] - [BB Promo Val % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Val Comp Sales +/- LY",
            "expression": "if(isblank([BB Promo Val Comp Sales LY]), blank(), [BB Promo Val Comp Sales] - [BB Promo Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Val Comp Sales +/- PP",
            "expression": "if(isblank([BB Promo Val Comp Sales PP]), blank(), [BB Promo Val Comp Sales] - [BB Promo Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Val Mkt Sales +/- LY",
            "expression": "if(isblank([BB Promo Val Mkt Sales LY]), blank(), [BB Promo Val Mkt Sales] - [BB Promo Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Val Mkt Sales +/- PP",
            "expression": "if(isblank([BB Promo Val Mkt Sales PP]), blank(), [BB Promo Val Mkt Sales] - [BB Promo Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Val Prod Sales +/- LY",
            "expression": "if(isblank([BB Promo Val Prod Sales LY]), blank(), [BB Promo Val Prod Sales] - [BB Promo Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Val Prod Sales +/- PP",
            "expression": "if(isblank([BB Promo Val Prod Sales PP]), blank(), [BB Promo Val Prod Sales] - [BB Promo Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Val Sales +/- LY",
            "expression": "if(isblank([BB Promo Val Sales LY]), blank(), [BB Promo Val Sales] - [BB Promo Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Val Sales +/- PP",
            "expression": "if(isblank([BB Promo Val Sales PP]), blank(), [BB Promo Val Sales] - [BB Promo Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Unit % Mkt Shr LY]), blank(), [BB Unit % Mkt Shr] - [BB Unit % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Unit % Mkt Shr PP]), blank(), [BB Unit % Mkt Shr] - [BB Unit % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Unit Comp Sales +/- LY",
            "expression": "if(isblank([BB Unit Comp Sales LY]), blank(), [BB Unit Comp Sales] - [BB Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Unit Comp Sales +/- PP",
            "expression": "if(isblank([BB Unit Comp Sales PP]), blank(), [BB Unit Comp Sales] - [BB Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Unit Mkt Sales +/- LY",
            "expression": "if(isblank([BB Unit Mkt Sales LY]), blank(), [BB Unit Mkt Sales] - [BB Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Unit Mkt Sales +/- PP",
            "expression": "if(isblank([BB Unit Mkt Sales PP]), blank(), [BB Unit Mkt Sales] - [BB Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Unit Prod Sales +/- LY",
            "expression": "if(isblank([BB Unit Prod Sales LY]), blank(), [BB Unit Prod Sales] - [BB Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Unit Prod Sales +/- PP",
            "expression": "if(isblank([BB Unit Prod Sales PP]), blank(), [BB Unit Prod Sales] - [BB Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Unit Sales +/- LY",
            "expression": "if(isblank([BB Unit Sales LY]), blank(), [BB Unit Sales] - [BB Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Unit Sales +/- PP",
            "expression": "if(isblank([BB Unit Sales PP]), blank(), [BB Unit Sales] - [BB Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Val % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Val % Mkt Shr LY]), blank(), [BB Val % Mkt Shr] - [BB Val % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Val % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Val % Mkt Shr PP]), blank(), [BB Val % Mkt Shr] - [BB Val % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Val Comp Sales +/- LY",
            "expression": "if(isblank([BB Val Comp Sales LY]), blank(), [BB Val Comp Sales] - [BB Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Val Comp Sales +/- PP",
            "expression": "if(isblank([BB Val Comp Sales PP]), blank(), [BB Val Comp Sales] - [BB Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Val Mkt Sales +/- LY",
            "expression": "if(isblank([BB Val Mkt Sales LY]), blank(), [BB Val Mkt Sales] - [BB Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Val Mkt Sales +/- PP",
            "expression": "if(isblank([BB Val Mkt Sales PP]), blank(), [BB Val Mkt Sales] - [BB Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Val Prod Sales +/- LY",
            "expression": "if(isblank([BB Val Prod Sales LY]), blank(), [BB Val Prod Sales] - [BB Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Val Prod Sales +/- PP",
            "expression": "if(isblank([BB Val Prod Sales PP]), blank(), [BB Val Prod Sales] - [BB Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Val Sales +/- LY",
            "expression": "if(isblank([BB Val Sales LY]), blank(), [BB Val Sales] - [BB Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Val Sales +/- PP",
            "expression": "if(isblank([BB Val Sales PP]), blank(), [BB Val Sales] - [BB Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Unit Comp Sales Gr % vs LY",
            "expression": "divide([BB B&M Unit Comp Sales +/- LY], [BB B&M Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB B&M Unit Comp Sales Gr % vs PP",
            "expression": "divide([BB B&M Unit Comp Sales +/- PP], [BB B&M Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB B&M Unit Mkt Sales Gr % vs LY",
            "expression": "divide([BB B&M Unit Mkt Sales +/- LY], [BB B&M Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB B&M Unit Mkt Sales Gr % vs PP",
            "expression": "divide([BB B&M Unit Mkt Sales +/- PP], [BB B&M Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB B&M Unit Prod Sales Gr % vs LY",
            "expression": "divide([BB B&M Unit Prod Sales +/- LY], [BB B&M Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB B&M Unit Prod Sales Gr % vs PP",
            "expression": "divide([BB B&M Unit Prod Sales +/- PP], [BB B&M Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB B&M Unit Sales Gr % vs LY",
            "expression": "divide([BB B&M Unit Sales +/- LY], [BB B&M Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB B&M Unit Sales Gr % vs PP",
            "expression": "divide([BB B&M Unit Sales +/- PP], [BB B&M Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB B&M Val Comp Sales Gr % vs LY",
            "expression": "divide([BB B&M Val Comp Sales +/- LY], [BB B&M Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB B&M Val Comp Sales Gr % vs PP",
            "expression": "divide([BB B&M Val Comp Sales +/- PP], [BB B&M Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB B&M Val Mkt Sales Gr % vs LY",
            "expression": "divide([BB B&M Val Mkt Sales +/- LY], [BB B&M Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB B&M Val Mkt Sales Gr % vs PP",
            "expression": "divide([BB B&M Val Mkt Sales +/- PP], [BB B&M Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB B&M Val Prod Sales Gr % vs LY",
            "expression": "divide([BB B&M Val Prod Sales +/- LY], [BB B&M Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB B&M Val Prod Sales Gr % vs PP",
            "expression": "divide([BB B&M Val Prod Sales +/- PP], [BB B&M Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB B&M Val Sales Gr % vs LY",
            "expression": "divide([BB B&M Val Sales +/- LY], [BB B&M Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB B&M Val Sales Gr % vs PP",
            "expression": "divide([BB B&M Val Sales +/- PP], [BB B&M Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Baseline Unit Comp Sales Gr % vs LY",
            "expression": "divide([BB Baseline Unit Comp Sales +/- LY], [BB Baseline Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Baseline Unit Comp Sales Gr % vs PP",
            "expression": "divide([BB Baseline Unit Comp Sales +/- PP], [BB Baseline Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Baseline Unit Mkt Sales Gr % vs LY",
            "expression": "divide([BB Baseline Unit Mkt Sales +/- LY], [BB Baseline Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Baseline Unit Mkt Sales Gr % vs PP",
            "expression": "divide([BB Baseline Unit Mkt Sales +/- PP], [BB Baseline Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Baseline Unit Prod Sales Gr % vs LY",
            "expression": "divide([BB Baseline Unit Prod Sales +/- LY], [BB Baseline Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Baseline Unit Prod Sales Gr % vs PP",
            "expression": "divide([BB Baseline Unit Prod Sales +/- PP], [BB Baseline Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Baseline Unit Sales Gr % vs LY",
            "expression": "divide([BB Baseline Unit Sales +/- LY], [BB Baseline Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Baseline Unit Sales Gr % vs PP",
            "expression": "divide([BB Baseline Unit Sales +/- PP], [BB Baseline Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Baseline Val Comp Sales Gr % vs LY",
            "expression": "divide([BB Baseline Val Comp Sales +/- LY], [BB Baseline Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Baseline Val Comp Sales Gr % vs PP",
            "expression": "divide([BB Baseline Val Comp Sales +/- PP], [BB Baseline Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Baseline Val Mkt Sales Gr % vs LY",
            "expression": "divide([BB Baseline Val Mkt Sales +/- LY], [BB Baseline Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Baseline Val Mkt Sales Gr % vs PP",
            "expression": "divide([BB Baseline Val Mkt Sales +/- PP], [BB Baseline Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Baseline Val Prod Sales Gr % vs LY",
            "expression": "divide([BB Baseline Val Prod Sales +/- LY], [BB Baseline Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Baseline Val Prod Sales Gr % vs PP",
            "expression": "divide([BB Baseline Val Prod Sales +/- PP], [BB Baseline Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Baseline Val Sales Gr % vs LY",
            "expression": "divide([BB Baseline Val Sales +/- LY], [BB Baseline Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Baseline Val Sales Gr % vs PP",
            "expression": "divide([BB Baseline Val Sales +/- PP], [BB Baseline Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Domestic Unit Comp Sales Gr % vs LY",
            "expression": "divide([BB Domestic Unit Comp Sales +/- LY], [BB Domestic Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Domestic Unit Comp Sales Gr % vs PP",
            "expression": "divide([BB Domestic Unit Comp Sales +/- PP], [BB Domestic Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Domestic Unit Mkt Sales Gr % vs LY",
            "expression": "divide([BB Domestic Unit Mkt Sales +/- LY], [BB Domestic Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Domestic Unit Mkt Sales Gr % vs PP",
            "expression": "divide([BB Domestic Unit Mkt Sales +/- PP], [BB Domestic Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Domestic Unit Prod Sales Gr % vs LY",
            "expression": "divide([BB Domestic Unit Prod Sales +/- LY], [BB Domestic Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Domestic Unit Prod Sales Gr % vs PP",
            "expression": "divide([BB Domestic Unit Prod Sales +/- PP], [BB Domestic Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Domestic Unit Sales Gr % vs LY",
            "expression": "divide([BB Domestic Unit Sales +/- LY], [BB Domestic Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Domestic Unit Sales Gr % vs PP",
            "expression": "divide([BB Domestic Unit Sales +/- PP], [BB Domestic Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Domestic Val Comp Sales Gr % vs LY",
            "expression": "divide([BB Domestic Val Comp Sales +/- LY], [BB Domestic Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Domestic Val Comp Sales Gr % vs PP",
            "expression": "divide([BB Domestic Val Comp Sales +/- PP], [BB Domestic Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Domestic Val Mkt Sales Gr % vs LY",
            "expression": "divide([BB Domestic Val Mkt Sales +/- LY], [BB Domestic Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Domestic Val Mkt Sales Gr % vs PP",
            "expression": "divide([BB Domestic Val Mkt Sales +/- PP], [BB Domestic Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Domestic Val Prod Sales Gr % vs LY",
            "expression": "divide([BB Domestic Val Prod Sales +/- LY], [BB Domestic Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Domestic Val Prod Sales Gr % vs PP",
            "expression": "divide([BB Domestic Val Prod Sales +/- PP], [BB Domestic Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Domestic Val Sales Gr % vs LY",
            "expression": "divide([BB Domestic Val Sales +/- LY], [BB Domestic Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Domestic Val Sales Gr % vs PP",
            "expression": "divide([BB Domestic Val Sales +/- PP], [BB Domestic Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Export Unit Comp Sales Gr % vs LY",
            "expression": "divide([BB Export Unit Comp Sales +/- LY], [BB Export Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Export Unit Comp Sales Gr % vs PP",
            "expression": "divide([BB Export Unit Comp Sales +/- PP], [BB Export Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Export Unit Mkt Sales Gr % vs LY",
            "expression": "divide([BB Export Unit Mkt Sales +/- LY], [BB Export Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Export Unit Mkt Sales Gr % vs PP",
            "expression": "divide([BB Export Unit Mkt Sales +/- PP], [BB Export Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Export Unit Prod Sales Gr % vs LY",
            "expression": "divide([BB Export Unit Prod Sales +/- LY], [BB Export Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Export Unit Prod Sales Gr % vs PP",
            "expression": "divide([BB Export Unit Prod Sales +/- PP], [BB Export Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Export Unit Sales Gr % vs LY",
            "expression": "divide([BB Export Unit Sales +/- LY], [BB Export Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Export Unit Sales Gr % vs PP",
            "expression": "divide([BB Export Unit Sales +/- PP], [BB Export Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Export Val Comp Sales Gr % vs LY",
            "expression": "divide([BB Export Val Comp Sales +/- LY], [BB Export Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Export Val Comp Sales Gr % vs PP",
            "expression": "divide([BB Export Val Comp Sales +/- PP], [BB Export Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Export Val Mkt Sales Gr % vs LY",
            "expression": "divide([BB Export Val Mkt Sales +/- LY], [BB Export Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Export Val Mkt Sales Gr % vs PP",
            "expression": "divide([BB Export Val Mkt Sales +/- PP], [BB Export Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Export Val Prod Sales Gr % vs LY",
            "expression": "divide([BB Export Val Prod Sales +/- LY], [BB Export Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Export Val Prod Sales Gr % vs PP",
            "expression": "divide([BB Export Val Prod Sales +/- PP], [BB Export Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Export Val Sales Gr % vs LY",
            "expression": "divide([BB Export Val Sales +/- LY], [BB Export Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Export Val Sales Gr % vs PP",
            "expression": "divide([BB Export Val Sales +/- PP], [BB Export Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Online Unit Comp Sales Gr % vs LY",
            "expression": "divide([BB Online Unit Comp Sales +/- LY], [BB Online Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Online Unit Comp Sales Gr % vs PP",
            "expression": "divide([BB Online Unit Comp Sales +/- PP], [BB Online Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Online Unit Mkt Sales Gr % vs LY",
            "expression": "divide([BB Online Unit Mkt Sales +/- LY], [BB Online Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Online Unit Mkt Sales Gr % vs PP",
            "expression": "divide([BB Online Unit Mkt Sales +/- PP], [BB Online Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Online Unit Prod Sales Gr % vs LY",
            "expression": "divide([BB Online Unit Prod Sales +/- LY], [BB Online Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Online Unit Prod Sales Gr % vs PP",
            "expression": "divide([BB Online Unit Prod Sales +/- PP], [BB Online Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Online Unit Sales Gr % vs LY",
            "expression": "divide([BB Online Unit Sales +/- LY], [BB Online Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Online Unit Sales Gr % vs PP",
            "expression": "divide([BB Online Unit Sales +/- PP], [BB Online Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Online Val Comp Sales Gr % vs LY",
            "expression": "divide([BB Online Val Comp Sales +/- LY], [BB Online Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Online Val Comp Sales Gr % vs PP",
            "expression": "divide([BB Online Val Comp Sales +/- PP], [BB Online Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Online Val Mkt Sales Gr % vs LY",
            "expression": "divide([BB Online Val Mkt Sales +/- LY], [BB Online Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Online Val Mkt Sales Gr % vs PP",
            "expression": "divide([BB Online Val Mkt Sales +/- PP], [BB Online Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Online Val Prod Sales Gr % vs LY",
            "expression": "divide([BB Online Val Prod Sales +/- LY], [BB Online Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Online Val Prod Sales Gr % vs PP",
            "expression": "divide([BB Online Val Prod Sales +/- PP], [BB Online Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Online Val Sales Gr % vs LY",
            "expression": "divide([BB Online Val Sales +/- LY], [BB Online Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Online Val Sales Gr % vs PP",
            "expression": "divide([BB Online Val Sales +/- PP], [BB Online Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Promo Unit Comp Sales Gr % vs LY",
            "expression": "divide([BB Promo Unit Comp Sales +/- LY], [BB Promo Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Promo Unit Comp Sales Gr % vs PP",
            "expression": "divide([BB Promo Unit Comp Sales +/- PP], [BB Promo Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Promo Unit Mkt Sales Gr % vs LY",
            "expression": "divide([BB Promo Unit Mkt Sales +/- LY], [BB Promo Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Promo Unit Mkt Sales Gr % vs PP",
            "expression": "divide([BB Promo Unit Mkt Sales +/- PP], [BB Promo Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Promo Unit Prod Sales Gr % vs LY",
            "expression": "divide([BB Promo Unit Prod Sales +/- LY], [BB Promo Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Promo Unit Prod Sales Gr % vs PP",
            "expression": "divide([BB Promo Unit Prod Sales +/- PP], [BB Promo Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Promo Unit Sales Gr % vs LY",
            "expression": "divide([BB Promo Unit Sales +/- LY], [BB Promo Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Promo Unit Sales Gr % vs PP",
            "expression": "divide([BB Promo Unit Sales +/- PP], [BB Promo Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Promo Val Comp Sales Gr % vs LY",
            "expression": "divide([BB Promo Val Comp Sales +/- LY], [BB Promo Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Promo Val Comp Sales Gr % vs PP",
            "expression": "divide([BB Promo Val Comp Sales +/- PP], [BB Promo Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Promo Val Mkt Sales Gr % vs LY",
            "expression": "divide([BB Promo Val Mkt Sales +/- LY], [BB Promo Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Promo Val Mkt Sales Gr % vs PP",
            "expression": "divide([BB Promo Val Mkt Sales +/- PP], [BB Promo Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Promo Val Prod Sales Gr % vs LY",
            "expression": "divide([BB Promo Val Prod Sales +/- LY], [BB Promo Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Promo Val Prod Sales Gr % vs PP",
            "expression": "divide([BB Promo Val Prod Sales +/- PP], [BB Promo Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Promo Val Sales Gr % vs LY",
            "expression": "divide([BB Promo Val Sales +/- LY], [BB Promo Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Promo Val Sales Gr % vs PP",
            "expression": "divide([BB Promo Val Sales +/- PP], [BB Promo Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Unit Comp Sales Gr % vs LY",
            "expression": "divide([BB Unit Comp Sales +/- LY], [BB Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Unit Comp Sales Gr % vs PP",
            "expression": "divide([BB Unit Comp Sales +/- PP], [BB Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Unit Mkt Sales Gr % vs LY",
            "expression": "divide([BB Unit Mkt Sales +/- LY], [BB Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Unit Mkt Sales Gr % vs PP",
            "expression": "divide([BB Unit Mkt Sales +/- PP], [BB Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Unit Prod Sales Gr % vs LY",
            "expression": "divide([BB Unit Prod Sales +/- LY], [BB Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Unit Prod Sales Gr % vs PP",
            "expression": "divide([BB Unit Prod Sales +/- PP], [BB Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Unit Sales Gr % vs LY",
            "expression": "divide([BB Unit Sales +/- LY], [BB Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Unit Sales Gr % vs PP",
            "expression": "divide([BB Unit Sales +/- PP], [BB Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Val Comp Sales Gr % vs LY",
            "expression": "divide([BB Val Comp Sales +/- LY], [BB Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Val Comp Sales Gr % vs PP",
            "expression": "divide([BB Val Comp Sales +/- PP], [BB Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Val Mkt Sales Gr % vs LY",
            "expression": "divide([BB Val Mkt Sales +/- LY], [BB Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Val Mkt Sales Gr % vs PP",
            "expression": "divide([BB Val Mkt Sales +/- PP], [BB Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Val Prod Sales Gr % vs LY",
            "expression": "divide([BB Val Prod Sales +/- LY], [BB Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Val Prod Sales Gr % vs PP",
            "expression": "divide([BB Val Prod Sales +/- PP], [BB Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Val Sales Gr % vs LY",
            "expression": "divide([BB Val Sales +/- LY], [BB Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Val Sales Gr % vs PP",
            "expression": "divide([BB Val Sales +/- PP], [BB Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "Base BB Incremental Val Sales",
            "expression": "if([Base BB Val Sales] - [Base BB Baseline Val Sales Interim] >= 0, [Base BB Val Sales] - [Base BB Baseline Val Sales Interim])",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Incremental Unit Sales",
            "expression": "if([Base BB Unit Sales] - [Base BB Baseline Unit Sales Interim] >= 0, [Base BB Unit Sales] - [Base BB Baseline Unit Sales Interim])",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Lost Unit Sales",
            "expression": "if([Base BB Unit Sales] - [Base BB Baseline Unit Sales Interim] < 0, [Base BB Baseline Unit Sales Interim] -  [Base BB Unit Sales])",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Lost Val Sales",
            "expression": "if([Base BB Val Sales] - [Base BB Baseline Val Sales Interim] < 0, [Base BB Baseline Val Sales Interim] - [Base BB Val Sales])",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Non Promo Val Sales",
            "expression": "if([Base BB Promo Val Sales] > 0, [Base BB Val Sales] - [Base BB Promo Val Sales])",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Non Promo Unit Sales",
            "expression": "if([Base BB Promo Unit Sales] > 0, [Base BB Unit Sales] - [Base BB Promo Unit Sales])",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "BB Incremental Unit Comp Sales",
            "description": "is the incremental banner brick competitor sales in addition to store-level baseline sales for the all selected filters or the context expressed in unit value.",
            "expression": "[BB Incremental Unit Mkt Sales] - [BB Incremental Unit Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Incremental Unit Mkt Sales",
            "description": "is the incremental banner brick market sales in addition to store-level baseline sales for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Incremental Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Incremental Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Incremental Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Incremental Unit Prod Sales",
            "description": "is the incremental banner brick product sales in addition to store-level baseline sales for the all selected filters or the context expressed in unit value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Incremental Unit Sales], calculate([BB Incremental Unit Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Incremental Unit Sales",
            "description": "is the total incremental banner brick sales in addition to store-level baseline sales for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Incremental Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Incremental Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Incremental Val Comp Sales",
            "description": "is the incremental banner brick competitor sales in addition to store-level baseline sales for the all selected filters or the context expressed in currency value.",
            "expression": "[BB Incremental Val Mkt Sales] - [BB Incremental Val Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Incremental Val Mkt Sales",
            "description": "is the incremental banner brick market sales in addition to store-level baseline sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Incremental Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Incremental Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Incremental Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Incremental Val Prod Sales",
            "description": "is the incremental banner brick product sales in addition to store-level baseline sales for the all selected filters or the context expressed in currency value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Incremental Val Sales], calculate([BB Incremental Val Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Incremental Val Sales",
            "description": "is the total incremental banner brick sales in addition to store-level baseline sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Incremental Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Incremental Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Lost Unit Comp Sales",
            "description": "is the lost banner brick competitor sales comparing to the should-be store-level baseline sales for the all selected filters or the context expressed in unit value.",
            "expression": "[BB Lost Unit Mkt Sales] - [BB Lost Unit Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Lost Unit Mkt Sales",
            "description": "is the lost banner brick market sales comparing to the should-be store-level baseline sales for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Lost Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Lost Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Lost Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Lost Unit Prod Sales",
            "description": "is the lost banner brick product sales comparing to the should-be store-level baseline sales for the all selected filters or the context expressed in unit value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Lost Unit Sales], calculate([BB Lost Unit Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Lost Unit Sales",
            "description": "is the total lost banner brick sales comparing to the should-be store-level baseline sales for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Lost Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Lost Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Lost Val Comp Sales",
            "description": "is the lost banner brick competitor sales comparing to the should-be store-level baseline sales for the all selected filters or the context expressed in currency value.",
            "expression": "[BB Lost Val Mkt Sales] - [BB Lost Val Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Lost Val Mkt Sales",
            "description": "is the lost banner brick market sales comparing to the should-be store-level baseline sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Lost Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Lost Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Lost Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Lost Val Prod Sales",
            "description": "is the lost banner brick product sales comparing to the should-be store-level baseline sales for the all selected filters or the context expressed in currency value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Lost Val Sales], calculate([BB Lost Val Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Lost Val Sales",
            "description": "is the total lost banner brick sales comparing to the should-be store-level baseline sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Lost Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Lost Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Non Promo Unit Comp Sales",
            "description": "is the banner brick competitor sales in related to the Non Promotional activity (no price discounting)  for the all selected filters or the context expressed in unit value.",
            "expression": "[BB Non Promo Unit Mkt Sales] - [BB Non Promo Unit Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Non Promo Unit Mkt Sales",
            "description": "is the banner brick market sales in related to the Non Promotional activity (no price discounting)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Non Promo Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Non Promo Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Non Promo Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Non Promo Unit Prod Sales",
            "description": "is the banner brick product sales in related to the Non Promotional activity (no price discounting)  for the all selected filters or the context expressed in unit value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Non Promo Unit Sales], calculate([BB Non Promo Unit Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Non Promo Unit Sales",
            "description": "is the total banner brick sales in related to the Non Promotional activity (no price discounting)  for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Non Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Non Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Non Promo Val Comp Sales",
            "description": "is the banner brick competitor sales in related to the Non Promotional activity (no price discounting)  for the all selected filters or the context expressed in currency value.",
            "expression": "[BB Non Promo Val Mkt Sales] - [BB Non Promo Val Prod Sales]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Non Promo Val Mkt Sales",
            "description": "is the banner brick market sales in related to the Non Promotional activity (no price discounting)  for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Non Promo Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [BB Non Promo Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Non Promo Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Non Promo Val Prod Sales",
            "description": "is the banner brick product sales in related to the Non Promotional activity (no price discounting)  for the all selected filters or the context expressed in currency value.",
            "expression": "if(or([f_SKUSelected], [f_ProductOwnership]), [BB Non Promo Val Sales], calculate([BB Non Promo Val Sales], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Non Promo Val Sales",
            "description": "is the total banner brick sales in related to the Non Promotional activity (no price discounting)  for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Non Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Non Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Incremental Unit % Mkt Shr",
            "description": "is the incremental banner brick product market share in addition to store-level baseline sales for the all selected filters or the context expressed in unit %.",
            "expression": "DIVIDE ( [BB Incremental Unit Prod Sales], [BB Incremental Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Incremental Val % Mkt Shr",
            "description": "is the incremental banner brick product market share in addition to store-level baseline sales for the all selected filters or the context expressed in currency %.",
            "expression": "DIVIDE ( [BB Incremental Val Prod Sales], [BB Incremental Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Lost Unit % Mkt Shr",
            "description": "is the lost banner brick product market sharecomparing to the should-be store-level baseline sales for the all selected filters or the context expressed in unit %.",
            "expression": "DIVIDE ( [BB Lost Unit Prod Sales], [BB Lost Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Lost Val % Mkt Shr",
            "description": "is the lost banner brick product market share comparing to the should-be store-level baseline sales for the all selected filters or the context expressed in currency %.",
            "expression": "DIVIDE ( [BB Lost Val Prod Sales], [BB Lost Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Non Promo Unit % Mkt Shr",
            "description": "is the banner brick product market share in related to the Non Promotional activity (no price discounting)  for the all selected filters or the context expressed in unit %.",
            "expression": "DIVIDE ( [BB Non Promo Unit Prod Sales], [BB Non Promo Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Non Promo Val % Mkt Shr",
            "description": "is the banner brick product market share in related to the Non Promotional activity (no price discounting)  for the all selected filters or the context expressed in currency %.",
            "expression": "DIVIDE ( [BB Non Promo Val Prod Sales], [BB Non Promo Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB B&M Val Comp Sales %",
            "description": "The percentage(%) of BB B&M Val Comp Sales to its market value sales",
            "expression": "DIVIDE ( [BB B&M Val Comp Sales], [BB B&M Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB B&M Val Prod Sales %",
            "description": "The percentage(%) of BB B&M Val Prod Sales to its market value sales",
            "expression": "DIVIDE ( [BB B&M Val Prod Sales], [BB B&M Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Baseline Val Comp Sales %",
            "description": "The percentage(%) of BB Baseline Val Comp Sales to its market value sales",
            "expression": "DIVIDE ( [BB Baseline Val Comp Sales], [BB Baseline Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Baseline Val Prod Sales %",
            "description": "The percentage(%) of BB Baseline Val Prod Sales to its market value sales",
            "expression": "DIVIDE ( [BB Baseline Val Prod Sales], [BB Baseline Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Domestic Val Comp Sales %",
            "description": "The percentage(%) of BB Domestic Val Comp Sales to its market value sales",
            "expression": "DIVIDE ( [BB Domestic Val Comp Sales], [BB Domestic Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Domestic Val Prod Sales %",
            "description": "The percentage(%) of BB Domestic Val Prod Sales to its market value sales",
            "expression": "DIVIDE ( [BB Domestic Val Prod Sales], [BB Domestic Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Export Val Comp Sales %",
            "description": "The percentage(%) of BB Export Val Comp Sales to its market value sales",
            "expression": "DIVIDE ( [BB Export Val Comp Sales], [BB Export Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Export Val Prod Sales %",
            "description": "The percentage(%) of BB Export Val Prod Sales to its market value sales",
            "expression": "DIVIDE ( [BB Export Val Prod Sales], [BB Export Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Incremental Val Comp Sales %",
            "description": "The percentage(%) of BB Incremental Val Comp Sales to its market value sales",
            "expression": "DIVIDE ( [BB Incremental Val Comp Sales], [BB Incremental Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Incremental Val Prod Sales %",
            "description": "The percentage(%) of BB Incremental Val Prod Sales to its market value sales",
            "expression": "DIVIDE ( [BB Incremental Val Prod Sales], [BB Incremental Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Lost Val Comp Sales %",
            "description": "The percentage(%) of BB Lost Val Comp Sales to its market value sales",
            "expression": "DIVIDE ( [BB Lost Val Comp Sales], [BB Lost Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Lost Val Prod Sales %",
            "description": "The percentage(%) of BB Lost Val Prod Sales to its market value sales",
            "expression": "DIVIDE ( [BB Lost Val Prod Sales], [BB Lost Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Non Promo Val Comp Sales %",
            "description": "The percentage(%) of BB Non Promo Val Comp Sales to its market value sales",
            "expression": "DIVIDE ( [BB Non Promo Val Comp Sales], [BB Non Promo Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Non Promo Val Prod Sales %",
            "description": "The percentage(%) of BB Non Promo Val Prod Sales to its market value sales",
            "expression": "DIVIDE ( [BB Non Promo Val Prod Sales], [BB Non Promo Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Online Val Comp Sales %",
            "description": "The percentage(%) of BB Online Val Comp Sales to its market value sales",
            "expression": "DIVIDE ( [BB Online Val Comp Sales], [BB Online Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Online Val Prod Sales %",
            "description": "The percentage(%) of BB Online Val Prod Sales to its market value sales",
            "expression": "DIVIDE ( [BB Online Val Prod Sales], [BB Online Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Promo Val Comp Sales %",
            "description": "The percentage(%) of BB Promo Val Comp Sales to its market value sales",
            "expression": "DIVIDE ( [BB Promo Val Comp Sales], [BB Promo Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Promo Val Prod Sales %",
            "description": "The percentage(%) of BB Promo Val Prod Sales to its market value sales",
            "expression": "DIVIDE ( [BB Promo Val Prod Sales], [BB Promo Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Val Comp Sales %",
            "description": "The percentage(%) of BB Val Comp Sales to its market value sales",
            "expression": "DIVIDE ( [BB Val Comp Sales], [BB Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Val Prod Sales %",
            "description": "The percentage(%) of BB Val Prod Sales to its market value sales",
            "expression": "DIVIDE ( [BB Val Prod Sales], [BB Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB B&M Unit Comp Sales %",
            "description": "The percentage(%) of BB B&M Unit Comp Sales to its market unit sales",
            "expression": "DIVIDE ( [BB B&M Unit Comp Sales], [BB B&M Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB B&M Unit Prod Sales %",
            "description": "The percentage(%) of BB B&M Unit Prod Sales to its market unit sales",
            "expression": "DIVIDE ( [BB B&M Unit Prod Sales], [BB B&M Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Baseline Unit Comp Sales %",
            "description": "The percentage(%) of BB Baseline Unit Comp Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Baseline Unit Comp Sales], [BB Baseline Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Baseline Unit Prod Sales %",
            "description": "The percentage(%) of BB Baseline Unit Prod Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Baseline Unit Prod Sales], [BB Baseline Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Domestic Unit Comp Sales %",
            "description": "The percentage(%) of BB Domestic Unit Comp Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Domestic Unit Comp Sales], [BB Domestic Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Domestic Unit Prod Sales %",
            "description": "The percentage(%) of BB Domestic Unit Prod Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Domestic Unit Prod Sales], [BB Domestic Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Export Unit Comp Sales %",
            "description": "The percentage(%) of BB Export Unit Comp Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Export Unit Comp Sales], [BB Export Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Export Unit Prod Sales %",
            "description": "The percentage(%) of BB Export Unit Prod Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Export Unit Prod Sales], [BB Export Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Incremental Unit Comp Sales %",
            "description": "The percentage(%) of BB Incremental Unit Comp Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Incremental Unit Comp Sales], [BB Incremental Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Incremental Unit Prod Sales %",
            "description": "The percentage(%) of BB Incremental Unit Prod Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Incremental Unit Prod Sales], [BB Incremental Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Lost Unit Comp Sales %",
            "description": "The percentage(%) of BB Lost Unit Comp Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Lost Unit Comp Sales], [BB Lost Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Lost Unit Prod Sales %",
            "description": "The percentage(%) of BB Lost Unit Prod Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Lost Unit Prod Sales], [BB Lost Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Non Promo Unit Comp Sales %",
            "description": "The percentage(%) of BB Non Promo Unit Comp Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Non Promo Unit Comp Sales], [BB Non Promo Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Non Promo Unit Prod Sales %",
            "description": "The percentage(%) of BB Non Promo Unit Prod Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Non Promo Unit Prod Sales], [BB Non Promo Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Online Unit Comp Sales %",
            "description": "The percentage(%) of BB Online Unit Comp Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Online Unit Comp Sales], [BB Online Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Online Unit Prod Sales %",
            "description": "The percentage(%) of BB Online Unit Prod Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Online Unit Prod Sales], [BB Online Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Promo Unit Comp Sales %",
            "description": "The percentage(%) of BB Promo Unit Comp Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Promo Unit Comp Sales], [BB Promo Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Promo Unit Prod Sales %",
            "description": "The percentage(%) of BB Promo Unit Prod Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Promo Unit Prod Sales], [BB Promo Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Unit Comp Sales %",
            "description": "The percentage(%) of BB Unit Comp Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Unit Comp Sales], [BB Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Unit Prod Sales %",
            "description": "The percentage(%) of BB Unit Prod Sales to its market unit sales",
            "expression": "DIVIDE ( [BB Unit Prod Sales], [BB Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB B&M Val Sales %",
            "description": "The percentage(%) of BB B&M Val Sales to its total value sales",
            "expression": "DIVIDE ( [BB B&M Val Sales], [BB Val Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Baseline Val Sales %",
            "description": "The percentage(%) of BB Baseline Val Sales to its total value sales",
            "expression": "DIVIDE ( [BB Baseline Val Sales], [BB Val Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Domestic Val Sales %",
            "description": "The percentage(%) of BB Domestic Val Sales to its total value sales",
            "expression": "DIVIDE ( [BB Domestic Val Sales], [BB Val Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Export Val Sales %",
            "description": "The percentage(%) of BB Export Val Sales to its total value sales",
            "expression": "DIVIDE ( [BB Export Val Sales], [BB Val Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Incremental Val Sales %",
            "description": "The percentage(%) of BB Incremental Val Sales to its total value sales",
            "expression": "DIVIDE ( [BB Incremental Val Sales], [BB Val Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Lost Val Sales %",
            "description": "The percentage(%) of BB Lost Val Sales to its total value sales",
            "expression": "DIVIDE ( [BB Lost Val Sales], [BB Val Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Non Promo Val Sales %",
            "description": "The percentage(%) of BB Non Promo Val Sales to its total value sales",
            "expression": "DIVIDE ( [BB Non Promo Val Sales], [BB Val Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Online Val Sales %",
            "description": "The percentage(%) of BB Online Val Sales to its total value sales",
            "expression": "DIVIDE ( [BB Online Val Sales], [BB Val Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Promo Val Sales %",
            "description": "The percentage(%) of BB Promo Val Sales to its total value sales",
            "expression": "DIVIDE ( [BB Promo Val Sales], [BB Val Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB B&M Unit Sales %",
            "description": "The percentage(%) of BB B&M Unit Sales to its total unit sales",
            "expression": "DIVIDE ( [BB B&M Unit Sales], [BB Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Baseline Unit Sales %",
            "description": "The percentage(%) of BB Baseline Unit Sales to its total unit sales",
            "expression": "DIVIDE ( [BB Baseline Unit Sales], [BB Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Domestic Unit Sales %",
            "description": "The percentage(%) of BB Domestic Unit Sales to its total unit sales",
            "expression": "DIVIDE ( [BB Domestic Unit Sales], [BB Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Export Unit Sales %",
            "description": "The percentage(%) of BB Export Unit Sales to its total unit sales",
            "expression": "DIVIDE ( [BB Export Unit Sales], [BB Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Incremental Unit Sales %",
            "description": "The percentage(%) of BB Incremental Unit Sales to its total unit sales",
            "expression": "DIVIDE ( [BB Incremental Unit Sales], [BB Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Lost Unit Sales %",
            "description": "The percentage(%) of BB Lost Unit Sales to its total unit sales",
            "expression": "DIVIDE ( [BB Lost Unit Sales], [BB Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Non Promo Unit Sales %",
            "description": "The percentage(%) of BB Non Promo Unit Sales to its total unit sales",
            "expression": "DIVIDE ( [BB Non Promo Unit Sales], [BB Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Online Unit Sales %",
            "description": "The percentage(%) of BB Online Unit Sales to its total unit sales",
            "expression": "DIVIDE ( [BB Online Unit Sales], [BB Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Promo Unit Sales %",
            "description": "The percentage(%) of BB Promo Unit Sales to its total unit sales",
            "expression": "DIVIDE ( [BB Promo Unit Sales], [BB Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Temp Holder"
          },
          {
            "name": "BB Incremental Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Unit Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Unit Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Unit Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Unit Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Unit Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Unit Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Unit Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Unit Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Unit Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Unit Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Unit Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Unit Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Unit Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Unit Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Val Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Val Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Val Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Val Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Val Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Val Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Val Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Val Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Val Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Val Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Val Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Val Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Val Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Val Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Val Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Incremental Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Incremental Val Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Incremental Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Unit Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Unit Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Unit Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Unit Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Unit Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Unit Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Unit Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Unit Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Unit Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Unit Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Unit Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Unit Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Unit Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Unit Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Val Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Val Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Val Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Val Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Val Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Val Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Val Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Val Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Val Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Val Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Val Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Val Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Val Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Val Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Lost Val Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Lost Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Lost Val Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Lost Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Unit Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Unit Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Unit Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Unit Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Unit Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Unit Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Unit Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Unit Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Unit Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Unit Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Unit Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Unit Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Unit Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Unit Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Unit Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Unit Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Unit Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Unit Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Val Comp Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Val Comp Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Val Comp Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Val Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Val Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Val Mkt Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Val Mkt Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Val Mkt Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Val Prod Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Val Prod Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Val Prod Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Val Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Val Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Val Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Val Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Val Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Val Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Non Promo Val Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Non Promo Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Non Promo Val Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Non Promo Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Incremental Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Incremental Unit % Mkt Shr LY]), blank(), [BB Incremental Unit % Mkt Shr] - [BB Incremental Unit % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Incremental Unit % Mkt Shr PP]), blank(), [BB Incremental Unit % Mkt Shr] - [BB Incremental Unit % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Unit Comp Sales +/- LY",
            "expression": "if(isblank([BB Incremental Unit Comp Sales LY]), blank(), [BB Incremental Unit Comp Sales] - [BB Incremental Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Unit Comp Sales +/- PP",
            "expression": "if(isblank([BB Incremental Unit Comp Sales PP]), blank(), [BB Incremental Unit Comp Sales] - [BB Incremental Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Unit Comp Sales % +/- LY",
            "expression": "if(isblank([BB Incremental Unit Comp Sales % LY]), blank(), [BB Incremental Unit Comp Sales %] - [BB Incremental Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Unit Comp Sales % +/- PP",
            "expression": "if(isblank([BB Incremental Unit Comp Sales % PP]), blank(), [BB Incremental Unit Comp Sales %] - [BB Incremental Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Unit Mkt Sales +/- LY",
            "expression": "if(isblank([BB Incremental Unit Mkt Sales LY]), blank(), [BB Incremental Unit Mkt Sales] - [BB Incremental Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Unit Mkt Sales +/- PP",
            "expression": "if(isblank([BB Incremental Unit Mkt Sales PP]), blank(), [BB Incremental Unit Mkt Sales] - [BB Incremental Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Unit Prod Sales +/- LY",
            "expression": "if(isblank([BB Incremental Unit Prod Sales LY]), blank(), [BB Incremental Unit Prod Sales] - [BB Incremental Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Unit Prod Sales +/- PP",
            "expression": "if(isblank([BB Incremental Unit Prod Sales PP]), blank(), [BB Incremental Unit Prod Sales] - [BB Incremental Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Unit Prod Sales % +/- LY",
            "expression": "if(isblank([BB Incremental Unit Prod Sales % LY]), blank(), [BB Incremental Unit Prod Sales %] - [BB Incremental Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Unit Prod Sales % +/- PP",
            "expression": "if(isblank([BB Incremental Unit Prod Sales % PP]), blank(), [BB Incremental Unit Prod Sales %] - [BB Incremental Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Unit Sales +/- LY",
            "expression": "if(isblank([BB Incremental Unit Sales LY]), blank(), [BB Incremental Unit Sales] - [BB Incremental Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Unit Sales +/- PP",
            "expression": "if(isblank([BB Incremental Unit Sales PP]), blank(), [BB Incremental Unit Sales] - [BB Incremental Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Unit Sales % +/- LY",
            "expression": "if(isblank([BB Incremental Unit Sales % LY]), blank(), [BB Incremental Unit Sales %] - [BB Incremental Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Unit Sales % +/- PP",
            "expression": "if(isblank([BB Incremental Unit Sales % PP]), blank(), [BB Incremental Unit Sales %] - [BB Incremental Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Val % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Incremental Val % Mkt Shr LY]), blank(), [BB Incremental Val % Mkt Shr] - [BB Incremental Val % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Val % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Incremental Val % Mkt Shr PP]), blank(), [BB Incremental Val % Mkt Shr] - [BB Incremental Val % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Val Comp Sales +/- LY",
            "expression": "if(isblank([BB Incremental Val Comp Sales LY]), blank(), [BB Incremental Val Comp Sales] - [BB Incremental Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Val Comp Sales +/- PP",
            "expression": "if(isblank([BB Incremental Val Comp Sales PP]), blank(), [BB Incremental Val Comp Sales] - [BB Incremental Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Val Comp Sales % +/- LY",
            "expression": "if(isblank([BB Incremental Val Comp Sales % LY]), blank(), [BB Incremental Val Comp Sales %] - [BB Incremental Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Val Comp Sales % +/- PP",
            "expression": "if(isblank([BB Incremental Val Comp Sales % PP]), blank(), [BB Incremental Val Comp Sales %] - [BB Incremental Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Val Mkt Sales +/- LY",
            "expression": "if(isblank([BB Incremental Val Mkt Sales LY]), blank(), [BB Incremental Val Mkt Sales] - [BB Incremental Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Val Mkt Sales +/- PP",
            "expression": "if(isblank([BB Incremental Val Mkt Sales PP]), blank(), [BB Incremental Val Mkt Sales] - [BB Incremental Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Val Prod Sales +/- LY",
            "expression": "if(isblank([BB Incremental Val Prod Sales LY]), blank(), [BB Incremental Val Prod Sales] - [BB Incremental Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Val Prod Sales +/- PP",
            "expression": "if(isblank([BB Incremental Val Prod Sales PP]), blank(), [BB Incremental Val Prod Sales] - [BB Incremental Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Val Prod Sales % +/- LY",
            "expression": "if(isblank([BB Incremental Val Prod Sales % LY]), blank(), [BB Incremental Val Prod Sales %] - [BB Incremental Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Val Prod Sales % +/- PP",
            "expression": "if(isblank([BB Incremental Val Prod Sales % PP]), blank(), [BB Incremental Val Prod Sales %] - [BB Incremental Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Val Sales +/- LY",
            "expression": "if(isblank([BB Incremental Val Sales LY]), blank(), [BB Incremental Val Sales] - [BB Incremental Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Val Sales +/- PP",
            "expression": "if(isblank([BB Incremental Val Sales PP]), blank(), [BB Incremental Val Sales] - [BB Incremental Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Val Sales % +/- LY",
            "expression": "if(isblank([BB Incremental Val Sales % LY]), blank(), [BB Incremental Val Sales %] - [BB Incremental Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Incremental Val Sales % +/- PP",
            "expression": "if(isblank([BB Incremental Val Sales % PP]), blank(), [BB Incremental Val Sales %] - [BB Incremental Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Lost Unit % Mkt Shr LY]), blank(), [BB Lost Unit % Mkt Shr] - [BB Lost Unit % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Lost Unit % Mkt Shr PP]), blank(), [BB Lost Unit % Mkt Shr] - [BB Lost Unit % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Unit Comp Sales +/- LY",
            "expression": "if(isblank([BB Lost Unit Comp Sales LY]), blank(), [BB Lost Unit Comp Sales] - [BB Lost Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Unit Comp Sales +/- PP",
            "expression": "if(isblank([BB Lost Unit Comp Sales PP]), blank(), [BB Lost Unit Comp Sales] - [BB Lost Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Unit Comp Sales % +/- LY",
            "expression": "if(isblank([BB Lost Unit Comp Sales % LY]), blank(), [BB Lost Unit Comp Sales %] - [BB Lost Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Unit Comp Sales % +/- PP",
            "expression": "if(isblank([BB Lost Unit Comp Sales % PP]), blank(), [BB Lost Unit Comp Sales %] - [BB Lost Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Unit Mkt Sales +/- LY",
            "expression": "if(isblank([BB Lost Unit Mkt Sales LY]), blank(), [BB Lost Unit Mkt Sales] - [BB Lost Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Unit Mkt Sales +/- PP",
            "expression": "if(isblank([BB Lost Unit Mkt Sales PP]), blank(), [BB Lost Unit Mkt Sales] - [BB Lost Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Unit Prod Sales +/- LY",
            "expression": "if(isblank([BB Lost Unit Prod Sales LY]), blank(), [BB Lost Unit Prod Sales] - [BB Lost Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Unit Prod Sales +/- PP",
            "expression": "if(isblank([BB Lost Unit Prod Sales PP]), blank(), [BB Lost Unit Prod Sales] - [BB Lost Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Unit Prod Sales % +/- LY",
            "expression": "if(isblank([BB Lost Unit Prod Sales % LY]), blank(), [BB Lost Unit Prod Sales %] - [BB Lost Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Unit Prod Sales % +/- PP",
            "expression": "if(isblank([BB Lost Unit Prod Sales % PP]), blank(), [BB Lost Unit Prod Sales %] - [BB Lost Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Unit Sales +/- LY",
            "expression": "if(isblank([BB Lost Unit Sales LY]), blank(), [BB Lost Unit Sales] - [BB Lost Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Unit Sales +/- PP",
            "expression": "if(isblank([BB Lost Unit Sales PP]), blank(), [BB Lost Unit Sales] - [BB Lost Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Unit Sales % +/- LY",
            "expression": "if(isblank([BB Lost Unit Sales % LY]), blank(), [BB Lost Unit Sales %] - [BB Lost Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Unit Sales % +/- PP",
            "expression": "if(isblank([BB Lost Unit Sales % PP]), blank(), [BB Lost Unit Sales %] - [BB Lost Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Val % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Lost Val % Mkt Shr LY]), blank(), [BB Lost Val % Mkt Shr] - [BB Lost Val % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Val % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Lost Val % Mkt Shr PP]), blank(), [BB Lost Val % Mkt Shr] - [BB Lost Val % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Val Comp Sales +/- LY",
            "expression": "if(isblank([BB Lost Val Comp Sales LY]), blank(), [BB Lost Val Comp Sales] - [BB Lost Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Val Comp Sales +/- PP",
            "expression": "if(isblank([BB Lost Val Comp Sales PP]), blank(), [BB Lost Val Comp Sales] - [BB Lost Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Val Comp Sales % +/- LY",
            "expression": "if(isblank([BB Lost Val Comp Sales % LY]), blank(), [BB Lost Val Comp Sales %] - [BB Lost Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Val Comp Sales % +/- PP",
            "expression": "if(isblank([BB Lost Val Comp Sales % PP]), blank(), [BB Lost Val Comp Sales %] - [BB Lost Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Val Mkt Sales +/- LY",
            "expression": "if(isblank([BB Lost Val Mkt Sales LY]), blank(), [BB Lost Val Mkt Sales] - [BB Lost Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Val Mkt Sales +/- PP",
            "expression": "if(isblank([BB Lost Val Mkt Sales PP]), blank(), [BB Lost Val Mkt Sales] - [BB Lost Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Val Prod Sales +/- LY",
            "expression": "if(isblank([BB Lost Val Prod Sales LY]), blank(), [BB Lost Val Prod Sales] - [BB Lost Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Val Prod Sales +/- PP",
            "expression": "if(isblank([BB Lost Val Prod Sales PP]), blank(), [BB Lost Val Prod Sales] - [BB Lost Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Val Prod Sales % +/- LY",
            "expression": "if(isblank([BB Lost Val Prod Sales % LY]), blank(), [BB Lost Val Prod Sales %] - [BB Lost Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Val Prod Sales % +/- PP",
            "expression": "if(isblank([BB Lost Val Prod Sales % PP]), blank(), [BB Lost Val Prod Sales %] - [BB Lost Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Val Sales +/- LY",
            "expression": "if(isblank([BB Lost Val Sales LY]), blank(), [BB Lost Val Sales] - [BB Lost Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Val Sales +/- PP",
            "expression": "if(isblank([BB Lost Val Sales PP]), blank(), [BB Lost Val Sales] - [BB Lost Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Lost Val Sales % +/- LY",
            "expression": "if(isblank([BB Lost Val Sales % LY]), blank(), [BB Lost Val Sales %] - [BB Lost Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Lost Val Sales % +/- PP",
            "expression": "if(isblank([BB Lost Val Sales % PP]), blank(), [BB Lost Val Sales %] - [BB Lost Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Non Promo Unit % Mkt Shr LY]), blank(), [BB Non Promo Unit % Mkt Shr] - [BB Non Promo Unit % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Non Promo Unit % Mkt Shr PP]), blank(), [BB Non Promo Unit % Mkt Shr] - [BB Non Promo Unit % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Unit Comp Sales +/- LY",
            "expression": "if(isblank([BB Non Promo Unit Comp Sales LY]), blank(), [BB Non Promo Unit Comp Sales] - [BB Non Promo Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Unit Comp Sales +/- PP",
            "expression": "if(isblank([BB Non Promo Unit Comp Sales PP]), blank(), [BB Non Promo Unit Comp Sales] - [BB Non Promo Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Unit Comp Sales % +/- LY",
            "expression": "if(isblank([BB Non Promo Unit Comp Sales % LY]), blank(), [BB Non Promo Unit Comp Sales %] - [BB Non Promo Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Unit Comp Sales % +/- PP",
            "expression": "if(isblank([BB Non Promo Unit Comp Sales % PP]), blank(), [BB Non Promo Unit Comp Sales %] - [BB Non Promo Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Unit Mkt Sales +/- LY",
            "expression": "if(isblank([BB Non Promo Unit Mkt Sales LY]), blank(), [BB Non Promo Unit Mkt Sales] - [BB Non Promo Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Unit Mkt Sales +/- PP",
            "expression": "if(isblank([BB Non Promo Unit Mkt Sales PP]), blank(), [BB Non Promo Unit Mkt Sales] - [BB Non Promo Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Unit Prod Sales +/- LY",
            "expression": "if(isblank([BB Non Promo Unit Prod Sales LY]), blank(), [BB Non Promo Unit Prod Sales] - [BB Non Promo Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Unit Prod Sales +/- PP",
            "expression": "if(isblank([BB Non Promo Unit Prod Sales PP]), blank(), [BB Non Promo Unit Prod Sales] - [BB Non Promo Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Unit Prod Sales % +/- LY",
            "expression": "if(isblank([BB Non Promo Unit Prod Sales % LY]), blank(), [BB Non Promo Unit Prod Sales %] - [BB Non Promo Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Unit Prod Sales % +/- PP",
            "expression": "if(isblank([BB Non Promo Unit Prod Sales % PP]), blank(), [BB Non Promo Unit Prod Sales %] - [BB Non Promo Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Unit Sales +/- LY",
            "expression": "if(isblank([BB Non Promo Unit Sales LY]), blank(), [BB Non Promo Unit Sales] - [BB Non Promo Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Unit Sales +/- PP",
            "expression": "if(isblank([BB Non Promo Unit Sales PP]), blank(), [BB Non Promo Unit Sales] - [BB Non Promo Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Unit Sales % +/- LY",
            "expression": "if(isblank([BB Non Promo Unit Sales % LY]), blank(), [BB Non Promo Unit Sales %] - [BB Non Promo Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Unit Sales % +/- PP",
            "expression": "if(isblank([BB Non Promo Unit Sales % PP]), blank(), [BB Non Promo Unit Sales %] - [BB Non Promo Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Val % Mkt Shr +/- LY",
            "expression": "if(isblank([BB Non Promo Val % Mkt Shr LY]), blank(), [BB Non Promo Val % Mkt Shr] - [BB Non Promo Val % Mkt Shr LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Val % Mkt Shr +/- PP",
            "expression": "if(isblank([BB Non Promo Val % Mkt Shr PP]), blank(), [BB Non Promo Val % Mkt Shr] - [BB Non Promo Val % Mkt Shr PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Val Comp Sales +/- LY",
            "expression": "if(isblank([BB Non Promo Val Comp Sales LY]), blank(), [BB Non Promo Val Comp Sales] - [BB Non Promo Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Val Comp Sales +/- PP",
            "expression": "if(isblank([BB Non Promo Val Comp Sales PP]), blank(), [BB Non Promo Val Comp Sales] - [BB Non Promo Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Val Comp Sales % +/- LY",
            "expression": "if(isblank([BB Non Promo Val Comp Sales % LY]), blank(), [BB Non Promo Val Comp Sales %] - [BB Non Promo Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Val Comp Sales % +/- PP",
            "expression": "if(isblank([BB Non Promo Val Comp Sales % PP]), blank(), [BB Non Promo Val Comp Sales %] - [BB Non Promo Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Val Mkt Sales +/- LY",
            "expression": "if(isblank([BB Non Promo Val Mkt Sales LY]), blank(), [BB Non Promo Val Mkt Sales] - [BB Non Promo Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Val Mkt Sales +/- PP",
            "expression": "if(isblank([BB Non Promo Val Mkt Sales PP]), blank(), [BB Non Promo Val Mkt Sales] - [BB Non Promo Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Val Prod Sales +/- LY",
            "expression": "if(isblank([BB Non Promo Val Prod Sales LY]), blank(), [BB Non Promo Val Prod Sales] - [BB Non Promo Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Val Prod Sales +/- PP",
            "expression": "if(isblank([BB Non Promo Val Prod Sales PP]), blank(), [BB Non Promo Val Prod Sales] - [BB Non Promo Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Val Prod Sales % +/- LY",
            "expression": "if(isblank([BB Non Promo Val Prod Sales % LY]), blank(), [BB Non Promo Val Prod Sales %] - [BB Non Promo Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Val Prod Sales % +/- PP",
            "expression": "if(isblank([BB Non Promo Val Prod Sales % PP]), blank(), [BB Non Promo Val Prod Sales %] - [BB Non Promo Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Val Sales +/- LY",
            "expression": "if(isblank([BB Non Promo Val Sales LY]), blank(), [BB Non Promo Val Sales] - [BB Non Promo Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Val Sales +/- PP",
            "expression": "if(isblank([BB Non Promo Val Sales PP]), blank(), [BB Non Promo Val Sales] - [BB Non Promo Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Non Promo Val Sales % +/- LY",
            "expression": "if(isblank([BB Non Promo Val Sales % LY]), blank(), [BB Non Promo Val Sales %] - [BB Non Promo Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Non Promo Val Sales % +/- PP",
            "expression": "if(isblank([BB Non Promo Val Sales % PP]), blank(), [BB Non Promo Val Sales %] - [BB Non Promo Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Incremental Unit Comp Sales Gr % vs LY",
            "expression": "divide([BB Incremental Unit Comp Sales +/- LY], [BB Incremental Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Unit Comp Sales Gr % vs PP",
            "expression": "divide([BB Incremental Unit Comp Sales +/- PP], [BB Incremental Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Unit Comp Sales % Gr % vs LY",
            "expression": "divide([BB Incremental Unit Comp Sales % +/- LY], [BB Incremental Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Unit Comp Sales % Gr % vs PP",
            "expression": "divide([BB Incremental Unit Comp Sales % +/- PP], [BB Incremental Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Unit Mkt Sales Gr % vs LY",
            "expression": "divide([BB Incremental Unit Mkt Sales +/- LY], [BB Incremental Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Unit Mkt Sales Gr % vs PP",
            "expression": "divide([BB Incremental Unit Mkt Sales +/- PP], [BB Incremental Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Unit Prod Sales Gr % vs LY",
            "expression": "divide([BB Incremental Unit Prod Sales +/- LY], [BB Incremental Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Unit Prod Sales Gr % vs PP",
            "expression": "divide([BB Incremental Unit Prod Sales +/- PP], [BB Incremental Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Unit Prod Sales % Gr % vs LY",
            "expression": "divide([BB Incremental Unit Prod Sales % +/- LY], [BB Incremental Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Unit Prod Sales % Gr % vs PP",
            "expression": "divide([BB Incremental Unit Prod Sales % +/- PP], [BB Incremental Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Unit Sales Gr % vs LY",
            "expression": "divide([BB Incremental Unit Sales +/- LY], [BB Incremental Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Unit Sales Gr % vs PP",
            "expression": "divide([BB Incremental Unit Sales +/- PP], [BB Incremental Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Unit Sales % Gr % vs LY",
            "expression": "divide([BB Incremental Unit Sales % +/- LY], [BB Incremental Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Unit Sales % Gr % vs PP",
            "expression": "divide([BB Incremental Unit Sales % +/- PP], [BB Incremental Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Val Comp Sales Gr % vs LY",
            "expression": "divide([BB Incremental Val Comp Sales +/- LY], [BB Incremental Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Val Comp Sales Gr % vs PP",
            "expression": "divide([BB Incremental Val Comp Sales +/- PP], [BB Incremental Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Val Comp Sales % Gr % vs LY",
            "expression": "divide([BB Incremental Val Comp Sales % +/- LY], [BB Incremental Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Val Comp Sales % Gr % vs PP",
            "expression": "divide([BB Incremental Val Comp Sales % +/- PP], [BB Incremental Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Val Mkt Sales Gr % vs LY",
            "expression": "divide([BB Incremental Val Mkt Sales +/- LY], [BB Incremental Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Val Mkt Sales Gr % vs PP",
            "expression": "divide([BB Incremental Val Mkt Sales +/- PP], [BB Incremental Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Val Prod Sales Gr % vs LY",
            "expression": "divide([BB Incremental Val Prod Sales +/- LY], [BB Incremental Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Val Prod Sales Gr % vs PP",
            "expression": "divide([BB Incremental Val Prod Sales +/- PP], [BB Incremental Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Val Prod Sales % Gr % vs LY",
            "expression": "divide([BB Incremental Val Prod Sales % +/- LY], [BB Incremental Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Val Prod Sales % Gr % vs PP",
            "expression": "divide([BB Incremental Val Prod Sales % +/- PP], [BB Incremental Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Val Sales Gr % vs LY",
            "expression": "divide([BB Incremental Val Sales +/- LY], [BB Incremental Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Val Sales Gr % vs PP",
            "expression": "divide([BB Incremental Val Sales +/- PP], [BB Incremental Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Incremental Val Sales % Gr % vs LY",
            "expression": "divide([BB Incremental Val Sales % +/- LY], [BB Incremental Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Incremental Val Sales % Gr % vs PP",
            "expression": "divide([BB Incremental Val Sales % +/- PP], [BB Incremental Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Unit Comp Sales Gr % vs LY",
            "expression": "divide([BB Lost Unit Comp Sales +/- LY], [BB Lost Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Unit Comp Sales Gr % vs PP",
            "expression": "divide([BB Lost Unit Comp Sales +/- PP], [BB Lost Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Unit Comp Sales % Gr % vs LY",
            "expression": "divide([BB Lost Unit Comp Sales % +/- LY], [BB Lost Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Unit Comp Sales % Gr % vs PP",
            "expression": "divide([BB Lost Unit Comp Sales % +/- PP], [BB Lost Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Unit Mkt Sales Gr % vs LY",
            "expression": "divide([BB Lost Unit Mkt Sales +/- LY], [BB Lost Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Unit Mkt Sales Gr % vs PP",
            "expression": "divide([BB Lost Unit Mkt Sales +/- PP], [BB Lost Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Unit Prod Sales Gr % vs LY",
            "expression": "divide([BB Lost Unit Prod Sales +/- LY], [BB Lost Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Unit Prod Sales Gr % vs PP",
            "expression": "divide([BB Lost Unit Prod Sales +/- PP], [BB Lost Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Unit Prod Sales % Gr % vs LY",
            "expression": "divide([BB Lost Unit Prod Sales % +/- LY], [BB Lost Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Unit Prod Sales % Gr % vs PP",
            "expression": "divide([BB Lost Unit Prod Sales % +/- PP], [BB Lost Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Unit Sales Gr % vs LY",
            "expression": "divide([BB Lost Unit Sales +/- LY], [BB Lost Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Unit Sales Gr % vs PP",
            "expression": "divide([BB Lost Unit Sales +/- PP], [BB Lost Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Unit Sales % Gr % vs LY",
            "expression": "divide([BB Lost Unit Sales % +/- LY], [BB Lost Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Unit Sales % Gr % vs PP",
            "expression": "divide([BB Lost Unit Sales % +/- PP], [BB Lost Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Val Comp Sales Gr % vs LY",
            "expression": "divide([BB Lost Val Comp Sales +/- LY], [BB Lost Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Val Comp Sales Gr % vs PP",
            "expression": "divide([BB Lost Val Comp Sales +/- PP], [BB Lost Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Val Comp Sales % Gr % vs LY",
            "expression": "divide([BB Lost Val Comp Sales % +/- LY], [BB Lost Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Val Comp Sales % Gr % vs PP",
            "expression": "divide([BB Lost Val Comp Sales % +/- PP], [BB Lost Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Val Mkt Sales Gr % vs LY",
            "expression": "divide([BB Lost Val Mkt Sales +/- LY], [BB Lost Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Val Mkt Sales Gr % vs PP",
            "expression": "divide([BB Lost Val Mkt Sales +/- PP], [BB Lost Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Val Prod Sales Gr % vs LY",
            "expression": "divide([BB Lost Val Prod Sales +/- LY], [BB Lost Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Val Prod Sales Gr % vs PP",
            "expression": "divide([BB Lost Val Prod Sales +/- PP], [BB Lost Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Val Prod Sales % Gr % vs LY",
            "expression": "divide([BB Lost Val Prod Sales % +/- LY], [BB Lost Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Val Prod Sales % Gr % vs PP",
            "expression": "divide([BB Lost Val Prod Sales % +/- PP], [BB Lost Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Val Sales Gr % vs LY",
            "expression": "divide([BB Lost Val Sales +/- LY], [BB Lost Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Val Sales Gr % vs PP",
            "expression": "divide([BB Lost Val Sales +/- PP], [BB Lost Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Lost Val Sales % Gr % vs LY",
            "expression": "divide([BB Lost Val Sales % +/- LY], [BB Lost Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Lost Val Sales % Gr % vs PP",
            "expression": "divide([BB Lost Val Sales % +/- PP], [BB Lost Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Unit Comp Sales Gr % vs LY",
            "expression": "divide([BB Non Promo Unit Comp Sales +/- LY], [BB Non Promo Unit Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Unit Comp Sales Gr % vs PP",
            "expression": "divide([BB Non Promo Unit Comp Sales +/- PP], [BB Non Promo Unit Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Unit Comp Sales % Gr % vs LY",
            "expression": "divide([BB Non Promo Unit Comp Sales % +/- LY], [BB Non Promo Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Unit Comp Sales % Gr % vs PP",
            "expression": "divide([BB Non Promo Unit Comp Sales % +/- PP], [BB Non Promo Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Unit Mkt Sales Gr % vs LY",
            "expression": "divide([BB Non Promo Unit Mkt Sales +/- LY], [BB Non Promo Unit Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Unit Mkt Sales Gr % vs PP",
            "expression": "divide([BB Non Promo Unit Mkt Sales +/- PP], [BB Non Promo Unit Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Unit Prod Sales Gr % vs LY",
            "expression": "divide([BB Non Promo Unit Prod Sales +/- LY], [BB Non Promo Unit Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Unit Prod Sales Gr % vs PP",
            "expression": "divide([BB Non Promo Unit Prod Sales +/- PP], [BB Non Promo Unit Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Unit Prod Sales % Gr % vs LY",
            "expression": "divide([BB Non Promo Unit Prod Sales % +/- LY], [BB Non Promo Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Unit Prod Sales % Gr % vs PP",
            "expression": "divide([BB Non Promo Unit Prod Sales % +/- PP], [BB Non Promo Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Unit Sales Gr % vs LY",
            "expression": "divide([BB Non Promo Unit Sales +/- LY], [BB Non Promo Unit Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Unit Sales Gr % vs PP",
            "expression": "divide([BB Non Promo Unit Sales +/- PP], [BB Non Promo Unit Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Unit Sales % Gr % vs LY",
            "expression": "divide([BB Non Promo Unit Sales % +/- LY], [BB Non Promo Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Unit Sales % Gr % vs PP",
            "expression": "divide([BB Non Promo Unit Sales % +/- PP], [BB Non Promo Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Val Comp Sales Gr % vs LY",
            "expression": "divide([BB Non Promo Val Comp Sales +/- LY], [BB Non Promo Val Comp Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Val Comp Sales Gr % vs PP",
            "expression": "divide([BB Non Promo Val Comp Sales +/- PP], [BB Non Promo Val Comp Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Val Comp Sales % Gr % vs LY",
            "expression": "divide([BB Non Promo Val Comp Sales % +/- LY], [BB Non Promo Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Val Comp Sales % Gr % vs PP",
            "expression": "divide([BB Non Promo Val Comp Sales % +/- PP], [BB Non Promo Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Val Mkt Sales Gr % vs LY",
            "expression": "divide([BB Non Promo Val Mkt Sales +/- LY], [BB Non Promo Val Mkt Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Val Mkt Sales Gr % vs PP",
            "expression": "divide([BB Non Promo Val Mkt Sales +/- PP], [BB Non Promo Val Mkt Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Val Prod Sales Gr % vs LY",
            "expression": "divide([BB Non Promo Val Prod Sales +/- LY], [BB Non Promo Val Prod Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Val Prod Sales Gr % vs PP",
            "expression": "divide([BB Non Promo Val Prod Sales +/- PP], [BB Non Promo Val Prod Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Val Prod Sales % Gr % vs LY",
            "expression": "divide([BB Non Promo Val Prod Sales % +/- LY], [BB Non Promo Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Val Prod Sales % Gr % vs PP",
            "expression": "divide([BB Non Promo Val Prod Sales % +/- PP], [BB Non Promo Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Val Sales Gr % vs LY",
            "expression": "divide([BB Non Promo Val Sales +/- LY], [BB Non Promo Val Sales LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Val Sales Gr % vs PP",
            "expression": "divide([BB Non Promo Val Sales +/- PP], [BB Non Promo Val Sales PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB Non Promo Val Sales % Gr % vs LY",
            "expression": "divide([BB Non Promo Val Sales % +/- LY], [BB Non Promo Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Growth %"
          },
          {
            "name": "BB Non Promo Val Sales % Gr % vs PP",
            "expression": "divide([BB Non Promo Val Sales % +/- PP], [BB Non Promo Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Growth %"
          },
          {
            "name": "BB B&M Unit Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Unit Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Unit Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Unit Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Unit Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Unit Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Val Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Val Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Val Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Val Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Val Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB B&M Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB B&M Val Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB B&M Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Unit Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Unit Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Unit Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Unit Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Unit Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Unit Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Val Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Val Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Val Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Val Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Baseline Val Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Baseline Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Baseline Val Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Baseline Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Unit Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Unit Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Unit Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Unit Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Unit Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Unit Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Val Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Val Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Val Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Val Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Domestic Val Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Domestic Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Domestic Val Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Domestic Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Unit Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Unit Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Unit Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Unit Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Unit Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Unit Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Val Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Val Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Val Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Val Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Export Val Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Export Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Export Val Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Export Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Unit Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Unit Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Unit Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Unit Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Unit Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Unit Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Val Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Val Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Val Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Val Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Online Val Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Online Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Online Val Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Online Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Unit Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Unit Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Unit Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Unit Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Unit Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Unit Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Unit Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Val Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Val Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Val Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Val Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Promo Val Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Promo Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Promo Val Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Promo Val Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Unit Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Unit Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Unit Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Unit Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Unit Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Unit Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Val Comp Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Val Comp Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Val Comp Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB Val Prod Sales % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([BB Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "BB Val Prod Sales % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([BB Val Prod Sales %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "BB B&M Unit Comp Sales % +/- LY",
            "expression": "if(isblank([BB B&M Unit Comp Sales % LY]), blank(), [BB B&M Unit Comp Sales %] - [BB B&M Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Unit Comp Sales % +/- PP",
            "expression": "if(isblank([BB B&M Unit Comp Sales % PP]), blank(), [BB B&M Unit Comp Sales %] - [BB B&M Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Unit Prod Sales % +/- LY",
            "expression": "if(isblank([BB B&M Unit Prod Sales % LY]), blank(), [BB B&M Unit Prod Sales %] - [BB B&M Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Unit Prod Sales % +/- PP",
            "expression": "if(isblank([BB B&M Unit Prod Sales % PP]), blank(), [BB B&M Unit Prod Sales %] - [BB B&M Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Unit Sales % +/- LY",
            "expression": "if(isblank([BB B&M Unit Sales % LY]), blank(), [BB B&M Unit Sales %] - [BB B&M Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Unit Sales % +/- PP",
            "expression": "if(isblank([BB B&M Unit Sales % PP]), blank(), [BB B&M Unit Sales %] - [BB B&M Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Val Comp Sales % +/- LY",
            "expression": "if(isblank([BB B&M Val Comp Sales % LY]), blank(), [BB B&M Val Comp Sales %] - [BB B&M Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Val Comp Sales % +/- PP",
            "expression": "if(isblank([BB B&M Val Comp Sales % PP]), blank(), [BB B&M Val Comp Sales %] - [BB B&M Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Val Prod Sales % +/- LY",
            "expression": "if(isblank([BB B&M Val Prod Sales % LY]), blank(), [BB B&M Val Prod Sales %] - [BB B&M Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Val Prod Sales % +/- PP",
            "expression": "if(isblank([BB B&M Val Prod Sales % PP]), blank(), [BB B&M Val Prod Sales %] - [BB B&M Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB B&M Val Sales % +/- LY",
            "expression": "if(isblank([BB B&M Val Sales % LY]), blank(), [BB B&M Val Sales %] - [BB B&M Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB B&M Val Sales % +/- PP",
            "expression": "if(isblank([BB B&M Val Sales % PP]), blank(), [BB B&M Val Sales %] - [BB B&M Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Unit Comp Sales % +/- LY",
            "expression": "if(isblank([BB Baseline Unit Comp Sales % LY]), blank(), [BB Baseline Unit Comp Sales %] - [BB Baseline Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Unit Comp Sales % +/- PP",
            "expression": "if(isblank([BB Baseline Unit Comp Sales % PP]), blank(), [BB Baseline Unit Comp Sales %] - [BB Baseline Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Unit Prod Sales % +/- LY",
            "expression": "if(isblank([BB Baseline Unit Prod Sales % LY]), blank(), [BB Baseline Unit Prod Sales %] - [BB Baseline Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Unit Prod Sales % +/- PP",
            "expression": "if(isblank([BB Baseline Unit Prod Sales % PP]), blank(), [BB Baseline Unit Prod Sales %] - [BB Baseline Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Unit Sales % +/- LY",
            "expression": "if(isblank([BB Baseline Unit Sales % LY]), blank(), [BB Baseline Unit Sales %] - [BB Baseline Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Unit Sales % +/- PP",
            "expression": "if(isblank([BB Baseline Unit Sales % PP]), blank(), [BB Baseline Unit Sales %] - [BB Baseline Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Val Comp Sales % +/- LY",
            "expression": "if(isblank([BB Baseline Val Comp Sales % LY]), blank(), [BB Baseline Val Comp Sales %] - [BB Baseline Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Val Comp Sales % +/- PP",
            "expression": "if(isblank([BB Baseline Val Comp Sales % PP]), blank(), [BB Baseline Val Comp Sales %] - [BB Baseline Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Val Prod Sales % +/- LY",
            "expression": "if(isblank([BB Baseline Val Prod Sales % LY]), blank(), [BB Baseline Val Prod Sales %] - [BB Baseline Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Val Prod Sales % +/- PP",
            "expression": "if(isblank([BB Baseline Val Prod Sales % PP]), blank(), [BB Baseline Val Prod Sales %] - [BB Baseline Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Baseline Val Sales % +/- LY",
            "expression": "if(isblank([BB Baseline Val Sales % LY]), blank(), [BB Baseline Val Sales %] - [BB Baseline Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Baseline Val Sales % +/- PP",
            "expression": "if(isblank([BB Baseline Val Sales % PP]), blank(), [BB Baseline Val Sales %] - [BB Baseline Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Unit Comp Sales % +/- LY",
            "expression": "if(isblank([BB Domestic Unit Comp Sales % LY]), blank(), [BB Domestic Unit Comp Sales %] - [BB Domestic Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Unit Comp Sales % +/- PP",
            "expression": "if(isblank([BB Domestic Unit Comp Sales % PP]), blank(), [BB Domestic Unit Comp Sales %] - [BB Domestic Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Unit Prod Sales % +/- LY",
            "expression": "if(isblank([BB Domestic Unit Prod Sales % LY]), blank(), [BB Domestic Unit Prod Sales %] - [BB Domestic Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Unit Prod Sales % +/- PP",
            "expression": "if(isblank([BB Domestic Unit Prod Sales % PP]), blank(), [BB Domestic Unit Prod Sales %] - [BB Domestic Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Unit Sales % +/- LY",
            "expression": "if(isblank([BB Domestic Unit Sales % LY]), blank(), [BB Domestic Unit Sales %] - [BB Domestic Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Unit Sales % +/- PP",
            "expression": "if(isblank([BB Domestic Unit Sales % PP]), blank(), [BB Domestic Unit Sales %] - [BB Domestic Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Val Comp Sales % +/- LY",
            "expression": "if(isblank([BB Domestic Val Comp Sales % LY]), blank(), [BB Domestic Val Comp Sales %] - [BB Domestic Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Val Comp Sales % +/- PP",
            "expression": "if(isblank([BB Domestic Val Comp Sales % PP]), blank(), [BB Domestic Val Comp Sales %] - [BB Domestic Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Val Prod Sales % +/- LY",
            "expression": "if(isblank([BB Domestic Val Prod Sales % LY]), blank(), [BB Domestic Val Prod Sales %] - [BB Domestic Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Val Prod Sales % +/- PP",
            "expression": "if(isblank([BB Domestic Val Prod Sales % PP]), blank(), [BB Domestic Val Prod Sales %] - [BB Domestic Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Domestic Val Sales % +/- LY",
            "expression": "if(isblank([BB Domestic Val Sales % LY]), blank(), [BB Domestic Val Sales %] - [BB Domestic Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Domestic Val Sales % +/- PP",
            "expression": "if(isblank([BB Domestic Val Sales % PP]), blank(), [BB Domestic Val Sales %] - [BB Domestic Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Unit Comp Sales % +/- LY",
            "expression": "if(isblank([BB Export Unit Comp Sales % LY]), blank(), [BB Export Unit Comp Sales %] - [BB Export Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Unit Comp Sales % +/- PP",
            "expression": "if(isblank([BB Export Unit Comp Sales % PP]), blank(), [BB Export Unit Comp Sales %] - [BB Export Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Unit Prod Sales % +/- LY",
            "expression": "if(isblank([BB Export Unit Prod Sales % LY]), blank(), [BB Export Unit Prod Sales %] - [BB Export Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Unit Prod Sales % +/- PP",
            "expression": "if(isblank([BB Export Unit Prod Sales % PP]), blank(), [BB Export Unit Prod Sales %] - [BB Export Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Unit Sales % +/- LY",
            "expression": "if(isblank([BB Export Unit Sales % LY]), blank(), [BB Export Unit Sales %] - [BB Export Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Unit Sales % +/- PP",
            "expression": "if(isblank([BB Export Unit Sales % PP]), blank(), [BB Export Unit Sales %] - [BB Export Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Val Comp Sales % +/- LY",
            "expression": "if(isblank([BB Export Val Comp Sales % LY]), blank(), [BB Export Val Comp Sales %] - [BB Export Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Val Comp Sales % +/- PP",
            "expression": "if(isblank([BB Export Val Comp Sales % PP]), blank(), [BB Export Val Comp Sales %] - [BB Export Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Val Prod Sales % +/- LY",
            "expression": "if(isblank([BB Export Val Prod Sales % LY]), blank(), [BB Export Val Prod Sales %] - [BB Export Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Val Prod Sales % +/- PP",
            "expression": "if(isblank([BB Export Val Prod Sales % PP]), blank(), [BB Export Val Prod Sales %] - [BB Export Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Export Val Sales % +/- LY",
            "expression": "if(isblank([BB Export Val Sales % LY]), blank(), [BB Export Val Sales %] - [BB Export Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Export Val Sales % +/- PP",
            "expression": "if(isblank([BB Export Val Sales % PP]), blank(), [BB Export Val Sales %] - [BB Export Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Unit Comp Sales % +/- LY",
            "expression": "if(isblank([BB Online Unit Comp Sales % LY]), blank(), [BB Online Unit Comp Sales %] - [BB Online Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Unit Comp Sales % +/- PP",
            "expression": "if(isblank([BB Online Unit Comp Sales % PP]), blank(), [BB Online Unit Comp Sales %] - [BB Online Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Unit Prod Sales % +/- LY",
            "expression": "if(isblank([BB Online Unit Prod Sales % LY]), blank(), [BB Online Unit Prod Sales %] - [BB Online Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Unit Prod Sales % +/- PP",
            "expression": "if(isblank([BB Online Unit Prod Sales % PP]), blank(), [BB Online Unit Prod Sales %] - [BB Online Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Unit Sales % +/- LY",
            "expression": "if(isblank([BB Online Unit Sales % LY]), blank(), [BB Online Unit Sales %] - [BB Online Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Unit Sales % +/- PP",
            "expression": "if(isblank([BB Online Unit Sales % PP]), blank(), [BB Online Unit Sales %] - [BB Online Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Val Comp Sales % +/- LY",
            "expression": "if(isblank([BB Online Val Comp Sales % LY]), blank(), [BB Online Val Comp Sales %] - [BB Online Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Val Comp Sales % +/- PP",
            "expression": "if(isblank([BB Online Val Comp Sales % PP]), blank(), [BB Online Val Comp Sales %] - [BB Online Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Val Prod Sales % +/- LY",
            "expression": "if(isblank([BB Online Val Prod Sales % LY]), blank(), [BB Online Val Prod Sales %] - [BB Online Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Val Prod Sales % +/- PP",
            "expression": "if(isblank([BB Online Val Prod Sales % PP]), blank(), [BB Online Val Prod Sales %] - [BB Online Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Online Val Sales % +/- LY",
            "expression": "if(isblank([BB Online Val Sales % LY]), blank(), [BB Online Val Sales %] - [BB Online Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Online Val Sales % +/- PP",
            "expression": "if(isblank([BB Online Val Sales % PP]), blank(), [BB Online Val Sales %] - [BB Online Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Unit Comp Sales % +/- LY",
            "expression": "if(isblank([BB Promo Unit Comp Sales % LY]), blank(), [BB Promo Unit Comp Sales %] - [BB Promo Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Unit Comp Sales % +/- PP",
            "expression": "if(isblank([BB Promo Unit Comp Sales % PP]), blank(), [BB Promo Unit Comp Sales %] - [BB Promo Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Unit Prod Sales % +/- LY",
            "expression": "if(isblank([BB Promo Unit Prod Sales % LY]), blank(), [BB Promo Unit Prod Sales %] - [BB Promo Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Unit Prod Sales % +/- PP",
            "expression": "if(isblank([BB Promo Unit Prod Sales % PP]), blank(), [BB Promo Unit Prod Sales %] - [BB Promo Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Unit Sales % +/- LY",
            "expression": "if(isblank([BB Promo Unit Sales % LY]), blank(), [BB Promo Unit Sales %] - [BB Promo Unit Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Unit Sales % +/- PP",
            "expression": "if(isblank([BB Promo Unit Sales % PP]), blank(), [BB Promo Unit Sales %] - [BB Promo Unit Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Val Comp Sales % +/- LY",
            "expression": "if(isblank([BB Promo Val Comp Sales % LY]), blank(), [BB Promo Val Comp Sales %] - [BB Promo Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Val Comp Sales % +/- PP",
            "expression": "if(isblank([BB Promo Val Comp Sales % PP]), blank(), [BB Promo Val Comp Sales %] - [BB Promo Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Val Prod Sales % +/- LY",
            "expression": "if(isblank([BB Promo Val Prod Sales % LY]), blank(), [BB Promo Val Prod Sales %] - [BB Promo Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Val Prod Sales % +/- PP",
            "expression": "if(isblank([BB Promo Val Prod Sales % PP]), blank(), [BB Promo Val Prod Sales %] - [BB Promo Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Promo Val Sales % +/- LY",
            "expression": "if(isblank([BB Promo Val Sales % LY]), blank(), [BB Promo Val Sales %] - [BB Promo Val Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Promo Val Sales % +/- PP",
            "expression": "if(isblank([BB Promo Val Sales % PP]), blank(), [BB Promo Val Sales %] - [BB Promo Val Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Unit Comp Sales % +/- LY",
            "expression": "if(isblank([BB Unit Comp Sales % LY]), blank(), [BB Unit Comp Sales %] - [BB Unit Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Unit Comp Sales % +/- PP",
            "expression": "if(isblank([BB Unit Comp Sales % PP]), blank(), [BB Unit Comp Sales %] - [BB Unit Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Unit Prod Sales % +/- LY",
            "expression": "if(isblank([BB Unit Prod Sales % LY]), blank(), [BB Unit Prod Sales %] - [BB Unit Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Unit Prod Sales % +/- PP",
            "expression": "if(isblank([BB Unit Prod Sales % PP]), blank(), [BB Unit Prod Sales %] - [BB Unit Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Val Comp Sales % +/- LY",
            "expression": "if(isblank([BB Val Comp Sales % LY]), blank(), [BB Val Comp Sales %] - [BB Val Comp Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Val Comp Sales % +/- PP",
            "expression": "if(isblank([BB Val Comp Sales % PP]), blank(), [BB Val Comp Sales %] - [BB Val Comp Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "BB Val Prod Sales % +/- LY",
            "expression": "if(isblank([BB Val Prod Sales % LY]), blank(), [BB Val Prod Sales %] - [BB Val Prod Sales % LY])",
            "isHidden": true,
            "displayFolder": "Year over Year Change"
          },
          {
            "name": "BB Val Prod Sales % +/- PP",
            "expression": "if(isblank([BB Val Prod Sales % PP]), blank(), [BB Val Prod Sales %] - [BB Val Prod Sales % PP])",
            "isHidden": true,
            "displayFolder": "Period over Period Change"
          },
          {
            "name": "Base BB Sellin Val Sales",
            "description": "is the total base sellin sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR source = \"Sellin\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base BB Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "Base BB Sellin Unit Sales",
            "description": "is the total base sellin sales for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR source = \"Sellin\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base BB Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "Base BB Scanout Val Sales",
            "description": "is the total base scanout sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "var source = \"Scanout\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base BB Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "Base BB Scanout Unit Sales",
            "description": "is the total base scanout sales for the all selected filters or the context expressed in Unit value.",
            "expression": [
              "var source = \"Scanout\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base BB Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "Base BB Retail Val Sales",
            "description": "is the total base retail pharmacy sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "VAR channel = \"Retail\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base BB Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        ),",
              "        FILTER ( ALL ( 'Dim_Channel'[Channel] ), 'Dim_Channel'[Channel] = channel )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "Base BB Retail Unit Sales",
            "description": "is the total base retail pharmacy sales for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "VAR channel = \"Retail\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base BB Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        ),",
              "        FILTER ( ALL ( 'Dim_Channel'[Channel] ), 'Dim_Channel'[Channel] = channel )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "Base BB Grocery Val Sales",
            "description": "is the total base grocery sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "VAR channel = \"Grocery\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base BB Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        ),",
              "        FILTER ( ALL ( 'Dim_Channel'[Channel] ), 'Dim_Channel'[Channel] = channel )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "Base BB Grocery Unit Sales",
            "description": "is the total base grocery sales for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "VAR channel = \"Grocery\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base BB Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        ),",
              "        FILTER ( ALL ( 'Dim_Channel'[Channel] ), 'Dim_Channel'[Channel] = channel )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "BB Sellin Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Sellin Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Sellin Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Sellin Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Sellin Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Sellin Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Scanout Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Scanout Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Scanout Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Scanout Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Scanout Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Scanout Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Retail Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Retail Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Retail Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Retail Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Retail Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Retail Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Grocery Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Grocery Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Grocery Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Grocery Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Grocery Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Grocery Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Sellin Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [BB Sellin Val Sales],",
              "    CALCULATE (",
              "        [BB Sellin Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Sellin Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Sellin Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "VAR p_market =",
              "    CALCULATE (",
              "        [BB Sellin Val Sales],",
              "        ALL ( 'Dim_Product'[Product Ownership] ),",
              "        ALLSELECTED ( 'Dim_Product'[APN] ),",
              "        ALLSELECTED ( 'Dim_Product'[Brand] ),",
              "        ALLSELECTED ( 'Dim_Product'[Manufacturer] ),",
              "        ALLSELECTED ( 'Dim_Product'[Pack Long Name] ),",
              "        ALLSELECTED ( 'Dim_Product'[PFC] ),",
              "        ALLSELECTED ( 'Dim_Product'[Sub Brand] )",
              "    )",
              "VAR owner_market =",
              "    CALCULATE ( [BB Sellin Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Sellin Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [BB Sellin Val Sales],",
              "    CALCULATE (",
              "        [BB Sellin Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Sellin Val % Mkt Shr",
            "expression": "DIVIDE ( [BB Sellin Val Prod Sales], [BB Sellin Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Retail Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [BB Retail Unit Sales],",
              "    CALCULATE (",
              "        [BB Retail Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Retail Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Retail Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "VAR p_market =",
              "    CALCULATE (",
              "        [BB Retail Unit Sales],",
              "        ALL ( 'Dim_Product'[Product Ownership] ),",
              "        ALLSELECTED ( 'Dim_Product'[APN] ),",
              "        ALLSELECTED ( 'Dim_Product'[Brand] ),",
              "        ALLSELECTED ( 'Dim_Product'[Manufacturer] ),",
              "        ALLSELECTED ( 'Dim_Product'[Pack Long Name] ),",
              "        ALLSELECTED ( 'Dim_Product'[PFC] ),",
              "        ALLSELECTED ( 'Dim_Product'[Sub Brand] )",
              "    )",
              "VAR owner_market =",
              "    CALCULATE ( [BB Retail Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Retail Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [BB Retail Unit Sales],",
              "    CALCULATE (",
              "        [BB Retail Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Retail Unit % Mkt Shr",
            "expression": "DIVIDE ( [BB Retail Unit Prod Sales], [BB Retail Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Retail Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [BB Retail Val Sales],",
              "    CALCULATE (",
              "        [BB Retail Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Retail Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Retail Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "VAR p_market =",
              "    CALCULATE (",
              "        [BB Retail Val Sales],",
              "        ALL ( 'Dim_Product'[Product Ownership] ),",
              "        ALLSELECTED ( 'Dim_Product'[APN] ),",
              "        ALLSELECTED ( 'Dim_Product'[Brand] ),",
              "        ALLSELECTED ( 'Dim_Product'[Manufacturer] ),",
              "        ALLSELECTED ( 'Dim_Product'[Pack Long Name] ),",
              "        ALLSELECTED ( 'Dim_Product'[PFC] ),",
              "        ALLSELECTED ( 'Dim_Product'[Sub Brand] )",
              "    )",
              "VAR owner_market =",
              "    CALCULATE ( [BB Retail Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Retail Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [BB Retail Val Sales],",
              "    CALCULATE (",
              "        [BB Retail Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Retail Val % Mkt Shr",
            "expression": "DIVIDE ( [BB Retail Val Prod Sales], [BB Retail Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Scanout Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [BB Scanout Unit Sales],",
              "    CALCULATE (",
              "        [BB Scanout Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Scanout Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Scanout Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "VAR p_market =",
              "    CALCULATE (",
              "        [BB Scanout Unit Sales],",
              "        ALL ( 'Dim_Product'[Product Ownership] ),",
              "        ALLSELECTED ( 'Dim_Product'[APN] ),",
              "        ALLSELECTED ( 'Dim_Product'[Brand] ),",
              "        ALLSELECTED ( 'Dim_Product'[Manufacturer] ),",
              "        ALLSELECTED ( 'Dim_Product'[Pack Long Name] ),",
              "        ALLSELECTED ( 'Dim_Product'[PFC] ),",
              "        ALLSELECTED ( 'Dim_Product'[Sub Brand] )",
              "    )",
              "VAR owner_market =",
              "    CALCULATE ( [BB Scanout Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Scanout Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [BB Scanout Unit Sales],",
              "    CALCULATE (",
              "        [BB Scanout Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Scanout Unit % Mkt Shr",
            "expression": "DIVIDE ( [BB Scanout Unit Prod Sales], [BB Scanout Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Scanout Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [BB Scanout Val Sales],",
              "    CALCULATE (",
              "        [BB Scanout Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Scanout Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Scanout Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "VAR p_market =",
              "    CALCULATE (",
              "        [BB Scanout Val Sales],",
              "        ALL ( 'Dim_Product'[Product Ownership] ),",
              "        ALLSELECTED ( 'Dim_Product'[APN] ),",
              "        ALLSELECTED ( 'Dim_Product'[Brand] ),",
              "        ALLSELECTED ( 'Dim_Product'[Manufacturer] ),",
              "        ALLSELECTED ( 'Dim_Product'[Pack Long Name] ),",
              "        ALLSELECTED ( 'Dim_Product'[PFC] ),",
              "        ALLSELECTED ( 'Dim_Product'[Sub Brand] )",
              "    )",
              "VAR owner_market =",
              "    CALCULATE ( [BB Scanout Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Scanout Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [BB Scanout Val Sales],",
              "    CALCULATE (",
              "        [BB Scanout Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Scanout Val % Mkt Shr",
            "expression": "DIVIDE ( [BB Scanout Val Prod Sales], [BB Scanout Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Sellin Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [BB Sellin Unit Sales],",
              "    CALCULATE (",
              "        [BB Sellin Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Sellin Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Sellin Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "VAR p_market =",
              "    CALCULATE (",
              "        [BB Sellin Unit Sales],",
              "        ALL ( 'Dim_Product'[Product Ownership] ),",
              "        ALLSELECTED ( 'Dim_Product'[APN] ),",
              "        ALLSELECTED ( 'Dim_Product'[Brand] ),",
              "        ALLSELECTED ( 'Dim_Product'[Manufacturer] ),",
              "        ALLSELECTED ( 'Dim_Product'[Pack Long Name] ),",
              "        ALLSELECTED ( 'Dim_Product'[PFC] ),",
              "        ALLSELECTED ( 'Dim_Product'[Sub Brand] )",
              "    )",
              "VAR owner_market =",
              "    CALCULATE ( [BB Sellin Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Sellin Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [BB Sellin Unit Sales],",
              "    CALCULATE (",
              "        [BB Sellin Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Sellin Unit % Mkt Shr",
            "expression": "DIVIDE ( [BB Sellin Unit Prod Sales], [BB Sellin Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Grocery Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [BB Grocery Unit Sales],",
              "    CALCULATE (",
              "        [BB Grocery Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Grocery Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Grocery Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "VAR p_market =",
              "    CALCULATE (",
              "        [BB Grocery Unit Sales],",
              "        ALL ( 'Dim_Product'[Product Ownership] ),",
              "        ALLSELECTED ( 'Dim_Product'[APN] ),",
              "        ALLSELECTED ( 'Dim_Product'[Brand] ),",
              "        ALLSELECTED ( 'Dim_Product'[Manufacturer] ),",
              "        ALLSELECTED ( 'Dim_Product'[Pack Long Name] ),",
              "        ALLSELECTED ( 'Dim_Product'[PFC] ),",
              "        ALLSELECTED ( 'Dim_Product'[Sub Brand] )",
              "    )",
              "VAR owner_market =",
              "    CALCULATE ( [BB Grocery Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Grocery Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [BB Grocery Unit Sales],",
              "    CALCULATE (",
              "        [BB Grocery Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Grocery Unit % Mkt Shr",
            "expression": "DIVIDE ( [BB Grocery Unit Prod Sales], [BB Grocery Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Grocery Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [BB Grocery Val Sales],",
              "    CALCULATE (",
              "        [BB Grocery Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Grocery Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [BB Grocery Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "VAR p_market =",
              "    CALCULATE (",
              "        [BB Grocery Val Sales],",
              "        ALL ( 'Dim_Product'[Product Ownership] ),",
              "        ALLSELECTED ( 'Dim_Product'[APN] ),",
              "        ALLSELECTED ( 'Dim_Product'[Brand] ),",
              "        ALLSELECTED ( 'Dim_Product'[Manufacturer] ),",
              "        ALLSELECTED ( 'Dim_Product'[Pack Long Name] ),",
              "        ALLSELECTED ( 'Dim_Product'[PFC] ),",
              "        ALLSELECTED ( 'Dim_Product'[Sub Brand] )",
              "    )",
              "VAR owner_market =",
              "    CALCULATE ( [BB Grocery Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Grocery Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [BB Grocery Val Sales],",
              "    CALCULATE (",
              "        [BB Grocery Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Grocery Val % Mkt Shr",
            "expression": "DIVIDE ( [BB Grocery Val Prod Sales], [BB Grocery Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB B&M Unit Comp Sales Contrib %",
            "expression": "divide([BB B&M Unit Comp Sales], [BB B&M Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB B&M Unit Mkt Sales Contrib %",
            "expression": "divide([BB B&M Unit Mkt Sales], [BB B&M Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB B&M Unit Prod Sales Contrib %",
            "expression": "divide([BB B&M Unit Prod Sales], [BB B&M Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB B&M Val Comp Sales Contrib %",
            "expression": "divide([BB B&M Val Comp Sales], [BB B&M Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB B&M Val Mkt Sales Contrib %",
            "expression": "divide([BB B&M Val Mkt Sales], [BB B&M Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB B&M Val Prod Sales Contrib %",
            "expression": "divide([BB B&M Val Prod Sales], [BB B&M Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Baseline Unit Comp Sales Contrib %",
            "expression": "divide([BB Baseline Unit Comp Sales], [BB Baseline Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Baseline Unit Mkt Sales Contrib %",
            "expression": "divide([BB Baseline Unit Mkt Sales], [BB Baseline Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Baseline Unit Prod Sales Contrib %",
            "expression": "divide([BB Baseline Unit Prod Sales], [BB Baseline Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Baseline Val Comp Sales Contrib %",
            "expression": "divide([BB Baseline Val Comp Sales], [BB Baseline Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Baseline Val Mkt Sales Contrib %",
            "expression": "divide([BB Baseline Val Mkt Sales], [BB Baseline Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Baseline Val Prod Sales Contrib %",
            "expression": "divide([BB Baseline Val Prod Sales], [BB Baseline Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Domestic Unit Comp Sales Contrib %",
            "expression": "divide([BB Domestic Unit Comp Sales], [BB Domestic Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Domestic Unit Mkt Sales Contrib %",
            "expression": "divide([BB Domestic Unit Mkt Sales], [BB Domestic Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Domestic Unit Prod Sales Contrib %",
            "expression": "divide([BB Domestic Unit Prod Sales], [BB Domestic Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Domestic Val Comp Sales Contrib %",
            "expression": "divide([BB Domestic Val Comp Sales], [BB Domestic Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Domestic Val Mkt Sales Contrib %",
            "expression": "divide([BB Domestic Val Mkt Sales], [BB Domestic Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Domestic Val Prod Sales Contrib %",
            "expression": "divide([BB Domestic Val Prod Sales], [BB Domestic Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Export Unit Comp Sales Contrib %",
            "expression": "divide([BB Export Unit Comp Sales], [BB Export Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Export Unit Mkt Sales Contrib %",
            "expression": "divide([BB Export Unit Mkt Sales], [BB Export Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Export Unit Prod Sales Contrib %",
            "expression": "divide([BB Export Unit Prod Sales], [BB Export Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Export Val Comp Sales Contrib %",
            "expression": "divide([BB Export Val Comp Sales], [BB Export Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Export Val Mkt Sales Contrib %",
            "expression": "divide([BB Export Val Mkt Sales], [BB Export Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Export Val Prod Sales Contrib %",
            "expression": "divide([BB Export Val Prod Sales], [BB Export Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Grocery Unit Comp Sales Contrib %",
            "expression": "divide([BB Grocery Unit Comp Sales], [BB Grocery Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Grocery Unit Mkt Sales Contrib %",
            "expression": "divide([BB Grocery Unit Mkt Sales], [BB Grocery Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Grocery Unit Prod Sales Contrib %",
            "expression": "divide([BB Grocery Unit Prod Sales], [BB Grocery Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Grocery Val Comp Sales Contrib %",
            "expression": "divide([BB Grocery Val Comp Sales], [BB Grocery Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Grocery Val Mkt Sales Contrib %",
            "expression": "divide([BB Grocery Val Mkt Sales], [BB Grocery Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Grocery Val Prod Sales Contrib %",
            "expression": "divide([BB Grocery Val Prod Sales], [BB Grocery Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Incremental Unit Comp Sales Contrib %",
            "expression": "divide([BB Incremental Unit Comp Sales], [BB Incremental Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Incremental Unit Mkt Sales Contrib %",
            "expression": "divide([BB Incremental Unit Mkt Sales], [BB Incremental Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Incremental Unit Prod Sales Contrib %",
            "expression": "divide([BB Incremental Unit Prod Sales], [BB Incremental Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Incremental Val Comp Sales Contrib %",
            "expression": "divide([BB Incremental Val Comp Sales], [BB Incremental Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Incremental Val Mkt Sales Contrib %",
            "expression": "divide([BB Incremental Val Mkt Sales], [BB Incremental Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Incremental Val Prod Sales Contrib %",
            "expression": "divide([BB Incremental Val Prod Sales], [BB Incremental Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Lost Unit Comp Sales Contrib %",
            "expression": "divide([BB Lost Unit Comp Sales], [BB Lost Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Lost Unit Mkt Sales Contrib %",
            "expression": "divide([BB Lost Unit Mkt Sales], [BB Lost Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Lost Unit Prod Sales Contrib %",
            "expression": "divide([BB Lost Unit Prod Sales], [BB Lost Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Lost Val Comp Sales Contrib %",
            "expression": "divide([BB Lost Val Comp Sales], [BB Lost Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Lost Val Mkt Sales Contrib %",
            "expression": "divide([BB Lost Val Mkt Sales], [BB Lost Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Lost Val Prod Sales Contrib %",
            "expression": "divide([BB Lost Val Prod Sales], [BB Lost Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Non Promo Unit Comp Sales Contrib %",
            "expression": "divide([BB Non Promo Unit Comp Sales], [BB Non Promo Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Non Promo Unit Mkt Sales Contrib %",
            "expression": "divide([BB Non Promo Unit Mkt Sales], [BB Non Promo Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Non Promo Unit Prod Sales Contrib %",
            "expression": "divide([BB Non Promo Unit Prod Sales], [BB Non Promo Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Non Promo Val Comp Sales Contrib %",
            "expression": "divide([BB Non Promo Val Comp Sales], [BB Non Promo Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Non Promo Val Mkt Sales Contrib %",
            "expression": "divide([BB Non Promo Val Mkt Sales], [BB Non Promo Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Non Promo Val Prod Sales Contrib %",
            "expression": "divide([BB Non Promo Val Prod Sales], [BB Non Promo Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Online Unit Comp Sales Contrib %",
            "expression": "divide([BB Online Unit Comp Sales], [BB Online Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Online Unit Mkt Sales Contrib %",
            "expression": "divide([BB Online Unit Mkt Sales], [BB Online Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Online Unit Prod Sales Contrib %",
            "expression": "divide([BB Online Unit Prod Sales], [BB Online Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Online Val Comp Sales Contrib %",
            "expression": "divide([BB Online Val Comp Sales], [BB Online Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Online Val Mkt Sales Contrib %",
            "expression": "divide([BB Online Val Mkt Sales], [BB Online Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Online Val Prod Sales Contrib %",
            "expression": "divide([BB Online Val Prod Sales], [BB Online Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Promo Unit Comp Sales Contrib %",
            "expression": "divide([BB Promo Unit Comp Sales], [BB Promo Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Promo Unit Mkt Sales Contrib %",
            "expression": "divide([BB Promo Unit Mkt Sales], [BB Promo Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Promo Unit Prod Sales Contrib %",
            "expression": "divide([BB Promo Unit Prod Sales], [BB Promo Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Promo Val Comp Sales Contrib %",
            "expression": "divide([BB Promo Val Comp Sales], [BB Promo Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Promo Val Mkt Sales Contrib %",
            "expression": "divide([BB Promo Val Mkt Sales], [BB Promo Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Promo Val Prod Sales Contrib %",
            "expression": "divide([BB Promo Val Prod Sales], [BB Promo Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Retail Unit Comp Sales Contrib %",
            "expression": "divide([BB Retail Unit Comp Sales], [BB Retail Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Retail Unit Mkt Sales Contrib %",
            "expression": "divide([BB Retail Unit Mkt Sales], [BB Retail Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Retail Unit Prod Sales Contrib %",
            "expression": "divide([BB Retail Unit Prod Sales], [BB Retail Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Retail Unit Sales Contrib %",
            "expression": "divide([BB Retail Unit Sales], [BB Retail Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Retail Val Comp Sales Contrib %",
            "expression": "divide([BB Retail Val Comp Sales], [BB Retail Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Retail Val Mkt Sales Contrib %",
            "expression": "divide([BB Retail Val Mkt Sales], [BB Retail Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Retail Val Prod Sales Contrib %",
            "expression": "divide([BB Retail Val Prod Sales], [BB Retail Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Scanout Unit Comp Sales Contrib %",
            "expression": "divide([BB Scanout Unit Comp Sales], [BB Scanout Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Scanout Unit Mkt Sales Contrib %",
            "expression": "divide([BB Scanout Unit Mkt Sales], [BB Scanout Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Scanout Unit Prod Sales Contrib %",
            "expression": "divide([BB Scanout Unit Prod Sales], [BB Scanout Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Scanout Val Comp Sales Contrib %",
            "expression": "divide([BB Scanout Val Comp Sales], [BB Scanout Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Scanout Val Mkt Sales Contrib %",
            "expression": "divide([BB Scanout Val Mkt Sales], [BB Scanout Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Scanout Val Prod Sales Contrib %",
            "expression": "divide([BB Scanout Val Prod Sales], [BB Scanout Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Sellin Unit Comp Sales Contrib %",
            "expression": "divide([BB Sellin Unit Comp Sales], [BB Sellin Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Sellin Unit Mkt Sales Contrib %",
            "expression": "divide([BB Sellin Unit Mkt Sales], [BB Sellin Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Sellin Unit Prod Sales Contrib %",
            "expression": "divide([BB Sellin Unit Prod Sales], [BB Sellin Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Sellin Val Comp Sales Contrib %",
            "expression": "divide([BB Sellin Val Comp Sales], [BB Sellin Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Sellin Val Mkt Sales Contrib %",
            "expression": "divide([BB Sellin Val Mkt Sales], [BB Sellin Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Sellin Val Prod Sales Contrib %",
            "expression": "divide([BB Sellin Val Prod Sales], [BB Sellin Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Unit Comp Sales Contrib %",
            "expression": "divide([BB Unit Comp Sales], [BB Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Unit Mkt Sales Contrib %",
            "expression": "divide([BB Unit Mkt Sales], [BB Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Unit Prod Sales Contrib %",
            "expression": "divide([BB Unit Prod Sales], [BB Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Val Comp Sales Contrib %",
            "expression": "divide([BB Val Comp Sales], [BB Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Val Mkt Sales Contrib %",
            "expression": "divide([BB Val Mkt Sales], [BB Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Val Prod Sales Contrib %",
            "expression": "divide([BB Val Prod Sales], [BB Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB B&M Unit Sales Contrib %",
            "expression": "divide([BB B&M Unit Sales], [BB B&M Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB B&M Val Sales Contrib %",
            "expression": "divide([BB B&M Val Sales], [BB B&M Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Baseline Unit Sales Contrib %",
            "expression": "divide([BB Baseline Unit Sales], [BB Baseline Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Baseline Val Sales Contrib %",
            "expression": "divide([BB Baseline Val Sales], [BB Baseline Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Domestic Unit Sales Contrib %",
            "expression": "divide([BB Domestic Unit Sales], [BB Domestic Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Domestic Val Sales Contrib %",
            "expression": "divide([BB Domestic Val Sales], [BB Domestic Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Export Unit Sales Contrib %",
            "expression": "divide([BB Export Unit Sales], [BB Export Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Export Val Sales Contrib %",
            "expression": "divide([BB Export Val Sales], [BB Export Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Grocery Unit Sales Contrib %",
            "expression": "divide([BB Grocery Unit Sales], [BB Grocery Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Grocery Val Sales Contrib %",
            "expression": "divide([BB Grocery Val Sales], [BB Grocery Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Incremental Unit Sales Contrib %",
            "expression": "divide([BB Incremental Unit Sales], [BB Incremental Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Incremental Val Sales Contrib %",
            "expression": "divide([BB Incremental Val Sales], [BB Incremental Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Lost Unit Sales Contrib %",
            "expression": "divide([BB Lost Unit Sales], [BB Lost Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Lost Val Sales Contrib %",
            "expression": "divide([BB Lost Val Sales], [BB Lost Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Non Promo Unit Sales Contrib %",
            "expression": "divide([BB Non Promo Unit Sales], [BB Non Promo Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Non Promo Val Sales Contrib %",
            "expression": "divide([BB Non Promo Val Sales], [BB Non Promo Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Online Unit Sales Contrib %",
            "expression": "divide([BB Online Unit Sales], [BB Online Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Online Val Sales Contrib %",
            "expression": "divide([BB Online Val Sales], [BB Online Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Promo Unit Sales Contrib %",
            "expression": "divide([BB Promo Unit Sales], [BB Promo Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Promo Val Sales Contrib %",
            "expression": "divide([BB Promo Val Sales], [BB Promo Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Retail Val Sales Contrib %",
            "expression": "divide([BB Retail Val Sales], [BB Retail Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Scanout Unit Sales Contrib %",
            "expression": "divide([BB Scanout Unit Sales], [BB Scanout Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Scanout Val Sales Contrib %",
            "expression": "divide([BB Scanout Val Sales], [BB Scanout Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Sellin Unit Sales Contrib %",
            "expression": "divide([BB Sellin Unit Sales], [BB Sellin Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Sellin Val Sales Contrib %",
            "expression": "divide([BB Sellin Val Sales], [BB Sellin Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Unit Sales Contrib %",
            "expression": "divide([BB Unit Sales], [BB Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Val Sales Contrib %",
            "expression": "divide([BB Val Sales], [BB Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "Base BB Pack Count",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            DISTINCTCOUNT ( Fact_Banner_Brick_Sales[fcc] ),",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )",
              "        )",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "BB Pack Count",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base BB Pack Count],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base BB Pack Count],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB B&M Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB B&M Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB B&M Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB B&M Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB B&M Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB B&M Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB B&M Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB B&M Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB B&M Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB B&M Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Baseline Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Baseline Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Baseline Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Baseline Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Baseline Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Baseline Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Baseline Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Baseline Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Baseline Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Baseline Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Domestic Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Domestic Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Domestic Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Domestic Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Domestic Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Domestic Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Domestic Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Domestic Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Domestic Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Domestic Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Export Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Export Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Export Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Export Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Export Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Export Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Export Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Export Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Export Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Export Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Grocery Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Grocery Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Grocery Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Grocery Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Grocery Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Grocery Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Grocery Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Grocery Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Grocery Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Grocery Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Incremental Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Incremental Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Incremental Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Incremental Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Incremental Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Incremental Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Incremental Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Incremental Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Incremental Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Incremental Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Lost Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Lost Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Lost Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Lost Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Lost Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Lost Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Lost Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Lost Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Lost Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Lost Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Non Promo Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Non Promo Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Non Promo Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Non Promo Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Non Promo Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Non Promo Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Non Promo Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Non Promo Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Non Promo Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Non Promo Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Online Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Online Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Online Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Online Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Online Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Online Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Online Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Online Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Online Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Online Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Promo Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Promo Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Promo Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Promo Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Promo Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Promo Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Promo Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Promo Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Promo Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Promo Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Retail Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Retail Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Retail Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Retail Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Retail Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Scanout Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Scanout Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Scanout Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Scanout Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Scanout Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Scanout Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Scanout Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Scanout Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Scanout Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Scanout Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Sellin Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Sellin Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Sellin Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Sellin Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Sellin Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Sellin Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Sellin Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Sellin Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Sellin Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Sellin Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Unit Sales] ),",
              "        CALCULATE (",
              "            [Base BB Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [BB Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [BB Val Sales] ),",
              "        CALCULATE (",
              "            [Base BB Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB B&M Unit Comp Sales All Selected",
            "expression": "calculate([BB B&M Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB B&M Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB B&M Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB B&M Unit Prod Sales All Selected",
            "expression": "calculate([BB B&M Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB B&M Val Comp Sales All Selected",
            "expression": "calculate([BB B&M Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB B&M Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB B&M Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB B&M Val Prod Sales All Selected",
            "expression": "calculate([BB B&M Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Baseline Unit Comp Sales All Selected",
            "expression": "calculate([BB Baseline Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Baseline Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Baseline Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Baseline Unit Prod Sales All Selected",
            "expression": "calculate([BB Baseline Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Baseline Val Comp Sales All Selected",
            "expression": "calculate([BB Baseline Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Baseline Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Baseline Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Baseline Val Prod Sales All Selected",
            "expression": "calculate([BB Baseline Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Domestic Unit Comp Sales All Selected",
            "expression": "calculate([BB Domestic Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Domestic Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Domestic Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Domestic Unit Prod Sales All Selected",
            "expression": "calculate([BB Domestic Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Domestic Val Comp Sales All Selected",
            "expression": "calculate([BB Domestic Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Domestic Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Domestic Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Domestic Val Prod Sales All Selected",
            "expression": "calculate([BB Domestic Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Export Unit Comp Sales All Selected",
            "expression": "calculate([BB Export Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Export Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Export Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Export Unit Prod Sales All Selected",
            "expression": "calculate([BB Export Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Export Val Comp Sales All Selected",
            "expression": "calculate([BB Export Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Export Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Export Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Export Val Prod Sales All Selected",
            "expression": "calculate([BB Export Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Grocery Unit Comp Sales All Selected",
            "expression": "calculate([BB Grocery Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Grocery Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Grocery Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Grocery Unit Prod Sales All Selected",
            "expression": "calculate([BB Grocery Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Grocery Val Comp Sales All Selected",
            "expression": "calculate([BB Grocery Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Grocery Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Grocery Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Grocery Val Prod Sales All Selected",
            "expression": "calculate([BB Grocery Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Incremental Unit Comp Sales All Selected",
            "expression": "calculate([BB Incremental Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Incremental Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Incremental Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Incremental Unit Prod Sales All Selected",
            "expression": "calculate([BB Incremental Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Incremental Val Comp Sales All Selected",
            "expression": "calculate([BB Incremental Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Incremental Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Incremental Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Incremental Val Prod Sales All Selected",
            "expression": "calculate([BB Incremental Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Lost Unit Comp Sales All Selected",
            "expression": "calculate([BB Lost Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Lost Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Lost Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Lost Unit Prod Sales All Selected",
            "expression": "calculate([BB Lost Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Lost Val Comp Sales All Selected",
            "expression": "calculate([BB Lost Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Lost Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Lost Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Lost Val Prod Sales All Selected",
            "expression": "calculate([BB Lost Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Non Promo Unit Comp Sales All Selected",
            "expression": "calculate([BB Non Promo Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Non Promo Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Non Promo Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Non Promo Unit Prod Sales All Selected",
            "expression": "calculate([BB Non Promo Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Non Promo Val Comp Sales All Selected",
            "expression": "calculate([BB Non Promo Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Non Promo Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Non Promo Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Non Promo Val Prod Sales All Selected",
            "expression": "calculate([BB Non Promo Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Online Unit Comp Sales All Selected",
            "expression": "calculate([BB Online Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Online Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Online Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Online Unit Prod Sales All Selected",
            "expression": "calculate([BB Online Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Online Val Comp Sales All Selected",
            "expression": "calculate([BB Online Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Online Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Online Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Online Val Prod Sales All Selected",
            "expression": "calculate([BB Online Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Pack Count All Selected",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Promo Unit Comp Sales All Selected",
            "expression": "calculate([BB Promo Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Promo Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Promo Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Promo Unit Prod Sales All Selected",
            "expression": "calculate([BB Promo Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Promo Val Comp Sales All Selected",
            "expression": "calculate([BB Promo Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Promo Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Promo Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Promo Val Prod Sales All Selected",
            "expression": "calculate([BB Promo Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Retail Unit Comp Sales All Selected",
            "expression": "calculate([BB Retail Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Retail Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Retail Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Retail Unit Prod Sales All Selected",
            "expression": "calculate([BB Retail Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Retail Unit Sales All Selected",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Retail Val Comp Sales All Selected",
            "expression": "calculate([BB Retail Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Retail Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Retail Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Retail Val Prod Sales All Selected",
            "expression": "calculate([BB Retail Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Scanout Unit Comp Sales All Selected",
            "expression": "calculate([BB Scanout Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Scanout Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Scanout Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Scanout Unit Prod Sales All Selected",
            "expression": "calculate([BB Scanout Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Scanout Val Comp Sales All Selected",
            "expression": "calculate([BB Scanout Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Scanout Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Scanout Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Scanout Val Prod Sales All Selected",
            "expression": "calculate([BB Scanout Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Sellin Unit Comp Sales All Selected",
            "expression": "calculate([BB Sellin Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Sellin Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Sellin Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Sellin Unit Prod Sales All Selected",
            "expression": "calculate([BB Sellin Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Sellin Val Comp Sales All Selected",
            "expression": "calculate([BB Sellin Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Sellin Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Sellin Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Sellin Val Prod Sales All Selected",
            "expression": "calculate([BB Sellin Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Unit Comp Sales All Selected",
            "expression": "calculate([BB Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Unit Prod Sales All Selected",
            "expression": "calculate([BB Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Val Comp Sales All Selected",
            "expression": "calculate([BB Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [BB Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Val Prod Sales All Selected",
            "expression": "calculate([BB Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB SO/SI Val Sales Ratio",
            "expression": "DIVIDE ( [BB Scanout Val Sales], [BB Sellin Val Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Ret/Gr Val Sales Ratio",
            "expression": "DIVIDE ( [BB Retail Val Sales], [BB Grocery Val Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB SO/SI Unit Comp Sales Ratio",
            "expression": "DIVIDE ( [BB Scanout Unit Comp Sales], [BB Sellin Unit Comp Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Ret/Gr Unit Comp Sales Ratio",
            "expression": "DIVIDE ( [BB Retail Unit Comp Sales], [BB Grocery Unit Comp Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB SO/SI Unit Mkt Sales Ratio",
            "expression": "DIVIDE ( [BB Scanout Unit Mkt Sales], [BB Sellin Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Ret/Gr Unit Mkt Sales Ratio",
            "expression": "DIVIDE ( [BB Retail Unit Mkt Sales], [BB Grocery Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB SO/SI Unit Prod Sales Ratio",
            "expression": "DIVIDE ( [BB Scanout Unit Prod Sales], [BB Sellin Unit Prod Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Ret/Gr Unit Prod Sales Ratio",
            "expression": "DIVIDE ( [BB Retail Unit Prod Sales], [BB Grocery Unit Prod Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB SO/SI Unit Sales Ratio",
            "expression": "DIVIDE ( [BB Scanout Unit Sales], [BB Sellin Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB Ret/Gr Unit Sales Ratio",
            "expression": "DIVIDE ( [BB Retail Unit Sales], [BB Grocery Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\transit"
          },
          {
            "name": "BB SO/SI Val Comp Sales Ratio",
            "expression": "DIVIDE ( [BB Scanout Val Comp Sales], [BB Sellin Val Comp Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Ret/Gr Val Comp Sales Ratio",
            "expression": "DIVIDE ( [BB Retail Val Comp Sales], [BB Grocery Val Comp Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB SO/SI Val Mkt Sales Ratio",
            "expression": "DIVIDE ( [BB Scanout Val Mkt Sales], [BB Sellin Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Ret/Gr Val Mkt Sales Ratio",
            "expression": "DIVIDE ( [BB Retail Val Mkt Sales], [BB Grocery Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB SO/SI Val Prod Sales Ratio",
            "expression": "DIVIDE ( [BB Scanout Val Prod Sales], [BB Sellin Val Prod Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Ret/Gr Val Prod Sales Ratio",
            "expression": "DIVIDE ( [BB Retail Val Prod Sales], [BB Grocery Val Prod Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Pack Count Prod",
            "expression": "if([f_SKUSelected], [BB Pack Count], calculate([BB Pack Count], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] =\"Own Products\")))",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Pack Count Mkt",
            "expression": [
              "var p_market = CALCULATE ( [BB Pack Count], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [BB Pack Count], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "var finalval = if([f_SKUSelected], p_market, owner_market)",
              "return finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Pack Count Comp",
            "expression": "[BB Pack Count Mkt] - [BB Pack Count Prod]",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "BB Pack Count % Mkt Shr",
            "expression": "DIVIDE ( [BB Pack Count Prod],  [BB Pack Count Mkt])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Pack Count Comp All Selected",
            "expression": "calculate([BB Pack Count All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Pack Count Mkt All Selected",
            "expression": "CALCULATE ( [BB Pack Count All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Pack Count Prod All Selected",
            "expression": "calculate([BB Pack Count All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Pack Count Contrib %",
            "expression": "divide([BB Pack Count], [BB Pack Count All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Pack Count Comp Contrib %",
            "expression": "divide([BB Pack Count Comp], [BB Pack Count Comp All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Pack Count Mkt Contrib %",
            "expression": "divide([BB Pack Count Mkt], [BB Pack Count Mkt All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB Pack Count Prod Contrib %",
            "expression": "divide([BB Pack Count Prod], [BB Pack Count Prod All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\contrib"
          },
          {
            "name": "BB B&M Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB B&M Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB B&M Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB B&M Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB B&M Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB B&M Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB B&M Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB B&M Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB B&M Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB B&M Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Baseline Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Baseline Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Baseline Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Baseline Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Baseline Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Baseline Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Baseline Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Baseline Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Baseline Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Baseline Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Domestic Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Domestic Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Domestic Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Domestic Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Domestic Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Domestic Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Domestic Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Domestic Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Domestic Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Domestic Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Export Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Export Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Export Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Export Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Export Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Export Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Export Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Export Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Export Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Export Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Grocery Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Grocery Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Grocery Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Grocery Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Grocery Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Grocery Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Grocery Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Grocery Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Grocery Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Grocery Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Incremental Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Incremental Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Incremental Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Incremental Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Incremental Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Incremental Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Incremental Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Incremental Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Incremental Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Incremental Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Lost Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Lost Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Lost Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Lost Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Lost Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Lost Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Lost Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Lost Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Lost Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Lost Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Non Promo Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Non Promo Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Non Promo Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Non Promo Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Non Promo Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Non Promo Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Non Promo Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Non Promo Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Non Promo Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Non Promo Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Online Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Online Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Online Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Online Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Online Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Online Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Online Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Online Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Online Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Online Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Pack Count % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Pack Count % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Pack Count % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Pack Count % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Pack Count % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Promo Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Promo Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Promo Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Promo Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Promo Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Promo Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Promo Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Promo Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Promo Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Promo Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Retail Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Retail Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Retail Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Retail Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Retail Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Retail Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Retail Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Retail Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Retail Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Retail Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Scanout Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Scanout Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Scanout Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Scanout Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Scanout Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Scanout Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Scanout Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Scanout Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Scanout Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Scanout Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Sellin Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Sellin Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Sellin Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Sellin Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Sellin Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Sellin Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Sellin Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Sellin Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Sellin Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Sellin Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [BB Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [BB Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [BB Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [BB Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "BB B&M Unit PI",
            "expression": "divide([BB B&M Unit % Mkt Shr], [BB B&M Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB B&M Val PI",
            "expression": "divide([BB B&M Val % Mkt Shr], [BB B&M Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Baseline Unit PI",
            "expression": "divide([BB Baseline Unit % Mkt Shr], [BB Baseline Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Baseline Val PI",
            "expression": "divide([BB Baseline Val % Mkt Shr], [BB Baseline Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Domestic Unit PI",
            "expression": "divide([BB Domestic Unit % Mkt Shr], [BB Domestic Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Domestic Val PI",
            "expression": "divide([BB Domestic Val % Mkt Shr], [BB Domestic Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Export Unit PI",
            "expression": "divide([BB Export Unit % Mkt Shr], [BB Export Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Export Val PI",
            "expression": "divide([BB Export Val % Mkt Shr], [BB Export Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Grocery Unit PI",
            "expression": "divide([BB Grocery Unit % Mkt Shr], [BB Grocery Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Grocery Val PI",
            "expression": "divide([BB Grocery Val % Mkt Shr], [BB Grocery Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Incremental Unit PI",
            "expression": "divide([BB Incremental Unit % Mkt Shr], [BB Incremental Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Incremental Val PI",
            "expression": "divide([BB Incremental Val % Mkt Shr], [BB Incremental Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Lost Unit PI",
            "expression": "divide([BB Lost Unit % Mkt Shr], [BB Lost Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Lost Val PI",
            "expression": "divide([BB Lost Val % Mkt Shr], [BB Lost Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Non Promo Unit PI",
            "expression": "divide([BB Non Promo Unit % Mkt Shr], [BB Non Promo Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Non Promo Val PI",
            "expression": "divide([BB Non Promo Val % Mkt Shr], [BB Non Promo Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Online Unit PI",
            "expression": "divide([BB Online Unit % Mkt Shr], [BB Online Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Online Val PI",
            "expression": "divide([BB Online Val % Mkt Shr], [BB Online Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Pack Count PI",
            "expression": "divide([BB Pack Count % Mkt Shr], [BB Pack Count % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Promo Unit PI",
            "expression": "divide([BB Promo Unit % Mkt Shr], [BB Promo Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Promo Val PI",
            "expression": "divide([BB Promo Val % Mkt Shr], [BB Promo Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Retail Unit PI",
            "expression": "divide([BB Retail Unit % Mkt Shr], [BB Retail Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Retail Val PI",
            "expression": "divide([BB Retail Val % Mkt Shr], [BB Retail Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Scanout Unit PI",
            "expression": "divide([BB Scanout Unit % Mkt Shr], [BB Scanout Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Scanout Val PI",
            "expression": "divide([BB Scanout Val % Mkt Shr], [BB Scanout Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Sellin Unit PI",
            "expression": "divide([BB Sellin Unit % Mkt Shr], [BB Sellin Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Sellin Val PI",
            "expression": "divide([BB Sellin Val % Mkt Shr], [BB Sellin Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Unit PI",
            "expression": "divide([BB Unit % Mkt Shr], [BB Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "BB Val PI",
            "expression": "divide([BB Val % Mkt Shr], [BB Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "Base BB Baseline Unit Sales Interim",
            "description": "is the total base sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in unit value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[baseline_sales_unit]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            SUM ( 'Fact_Banner_Brick_Sales'[baseline_sales_unit]) / 10,",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )",
              "        )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base BB Baseline Val Sales Interim",
            "description": "is the total base sales in the absence of any store-level promotional activity for the all selected filters or the context expressed in currency value. Calculated by: if(countrows('Fact_Banner_Brick_Sales'), sum('Fact_Banner_Brick_Sales'[baseline_sales_amount]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            SUM ( 'Fact_Banner_Brick_Sales'[baseline_sales_amount]) / 10,",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )",
              "        )",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_IsMQueryFoldable",
            "value": "True"
          }
        ]
      },
      {
        "name": "Dim_Product",
        "columns": [
          {
            "name": "FCC",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "FCC",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "FCC"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "PFC",
            "dataType": "string",
            "sourceColumn": "PFC",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "PFC"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Active Ingredient",
            "dataType": "string",
            "sourceColumn": "Active Ingredient",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Active Ingredient"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Active Ingredient 1",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Active Ingredient 1",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Active Ingredient 1"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Active Ingredient 2",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Active Ingredient 2",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Active Ingredient 2"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Active Ingredient 3",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Active Ingredient 3",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Active Ingredient 3"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Active Ingredient 4",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Active Ingredient 4",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Active Ingredient 4"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Additional Benefit Claim",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Additional Benefit Claim",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Additional Benefit Claim"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Adult",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Adult",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Adult"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Age",
            "dataType": "string",
            "sourceColumn": "Age",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Age"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Age Range",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Age Range",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Age Range"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Age Target",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Age Target",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Age Target"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Allergy Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Allergy Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Allergy Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Analgesic Base",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Analgesic Base",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Analgesic Base"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "APN",
            "dataType": "string",
            "sourceColumn": "APN",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "APN"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Application",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Application",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Application"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Application Site",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Application Site",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Application Site"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Aspirin Dosage",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Aspirin Dosage",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Aspirin Dosage"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Base Premium",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Base Premium",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Base Premium"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Basic Specialist",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Basic Specialist",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Basic Specialist"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Benefit",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Benefit",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Benefit"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Brand",
            "dataType": "string",
            "sourceColumn": "Brand",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Brand"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sub Brand",
            "dataType": "string",
            "sourceColumn": "Sub Brand",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sub Brand"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Brand Type",
            "dataType": "string",
            "sourceColumn": "Brand Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Brand Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Client Base Brands",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Client Base Brands",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Client Base Brands"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "Category",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Category"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sub Category",
            "dataType": "string",
            "sourceColumn": "Sub Category",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sub Category"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Basic Specialist Subcategory",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Basic Specialist Subcategory",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Basic Specialist Subcategory"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CGP",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CGP",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CGP"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Channel",
            "dataType": "string",
            "sourceColumn": "Channel",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Channel"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Claim",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Claim",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Claim"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Class",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Class",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Class"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Client Code",
            "dataType": "string",
            "sourceColumn": "Client Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Client Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Client Manufacturer",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Client Manufacturer",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Client Manufacturer"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Client Name",
            "dataType": "string",
            "sourceColumn": "Client Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Client Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Client Number",
            "dataType": "string",
            "sourceColumn": "Client Number",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Client Number"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Client Reference",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Client Reference",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Client Reference"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Combination Anesthesia",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Combination Anesthesia",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Combination Anesthesia"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Competitor",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Competitor",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Competitor"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Consumer",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Consumer",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Consumer"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Cough Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Cough Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Cough Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Day Night",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Day Night",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Day Night"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Drug Class",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Drug Class",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Drug Class"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Duration",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Duration",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Duration"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "First Transaction Date",
            "dataType": "string",
            "sourceColumn": "First Transaction Date",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "First Transaction Date"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Flavour",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Flavour",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Flavour"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Flavour Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Flavour Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Flavour Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Form",
            "dataType": "string",
            "sourceColumn": "Form",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Form"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Format",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Format",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Format"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Gender",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Gender",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Gender"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Generic",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Generic",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Generic"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Generic Brand",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Generic Brand",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Generic Brand"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "GGP",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "GGP",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "GGP"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Gift Pack",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Gift Pack",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Gift Pack"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Hypoallergenic Claim",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Hypoallergenic Claim",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Hypoallergenic Claim"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "If PBS or Not",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "If PBS or Not",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "If PBS or Not"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Ingredient Standard",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Ingredient Standard",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Ingredient Standard"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Ingredient Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Ingredient Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Ingredient Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Iron Claim",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Iron Claim",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Iron Claim"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "IU",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "IU",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "IU"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Lactose Claim",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Lactose Claim",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Lactose Claim"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Manufacturer",
            "dataType": "string",
            "sourceColumn": "Manufacturer",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Manufacturer"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Market Name",
            "dataType": "string",
            "sourceColumn": "Market Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Market Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Market Number",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Market Number",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Market Number"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Medicated Item",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Medicated Item",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Medicated Item"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Milk Source",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Milk Source",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Milk Source"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Milk Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Milk Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Milk Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Multipack",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Multipack",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Multipack"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Nicotine Level",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Nicotine Level",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Nicotine Level"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "No in Multipack",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "No in Multipack",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "No in Multipack"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Number of Items in Pack",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Number of Items in Pack",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Number of Items in Pack"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Odourless",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Odourless",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Odourless"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Organic",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Organic",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Organic"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Organic Claim",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Organic Claim",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Organic Claim"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Pack Long Name",
            "dataType": "string",
            "sourceColumn": "Pack Long Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Pack Long Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Pack Range",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Pack Range",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Pack Range"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Pack Size",
            "dataType": "string",
            "sourceColumn": "Pack Size",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Pack Size"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Pack Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Pack Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Pack Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Pain State",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Pain State",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Pain State"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Patch Form",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Patch Form",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Patch Form"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Poison Schedule",
            "dataType": "string",
            "sourceColumn": "Poison Schedule",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Poison Schedule"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Portion",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Portion",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Portion"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Practitioner",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Practitioner",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Practitioner"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Prepack",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Prepack",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Prepack"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Price Range",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Price Range",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Price Range"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Price Tier",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Price Tier",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Price Tier"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Primary Usage",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Primary Usage",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Primary Usage"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Primary Usage 2",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Primary Usage 2",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Primary Usage 2"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Private Label",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Private Label",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Private Label"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Probiotic",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Probiotic",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Probiotic"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Product Form",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Product Form",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Product Form"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Product Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Product Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Product Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Protein Content",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Protein Content",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Protein Content"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Segment",
            "dataType": "string",
            "sourceColumn": "Segment",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Segment"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sub Segment",
            "dataType": "string",
            "sourceColumn": "Sub Segment",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sub Segment"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sub Segment 1",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Sub Segment 1",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sub Segment 1"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sub Segment 2",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Sub Segment 2",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sub Segment 2"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sub Segment 3",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Sub Segment 3",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sub Segment 3"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Client Segment",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Client Segment",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Client Segment"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Global Segment",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Global Segment",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Global Segment"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Pregnancy Segment",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Pregnancy Segment",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Pregnancy Segment"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Pregnancy Sub Segment",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Pregnancy Sub Segment",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Pregnancy Sub Segment"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sensitive Claim",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Sensitive Claim",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sensitive Claim"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Size",
            "dataType": "string",
            "sourceColumn": "Size",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Size"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Skin Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Skin Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Skin Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Source",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Source",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Source"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "SPF",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "SPF",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "SPF"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Stage",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Stage",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Stage"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Storage",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Storage",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Storage"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Strength",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Strength",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Strength"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sugar Free Claim",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Sugar Free Claim",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sugar Free Claim"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sustain Release",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Sustain Release",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sustain Release"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Target Consumer",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Target Consumer",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Target Consumer"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Topical Corticosteroids Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Topical Corticosteroids Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Topical Corticosteroids Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Total Pregnancy",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Total Pregnancy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Total Pregnancy"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Use",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Use",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Use"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "User",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "User",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "User"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Product Ownership",
            "dataType": "string",
            "sourceColumn": "Product Ownership",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Product Ownership"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Product Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Product Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Product Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Pack Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Pack Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Pack Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "NEC1 Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "NEC1 Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "NEC1 Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "NEC1 Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "NEC1 Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "NEC1 Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "NEC2 Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "NEC2 Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "NEC2 Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "NEC2 Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "NEC2 Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "NEC2 Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "NEC3 Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "NEC3 Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "NEC3 Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "NEC3 Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "NEC3 Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "NEC3 Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "NEC4 Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "NEC4 Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "NEC4 Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "NEC4 Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "NEC4 Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "NEC4 Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CH Segment Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CH Segment Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CH Segment Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CH Segment Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CH Segment Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CH Segment Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Consumer or Rx",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Consumer or Rx",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Consumer or Rx"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Poison Schedule Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Poison Schedule Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Poison Schedule Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Pack Launch Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Pack Launch Date",
            "formatString": "General Date",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneralPattern\"><DateTimes><DateTime LCID=\"3081\" Group=\"GeneralDateTimeLong\" FormatString=\"G\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Pack Launch Date"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Product Launch Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Product Launch Date",
            "formatString": "General Date",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneralPattern\"><DateTimes><DateTime LCID=\"3081\" Group=\"GeneralDateTimeLong\" FormatString=\"G\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Product Launch Date"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Out of Trade Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Out of Trade Date",
            "formatString": "General Date",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneralPattern\"><DateTimes><DateTime LCID=\"3081\" Group=\"GeneralDateTimeLong\" FormatString=\"G\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Out of Trade Date"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Volume Unit",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Volume Unit",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Double#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Volume Unit"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Volume Measure",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Volume Measure",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Volume Measure"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Strength Unit",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Strength Unit",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Double#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Strength Unit"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Strength Measure",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Strength Measure",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Strength Measure"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Form Desc Abbr",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Form Desc Abbr",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Form Desc Abbr"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Form Desc Long",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Form Desc Long",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Form Desc Long"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sundry Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Sundry Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sundry Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Sundry Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Sundry Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Sundry Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Manufacturer code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Manufacturer code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Manufacturer code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Manufacturer Abbr",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Manufacturer Abbr",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Manufacturer Abbr"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Manufacturer Long",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Manufacturer Long",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Manufacturer Long"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Price Reference",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "Price Reference",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Double#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Price Reference"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Medicine Type Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Medicine Type Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Medicine Type Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Medicine Type Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Medicine Type Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Medicine Type Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Subbrand",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Subbrand",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Subbrand"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CHC1 Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CHC1 Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CHC1 Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CHC1 Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CHC1 Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CHC1 Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CHC2 Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CHC2 Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CHC2 Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CHC2 Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CHC2 Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CHC2 Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CHC3 Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CHC3 Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CHC3 Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CHC3 Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CHC3 Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CHC3 Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CHC4 Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CHC4 Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CHC4 Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CHC4 Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CHC4 Desc",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CHC4 Desc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CWH Rate Category Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CWH Rate Category Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CWH Rate Category Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CWH Rate Category Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "CWH Rate Category Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CWH Rate Category Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Product-bfc8f3e9-a43c-44e4-9f6d-ffbc8047f4a6",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Product_Client = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Product_Client\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_Dim_Product_Client,{{\"Active_Ingredient\", \"Active Ingredient\"}, {\"Active_Ingredient_1\", \"Active Ingredient 1\"}, {\"Active_Ingredient_2\", \"Active Ingredient 2\"}, {\"Active_Ingredient_3\", \"Active Ingredient 3\"}, {\"Active_Ingredient_4\", \"Active Ingredient 4\"}, {\"Additional_Benefit_Claim\", \"Additional Benefit Claim\"}, {\"Age_Range\", \"Age Range\"}, {\"Age_Target\", \"Age Target\"}, {\"Allergy_Type\", \"Allergy Type\"}, {\"Analgesic_Base\", \"Analgesic Base\"}, {\"Application_Site\", \"Application Site\"}, {\"Aspirin_Dosage\", \"Aspirin Dosage\"}, {\"Base_Premium\", \"Base Premium\"}, {\"Basic_Specialist\", \"Basic Specialist\"}, {\"Basic_Specialist_Subcategory\", \"Basic Specialist Subcategory\"}, {\"Brand_Type\", \"Brand Type\"}, {\"Client_Base_Brands\", \"Client Base Brands\"}, {\"Client_Code\", \"Client Code\"}, {\"Client_Manufacturer\", \"Client Manufacturer\"}, {\"Client_Name\", \"Client Name\"}, {\"Client_Number\", \"Client Number\"}, {\"Client_Reference\", \"Client Reference\"}, {\"Client_Segment\", \"Client Segment\"}, {\"Combination_Anesthesia\", \"Combination Anesthesia\"}, {\"Cough_Type\", \"Cough Type\"}, {\"Day_Night\", \"Day Night\"}, {\"Drug_Class\", \"Drug Class\"}, {\"First_Transaction_Date\", \"First Transaction Date\"}, {\"Generic_Brand\", \"Generic Brand\"}, {\"Gift_Pack\", \"Gift Pack\"}, {\"Global_Segment\", \"Global Segment\"}, {\"Hypoallergenic_Claim\", \"Hypoallergenic Claim\"}, {\"Market_Name\", \"Market Name\"}, {\"Market_Number\", \"Market Number\"}, {\"Medicated_Item\", \"Medicated Item\"}, {\"Milk_Source\", \"Milk Source\"}, {\"Milk_Type\", \"Milk Type\"}, {\"Nicotine_Level\", \"Nicotine Level\"}, {\"No_in_Multipack\", \"No in Multipack\"}, {\"Number_of_Items_in_Pack\", \"Number of Items in Pack\"}, {\"Organic_Claim\", \"Organic Claim\"}, {\"Pack_Long_Name\", \"Pack Long Name\"}, {\"Pack_Range\", \"Pack Range\"}, {\"Pack_Size\", \"Pack Size\"}, {\"Pack_Type\", \"Pack Type\"}, {\"Pain_State\", \"Pain State\"}, {\"Patch_Form\", \"Patch Form\"}, {\"Poison_Schedule\", \"Poison Schedule\"}, {\"Pregnancy_Segment\", \"Pregnancy Segment\"}, {\"Pregnancy_Sub_Segment\", \"Pregnancy Sub Segment\"}, {\"Price_Range\", \"Price Range\"}, {\"Price_Tier\", \"Price Tier\"}, {\"Primary_Usage\", \"Primary Usage\"}, {\"Primary_Usage_2\", \"Primary Usage 2\"}, {\"Private_Label\", \"Private Label\"}, {\"Product_Form\", \"Product Form\"}, {\"Product_Type\", \"Product Type\"}, {\"Protein_Content\", \"Protein Content\"}, {\"Sensitive_Claim\", \"Sensitive Claim\"}, {\"Skin_Type\", \"Skin Type\"}, {\"Sub_Brand\", \"Sub Brand\"}, {\"Sub_Category\", \"Sub Category\"}, {\"Sub_Segment\", \"Sub Segment\"}, {\"Sub_Segment_1\", \"Sub Segment 1\"}, {\"Sub_Segment_2\", \"Sub Segment 2\"}, {\"Sub_Segment_3\", \"Sub Segment 3\"}, {\"Sugar_Free_Claim\", \"Sugar Free Claim\"}, {\"Sustain_Release\", \"Sustain Release\"}, {\"Target_Consumer\", \"Target Consumer\"}, {\"Topical_Corticosteroids_Type\", \"Topical Corticosteroids Type\"}, {\"Total_Pregnancy\", \"Total Pregnancy\"}, {\"Product_Ownership\", \"Product Ownership\"}, {\"CH_Segment_Code\", \"CH Segment Code\"}, {\"CH_Segment_Desc\", \"CH Segment Desc\"}, {\"CHC1_Code\", \"CHC1 Code\"}, {\"CHC1_Desc\", \"CHC1 Desc\"}, {\"CHC2_Code\", \"CHC2 Code\"}, {\"CHC2_Desc\", \"CHC2 Desc\"}, {\"CHC3_Code\", \"CHC3 Code\"}, {\"CHC3_Desc\", \"CHC3 Desc\"}, {\"CHC4_Code\", \"CHC4 Code\"}, {\"CHC4_Desc\", \"CHC4 Desc\"}, {\"Consumer_or_Rx\", \"Consumer or Rx\"}, {\"CWH_Rate_Category_Code\", \"CWH Rate Category Code\"}, {\"CWH_Rate_Category_Name\", \"CWH Rate Category Name\"}, {\"Flavour_Type\", \"Flavour Type\"}, {\"Form_Desc_Abbr\", \"Form Desc Abbr\"}, {\"Form_Desc_Long\", \"Form Desc Long\"}, {\"If_PBS_or_Not\", \"If PBS or Not\"}, {\"Ingredient_Standard\", \"Ingredient Standard\"}, {\"Ingredient_Type\", \"Ingredient Type\"}, {\"Iron_Claim\", \"Iron Claim\"}, {\"Lactose_Claim\", \"Lactose Claim\"}, {\"Manufacturer_Abbr\", \"Manufacturer Abbr\"}, {\"Manufacturer_code\", \"Manufacturer code\"}, {\"Manufacturer_Long\", \"Manufacturer Long\"}, {\"Medicine_Type_Code\", \"Medicine Type Code\"}, {\"Medicine_Type_Desc\", \"Medicine Type Desc\"}, {\"NEC1_Code\", \"NEC1 Code\"}, {\"NEC1_Desc\", \"NEC1 Desc\"}, {\"NEC2_Code\", \"NEC2 Code\"}, {\"NEC2_Desc\", \"NEC2 Desc\"}, {\"NEC3_Code\", \"NEC3 Code\"}, {\"NEC3_Desc\", \"NEC3 Desc\"}, {\"NEC4_Code\", \"NEC4 Code\"}, {\"NEC4_Desc\", \"NEC4 Desc\"}, {\"Out_of_Trade_Date\", \"Out of Trade Date\"}, {\"Pack_Launch_Date\", \"Pack Launch Date\"}, {\"Pack_Name\", \"Pack Name\"}, {\"Poison_Schedule_Desc\", \"Poison Schedule Desc\"}, {\"Product_Launch_Date\", \"Product Launch Date\"}, {\"Product_Name\", \"Product Name\"}, {\"Volume_Measure\", \"Volume Measure\"}, {\"Volume_Unit\", \"Volume Unit\"}, {\"Price_Reference\", \"Price Reference\"}, {\"Strength_Measure\", \"Strength Measure\"}, {\"Strength_Unit\", \"Strength Unit\"}, {\"Sundry_Code\", \"Sundry Code\"}, {\"Sundry_Desc\", \"Sundry Desc\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "LinkedQueryName",
            "value": "Dim_Product"
          }
        ]
      },
      {
        "name": "Dim_Store",
        "isHidden": true,
        "columns": [
          {
            "name": "EID",
            "dataType": "int64",
            "sourceColumn": "EID",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "EID"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Name",
            "dataType": "string",
            "sourceColumn": "Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Full Address",
            "dataType": "string",
            "sourceColumn": "Full Address",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Full Address"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Suburb",
            "dataType": "string",
            "sourceColumn": "Suburb",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Suburb"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Postcode",
            "dataType": "int64",
            "sourceColumn": "Postcode",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Postcode"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Phone",
            "dataType": "string",
            "sourceColumn": "Phone",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Phone"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Longitude",
            "dataType": "double",
            "sourceColumn": "Longitude",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Double#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Longitude"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Latitude",
            "dataType": "double",
            "sourceColumn": "Latitude",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Double#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Latitude"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Store Type",
            "dataType": "string",
            "sourceColumn": "Store Type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Store Type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Banner Current",
            "dataType": "string",
            "sourceColumn": "Banner Current",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Banner Current"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Retail Brick",
            "dataType": "int64",
            "sourceColumn": "Retail Brick",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Retail Brick"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Retail Brick Name",
            "dataType": "string",
            "sourceColumn": "Retail Brick Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Retail Brick Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Scan Brick",
            "dataType": "int64",
            "sourceColumn": "Scan Brick",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Scan Brick"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Scan Brick Name",
            "dataType": "string",
            "sourceColumn": "Scan Brick Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Scan Brick Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CWH Brick",
            "dataType": "int64",
            "sourceColumn": "CWH Brick",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CWH Brick"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "CWH Brick Name",
            "dataType": "string",
            "sourceColumn": "CWH Brick Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "CWH Brick Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "brick_type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "brick_type",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "brick_type"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "State Code",
            "dataType": "string",
            "sourceColumn": "State Code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "State Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "store_type_id",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "store_type_id",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "store_type_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "LGA Code",
            "dataType": "int64",
            "sourceColumn": "LGA Code",
            "formatString": "0",
            "summarizeBy": "count",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "LGA Code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "LGA Name",
            "dataType": "string",
            "sourceColumn": "LGA Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "LGA Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "LGA State",
            "dataType": "string",
            "sourceColumn": "LGA State",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "LGA State"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "lga_state_original",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "lga_state_original",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "lga_state_original"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Remoteness",
            "dataType": "string",
            "sourceColumn": "Remoteness",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Remoteness"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Remoteness Class",
            "dataType": "string",
            "sourceColumn": "Remoteness Class",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Remoteness Class"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "sua_code",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "sua_code",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "sua_code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "SUA Name",
            "dataType": "string",
            "sourceColumn": "SUA Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "SUA Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "gccsa_code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "gccsa_code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "gccsa_code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "GCCSA Name",
            "dataType": "string",
            "sourceColumn": "GCCSA Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "GCCSA Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "sa1_code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "sa1_code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "sa1_code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "sa2_code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "sa2_code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "sa2_code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "SA2 Name",
            "dataType": "string",
            "sourceColumn": "SA2 Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "SA2 Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "sa3_code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "sa3_code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "sa3_code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "SA3 Name",
            "dataType": "string",
            "sourceColumn": "SA3 Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "SA3 Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "sa4_code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "sa4_code",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "sa4_code"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "SA4 Name",
            "dataType": "string",
            "sourceColumn": "SA4 Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "SA4 Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Date First Open",
            "dataType": "dateTime",
            "sourceColumn": "Date First Open",
            "formatString": "d/mm/yyyy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"3081\" Group=\"ShortDate\" FormatString=\"d/MM/yyyy\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Date First Open"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "year_open",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "year_open",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "year_open"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Date Close",
            "dataType": "dateTime",
            "sourceColumn": "Date Close",
            "formatString": "d/mm/yy",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeCustom\"><DateTimes><DateTime LCID=\"3081\" Group=\"ShortDate\" FormatString=\"d/MM/yy\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####Date"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Date Close"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Store Type Description",
            "dataType": "string",
            "sourceColumn": "Store Type Description",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Store Type Description"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "distribution_use",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "distribution_use",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "distribution_use"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "sell_start_date",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "sell_start_date",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "sell_start_date"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "sell_end_date",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "sell_end_date",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "sell_end_date"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "brick_link",
            "dataType": "int64",
            "sourceColumn": "brick_link",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "brick_link"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Store-6281f254-dcd4-4ffe-b713-12ea191efb85",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Store = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Store\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_Dim_Store,{{\"banner_current\", \"Banner Current\"}, {\"close_date\", \"Date Close\"}, {\"date_first_open\", \"Date First Open\"}, {\"eid\", \"EID\"}, {\"full_address\", \"Full Address\"}, {\"gccsa_name\", \"GCCSA Name\"}, {\"latitude\", \"Latitude\"}, {\"lga_code\", \"LGA Code\"}, {\"lga_name\", \"LGA Name\"}, {\"lga_state\", \"LGA State\"}, {\"cwh_brick\", \"CWH Brick\"}, {\"cwh_brick_name\", \"CWH Brick Name\"}, {\"longitude\", \"Longitude\"}, {\"phone\", \"Phone\"}, {\"postcode\", \"Postcode\"}, {\"remoteness\", \"Remoteness\"}, {\"remoteness_class\", \"Remoteness Class\"}, {\"retail_brick\", \"Retail Brick\"}, {\"retail_brick_name\", \"Retail Brick Name\"}, {\"sa2_name\", \"SA2 Name\"}, {\"sa3_name\", \"SA3 Name\"}, {\"sa4_name\", \"SA4 Name\"}, {\"scan_brick\", \"Scan Brick\"}, {\"scan_brick_name\", \"Scan Brick Name\"}, {\"state_code\", \"State Code\"}, {\"store_type\", \"Store Type\"}, {\"store_type_description\", \"Store Type Description\"}, {\"sua_name\", \"SUA Name\"}, {\"suburb\", \"Suburb\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Fact_Metrics",
        "columns": [
          {
            "name": "Measures",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Measures",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Measures"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Fact_Metrics-5ac1b14e-b53d-4f5e-bf47-3cb1d3a66f30",
            "mode": "import",
            "queryGroup": "Auxiliary_Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WSinNza1Uio0FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Measures = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Measures\", type text}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "New Measure",
            "isHidden": true
          },
          {
            "name": "B&M Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Baseline Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Domestic Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Grocery Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Incremental Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Online Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Pack #",
            "expression": [
              "SWITCH (",
              "    TRUE (),",
              "    [const_Selected_Scan],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_CWHRelated] && NOT [f_CWHNotRelated], [BB Pack Count],",
              "            NOT [f_CWHRelated] && [f_ScanRelated]",
              "                && NOT [f_ScanNotRelated], [BB Pack Count],",
              "            [f_CWHRelated] || [f_ScanNotRelated]",
              "                || [crossf_EID], BLANK (),",
              "            [BB Pack Count]",
              "        ),",
              "    [const_Selected_CBG],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_CBGRelated] && NOT [f_CBGNotRelated], [BB Pack Count],",
              "            [f_CBGNotRelated] || [crossf_EID], BLANK (),",
              "            [BB Pack Count]",
              "        ),",
              "    [const_Selected_Profit],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_ProfitRelated] && NOT [f_ProfitNotRelated], [ST Pack Count],",
              "            [f_ProfitNotRelated] || [crossf_EID]",
              "                || [crossf_Brick], BLANK (),",
              "            [ST Pack Count]",
              "        ),",
              "    [const_Selected_Probe],",
              "        IF (",
              "            [crossf_Brick],",
              "            BLANK (),",
              "            CALCULATE (",
              "                [ST Pack Count],",
              "                FILTER ( 'Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\" )",
              "            )",
              "        ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Pack Count % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Pack Count % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Pack Count % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Pack Count % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Pack Count % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Pack Count % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Pack Count % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Pack Count % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Pack Count Comp],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Pack Count Comp],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Pack Count Comp]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Pack Count Comp],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Pack Count Comp]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Pack Count Comp],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Pack Count Comp]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Pack Count Comp],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # Comp Contrib %",
            "expression": [
              "SWITCH (",
              "    TRUE (),",
              "    [const_Selected_Scan],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_CWHRelated] && NOT [f_CWHNotRelated], [BB Pack Count Comp Contrib %],",
              "            NOT [f_CWHRelated] && [f_ScanRelated]",
              "                && NOT [f_ScanNotRelated], [BB Pack Count Comp Contrib %],",
              "            [f_CWHRelated] || [f_ScanNotRelated]",
              "                || [crossf_EID], BLANK (),",
              "            [BB Pack Count Comp Contrib %]",
              "        ),",
              "    [const_Selected_CBG],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_CBGRelated] && NOT [f_CBGNotRelated], [BB Pack Count Comp Contrib %],",
              "            [f_CBGNotRelated] || [crossf_EID], BLANK (),",
              "            [BB Pack Count Comp Contrib %]",
              "        ),",
              "    [const_Selected_Profit],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_ProfitRelated] && NOT [f_ProfitNotRelated], [ST Pack Count Comp Contrib %],",
              "            [f_ProfitNotRelated] || [crossf_EID]",
              "                || [crossf_Brick], BLANK (),",
              "            [ST Pack Count Comp Contrib %]",
              "        ),",
              "    [const_Selected_Probe],",
              "        IF (",
              "            [crossf_Brick],",
              "            BLANK (),",
              "            CALCULATE (",
              "                [ST Pack Count Comp Contrib %],",
              "                FILTER ( 'Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\" )",
              "            )",
              "        ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Pack Count Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Pack Count Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Pack Count Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Pack Count Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Pack Count Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Pack Count Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Pack Count Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Pack Count Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Pack Count Mkt],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Pack Count Mkt],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Pack Count Mkt]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Pack Count Mkt],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Pack Count Mkt]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Pack Count Mkt],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Pack Count Mkt]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Pack Count Mkt],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Pack Count Mkt Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Pack Count Mkt Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Pack Count Mkt Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Pack Count Mkt Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Pack Count Mkt Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Pack Count Mkt Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Pack Count Mkt Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Pack Count Mkt Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Pack Count Prod],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Pack Count Prod],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Pack Count Prod]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Pack Count Prod],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Pack Count Prod]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Pack Count Prod],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Pack Count Prod]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Pack Count Prod],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # Prod Contrib %",
            "expression": [
              "SWITCH (",
              "    TRUE (),",
              "    [const_Selected_Scan],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_CWHRelated] && NOT [f_CWHNotRelated], [BB Pack Count Prod Contrib %],",
              "            NOT [f_CWHRelated] && [f_ScanRelated]",
              "                && NOT [f_ScanNotRelated], [BB Pack Count Prod Contrib %],",
              "            [f_CWHRelated] || [f_ScanNotRelated]",
              "                || [crossf_EID], BLANK (),",
              "            [BB Pack Count Prod Contrib %]",
              "        ),",
              "    [const_Selected_CBG],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_CBGRelated] && NOT [f_CBGNotRelated], [BB Pack Count Prod Contrib %],",
              "            [f_CBGNotRelated] || [crossf_EID], BLANK (),",
              "            [BB Pack Count Prod Contrib %]",
              "        ),",
              "    [const_Selected_Profit],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_ProfitRelated] && NOT [f_ProfitNotRelated], [ST Pack Count Prod Contrib %],",
              "            [f_ProfitNotRelated] || [crossf_EID]",
              "                || [crossf_Brick], BLANK (),",
              "            [ST Pack Count Prod Contrib %]",
              "        ),",
              "    [const_Selected_Probe],",
              "        IF (",
              "            [crossf_Brick],",
              "            BLANK (),",
              "            CALCULATE (",
              "                [ST Pack Count Prod Contrib %],",
              "                FILTER ( 'Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\" )",
              "            )",
              "        ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Promo Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Ret/Gr Unit Ratio",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Ret/Gr Unit Sales Ratio],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Ret/Gr Unit Sales Ratio],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Ret/Gr Unit Sales Ratio]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Ret/Gr Unit Sales Ratio],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Ret/Gr Unit Sales Ratio]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Ret/Gr Unit Sales Ratio],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Ret/Gr Unit Sales Ratio]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Ret/Gr Unit Sales Ratio],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Ret/Gr Val Ratio",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Ret/Gr Val Sales Ratio],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Ret/Gr Val Sales Ratio],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Ret/Gr Val Sales Ratio]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Ret/Gr Val Sales Ratio],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Ret/Gr Val Sales Ratio]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Ret/Gr Val Sales Ratio],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Ret/Gr Val Sales Ratio]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Ret/Gr Val Sales Ratio],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Scanout Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Val Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Val Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Val Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Val Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Val Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Val Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Val Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Val Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Val Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Val Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Val Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Val Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "SO/SI Unit Ratio",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB SO/SI Unit Sales Ratio],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB SO/SI Unit Sales Ratio],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB SO/SI Unit Sales Ratio]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB SO/SI Unit Sales Ratio],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB SO/SI Unit Sales Ratio]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST SO/SI Unit Sales Ratio],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST SO/SI Unit Sales Ratio]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST SO/SI Unit Sales Ratio],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "SO/SI Val Ratio",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB SO/SI Val Sales Ratio],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB SO/SI Val Sales Ratio],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB SO/SI Val Sales Ratio]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB SO/SI Val Sales Ratio],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB SO/SI Val Sales Ratio]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST SO/SI Val Sales Ratio],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST SO/SI Val Sales Ratio]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST SO/SI Val Sales Ratio],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Unit % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Unit % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Unit % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Unit % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Unit % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Unit % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Unit % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Unit % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Unit % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Unit Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Unit Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Unit Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Unit Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Unit Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Unit Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Unit Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Unit Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Unit Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Unit Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Unit Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Unit Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Unit Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Unit Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Unit Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Unit Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit Mkt",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Unit Mkt Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Unit Mkt Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Unit Mkt Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Unit Mkt Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Unit Mkt Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Unit Mkt Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Unit Mkt Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Unit Mkt Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Unit Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Unit Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Unit Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Unit Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Unit Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Unit Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Unit Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Unit Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit Prod",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Unit Prod Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Unit Prod Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Unit Prod Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Unit Prod Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Unit Prod Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Unit Prod Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Unit Prod Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Unit Prod Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\Current Period (Unit)",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" ThousandSeparator=\"True\" />"
              }
            ]
          },
          {
            "name": "Unit Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Unit Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Unit Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Unit Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Unit Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Unit Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Unit Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Unit Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Unit Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Unit Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Unit Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Unit Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Unit Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Unit Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Unit Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Unit Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Unit Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Unit Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Unit Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Unit Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Unit Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Unit Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Unit Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Unit Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Unit Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Val % Mkt Shr",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Val % Mkt Shr],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Val % Mkt Shr],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Val % Mkt Shr]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Val % Mkt Shr],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Val % Mkt Shr]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Val % Mkt Shr],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Val % Mkt Shr]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Val % Mkt Shr],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val Comp",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Val Comp Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Val Comp Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Val Comp Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Val Comp Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Val Comp Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Val Comp Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Val Comp Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Val Comp Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val Comp Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Val Comp Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Val Comp Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Val Comp Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Val Comp Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Val Comp Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Val Comp Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Val Comp Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Val Comp Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val Mkt",
            "expression": [
              "//IF (",
              "    //NOT ISBLANK ( [Val Prod] ),",
              "    SWITCH (",
              "        TRUE (),",
              "        [const_Selected_Scan],",
              "            SWITCH (",
              "                TRUE (),",
              "                [f_CWHRelated] && NOT [f_CWHNotRelated], [BB Val Mkt Sales],",
              "                NOT [f_CWHRelated] && [f_ScanRelated]",
              "                    && NOT [f_ScanNotRelated], [BB Val Mkt Sales],",
              "                [f_CWHRelated] || [f_ScanNotRelated]",
              "                    || [crossf_EID], BLANK (),",
              "                [BB Val Mkt Sales]",
              "            ),",
              "        [const_Selected_CBG],",
              "            SWITCH (",
              "                TRUE (),",
              "                [f_CBGRelated] && NOT [f_CBGNotRelated], [BB Val Mkt Sales],",
              "                [f_CBGNotRelated] || [crossf_EID], BLANK (),",
              "                [BB Val Mkt Sales]",
              "            ),",
              "        [const_Selected_Profit],",
              "            SWITCH (",
              "                TRUE (),",
              "                [f_ProfitRelated] && NOT [f_ProfitNotRelated], [ST Val Mkt Sales],",
              "                [f_ProfitNotRelated] || [crossf_EID]",
              "                    || [crossf_Brick], BLANK (),",
              "                [ST Val Mkt Sales]",
              "            ),",
              "        [const_Selected_Probe],",
              "            IF (",
              "                [crossf_Brick],",
              "                BLANK (),",
              "                CALCULATE (",
              "                    [ST Val Mkt Sales],",
              "                    FILTER ( 'Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\" )",
              "                )",
              "            ),",
              "        BLANK ()",
              "    )",
              "//)"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val Mkt Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Val Mkt Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Val Mkt Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Val Mkt Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Val Mkt Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Val Mkt Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Val Mkt Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Val Mkt Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Val Mkt Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val Prod",
            "expression": [
              "SWITCH (",
              "    TRUE (),",
              "    [const_Selected_Scan],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_CWHRelated] && NOT [f_CWHNotRelated], [BB Val Prod Sales],",
              "            NOT [f_CWHRelated] && [f_ScanRelated]",
              "                && NOT [f_ScanNotRelated], [BB Val Prod Sales],",
              "            [f_CWHRelated] || [f_ScanNotRelated]",
              "                || [crossf_EID], BLANK (),",
              "            [BB Val Prod Sales]",
              "        ),",
              "    [const_Selected_CBG],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_CBGRelated] && NOT [f_CBGNotRelated], [BB Val Prod Sales],",
              "            [f_CBGNotRelated] || [crossf_EID], BLANK (),",
              "            [BB Val Prod Sales]",
              "        ),",
              "    [const_Selected_Profit],",
              "        SWITCH (",
              "            TRUE (),",
              "            [f_ProfitRelated] && NOT [f_ProfitNotRelated], [ST Val Prod Sales],",
              "            [f_ProfitNotRelated] || [crossf_EID]",
              "                || [crossf_Brick], BLANK (),",
              "            [ST Val Prod Sales]",
              "        ),",
              "    [const_Selected_Probe],",
              "        IF (",
              "            [crossf_Brick],",
              "            BLANK (),",
              "            CALCULATE (",
              "                [ST Val Prod Sales],",
              "                FILTER ( 'Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\" )",
              "            )",
              "        ),",
              "    BLANK ()",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "Base Metrics\\Current Period (Amount)",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"CurrencyCustom\" Accuracy=\"0\" ThousandSeparator=\"True\"><Currency LCID=\"0\" DisplayName=\"Currency General\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Val Prod Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Val Prod Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Val Prod Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Val Prod Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Val Prod Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Val Prod Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Val Prod Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Val Prod Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Val Prod Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Val Sales],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Val Sales],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Val Sales]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Val Sales],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Val Sales]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Val Sales],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Val Sales]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Val Sales],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val Contrib %",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Val Sales Contrib %],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Val Sales Contrib %],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Val Sales Contrib %]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Val Sales Contrib %],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Val Sales Contrib %]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Val Sales Contrib %],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Val Sales Contrib %]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Val Sales Contrib %],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Amount)",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Percentage\" Accuracy=\"1\" />"
              }
            ]
          },
          {
            "name": "B&M Price",
            "expression": "divide([B&M Val], [B&M Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "B&M Price Comp",
            "expression": "divide([B&M Val Comp], [B&M Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "B&M Price Mkt",
            "expression": "divide([B&M Val Mkt], [B&M Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "B&M Price Prod",
            "expression": "divide([B&M Val Prod], [B&M Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "Baseline Price",
            "expression": "divide([Baseline Val], [Baseline Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Baseline Price Comp",
            "expression": "divide([Baseline Val Comp], [Baseline Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Baseline Price Mkt",
            "expression": "divide([Baseline Val Mkt], [Baseline Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Baseline Price Prod",
            "expression": "divide([Baseline Val Prod], [Baseline Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Domestic Price",
            "expression": "divide([Domestic Val], [Domestic Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Domestic Price Comp",
            "expression": "divide([Domestic Val Comp], [Domestic Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Domestic Price Mkt",
            "expression": "divide([Domestic Val Mkt], [Domestic Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Domestic Price Prod",
            "expression": "divide([Domestic Val Prod], [Domestic Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Export Price",
            "expression": "divide([Export Val], [Export Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Export Price Comp",
            "expression": "divide([Export Val Comp], [Export Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Export Price Mkt",
            "expression": "divide([Export Val Mkt], [Export Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Export Price Prod",
            "expression": "divide([Export Val Prod], [Export Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Grocery Price",
            "expression": "divide([Grocery Val], [Grocery Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Grocery Price Comp",
            "expression": "divide([Grocery Val Comp], [Grocery Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Grocery Price Mkt",
            "expression": "divide([Grocery Val Mkt], [Grocery Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Grocery Price Prod",
            "expression": "divide([Grocery Val Prod], [Grocery Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Incremental Price",
            "expression": "divide([Incremental Val], [Incremental Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Incremental Price Comp",
            "expression": "divide([Incremental Val Comp], [Incremental Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Incremental Price Mkt",
            "expression": "divide([Incremental Val Mkt], [Incremental Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Incremental Price Prod",
            "expression": "divide([Incremental Val Prod], [Incremental Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Lost Price",
            "expression": "divide([Lost Val], [Lost Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Lost Price Comp",
            "expression": "divide([Lost Val Comp], [Lost Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Lost Price Mkt",
            "expression": "divide([Lost Val Mkt], [Lost Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Lost Price Prod",
            "expression": "divide([Lost Val Prod], [Lost Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Non Promo Price",
            "expression": "divide([Non Promo Val], [Non Promo Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Non Promo Price Comp",
            "expression": "divide([Non Promo Val Comp], [Non Promo Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Non Promo Price Mkt",
            "expression": "divide([Non Promo Val Mkt], [Non Promo Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Non Promo Price Prod",
            "expression": "divide([Non Promo Val Prod], [Non Promo Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Online Price",
            "expression": "divide([Online Val], [Online Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "Online Price Comp",
            "expression": "divide([Online Val Comp], [Online Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "Online Price Mkt",
            "expression": "divide([Online Val Mkt], [Online Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "Online Price Prod",
            "expression": "divide([Online Val Prod], [Online Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "Promo Price",
            "expression": "divide([Promo Val], [Promo Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Promo Price Comp",
            "expression": "divide([Promo Val Comp], [Promo Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Promo Price Mkt",
            "expression": "divide([Promo Val Mkt], [Promo Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Promo Price Prod",
            "expression": "divide([Promo Val Prod], [Promo Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Retail Price",
            "expression": "divide([Retail Val], [Retail Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Retail Price Comp",
            "expression": "divide([Retail Val Comp], [Retail Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Retail Price Mkt",
            "expression": "divide([Retail Val Mkt], [Retail Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Retail Price Prod",
            "expression": "divide([Retail Val Prod], [Retail Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Scanout Price",
            "expression": "divide([Scanout Val], [Scanout Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Scanout Price Comp",
            "expression": "divide([Scanout Val Comp], [Scanout Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Scanout Price Mkt",
            "expression": "divide([Scanout Val Mkt], [Scanout Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Scanout Price Prod",
            "expression": "divide([Scanout Val Prod], [Scanout Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Sellin Price",
            "expression": "divide([Sellin Val], [Sellin Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Sellin Price Comp",
            "expression": "divide([Sellin Val Comp], [Sellin Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Sellin Price Mkt",
            "expression": "divide([Sellin Val Mkt], [Sellin Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Sellin Price Prod",
            "expression": "divide([Sellin Val Prod], [Sellin Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Price",
            "expression": "divide([Val], [Unit])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\Current Period (Price)",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"CurrencyCustom\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"0\" DisplayName=\"Currency General\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Price Comp",
            "expression": "divide([Val Comp], [Unit Comp])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\Current Period (Price)"
          },
          {
            "name": "Price Mkt",
            "expression": "divide([Val Mkt], [Unit Mkt])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\Current Period (Price)"
          },
          {
            "name": "Price Prod",
            "expression": "divide([Val Prod], [Unit Prod])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\Current Period (Price)"
          },
          {
            "name": "Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Base Metrics\\Current Period (Amount)",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              }
            ]
          },
          {
            "name": "B&M Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB B&M Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB B&M Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB B&M Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB B&M Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB B&M Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST B&M Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST B&M Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST B&M Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Baseline Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Baseline Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Baseline Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Baseline Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Baseline Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Baseline Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Baseline Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Baseline Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Baseline Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Domestic Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Domestic Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Domestic Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Domestic Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Domestic Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Domestic Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Domestic Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Domestic Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Domestic Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Export Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Export Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Export Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Export Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Export Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Export Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Export Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Export Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Grocery Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Grocery Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Grocery Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Grocery Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Grocery Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Grocery Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Grocery Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Grocery Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Grocery Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Incremental Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Incremental Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Incremental Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Incremental Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Incremental Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Incremental Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Incremental Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Incremental Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Incremental Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Lost Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Lost Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Lost Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Lost Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Lost Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Lost Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Lost Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Lost Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Non Promo Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Non Promo Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Non Promo Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Non Promo Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Non Promo Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Non Promo Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Non Promo Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Online Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Online Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Online Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Online Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Online Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Online Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Online Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Online Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Online Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Pack # PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Pack Count PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Pack Count PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Pack Count PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Pack Count PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Pack Count PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Pack Count PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Pack Count PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Pack Count PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Promo Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Promo Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Promo Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Promo Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Promo Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Promo Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Promo Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Promo Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Promo Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Retail Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Retail Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Retail Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Retail Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Retail Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Retail Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Retail Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Retail Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Retail Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Scanout Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Scanout Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Scanout Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Scanout Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Scanout Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Scanout Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Scanout Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Scanout Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Scanout Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Val PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Sellin Val PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Sellin Val PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Sellin Val PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Sellin Val PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Sellin Val PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Sellin Val PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Sellin Val PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Sellin Val PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Unit PI",
            "expression": [
              "Switch(TRUE(), [const_Selected_Scan], switch(TRUE(), [f_CWHRelated] && not [f_CWHNotRelated], [BB Unit PI],",
              "not [f_CWHRelated] && [f_ScanRelated] && Not [f_ScanNotRelated], [BB Unit PI],",
              "[f_CWHRelated] || [f_ScanNotRelated] || [crossf_EID], Blank(),[BB Unit PI]),",
              "[const_Selected_CBG], switch(TRUE(), [f_CBGRelated] && not [f_CBGNotRelated], [BB Unit PI],",
              "[f_CBGNotRelated] || [crossf_EID], Blank(),[BB Unit PI]),",
              "[const_Selected_Profit], switch(TRUE(), [f_ProfitRelated] && not [f_ProfitNotRelated],  [ST Unit PI],",
              "[f_ProfitNotRelated] || [crossf_EID] || [crossf_Brick], Blank(), [ST Unit PI]),",
              "[const_Selected_Probe], if([crossf_Brick], Blank(), calculate([ST Unit PI],",
              "Filter('Dim_Store', 'Dim_Store'[Store Type Description] = \"Retail Pharmacy\"))), BLANK())"
            ],
            "formatString": "0",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "B&M Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([B&M Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([B&M Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Baseline Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Baseline Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Domestic Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Domestic Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Export Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Export Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Grocery Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Grocery Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Incremental Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Incremental Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Lost Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Lost Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Non Promo Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Non Promo Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Online Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Online Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Online Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Pack # LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Pack #], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Pack #], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Pack # % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Pack # % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Pack # Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Pack # Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Pack # Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Pack # Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Pack # Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Pack # Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Pack # Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Pack # Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Pack # Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Pack # Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Pack # PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Pack # PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Pack # Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Pack # Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Pack # Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Pack # Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "isHidden": true,
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Promo Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Promo Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Ret/Gr Unit Ratio LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Ret/Gr Unit Ratio], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.00",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Ret/Gr Unit Ratio PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Ret/Gr Unit Ratio], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Ret/Gr Val Ratio LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Ret/Gr Val Ratio], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.00",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Ret/Gr Val Ratio PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Ret/Gr Val Ratio], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Retail Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Retail Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Scanout Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Scanout Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Price LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Price], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Price PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Price], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Price Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Price Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Price Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Price Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Price Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Price Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Price Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Price Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Sellin Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Sellin Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "SO/SI Unit Ratio LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([SO/SI Unit Ratio], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.00",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "SO/SI Unit Ratio PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([SO/SI Unit Ratio], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "SO/SI Val Ratio LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([SO/SI Val Ratio], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.00",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "SO/SI Val Ratio PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([SO/SI Val Ratio], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val % Mkt Shr LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val % Mkt Shr PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val % Mkt Shr], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Comp LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val Comp], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Comp PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val Comp], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Comp Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Comp Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val Comp Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Mkt LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Mkt PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val Mkt], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Mkt Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Mkt Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val Mkt Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val PI LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val PI], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val PI PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val PI], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Prod Contrib % LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Prod Contrib % PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val Prod Contrib %], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Price +/- LY",
            "expression": "if(isblank([B&M Price LY]), blank(), [B&M Price] - [B&M Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "B&M Price +/- PP",
            "expression": "if(isblank([B&M Price PP]), blank(), [B&M Price] - [B&M Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price Comp +/- LY",
            "expression": "if(isblank([B&M Price Comp LY]), blank(), [B&M Price Comp] - [B&M Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "B&M Price Comp +/- PP",
            "expression": "if(isblank([B&M Price Comp PP]), blank(), [B&M Price Comp] - [B&M Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price Mkt +/- LY",
            "expression": "if(isblank([B&M Price Mkt LY]), blank(), [B&M Price Mkt] - [B&M Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "B&M Price Mkt +/- PP",
            "expression": "if(isblank([B&M Price Mkt PP]), blank(), [B&M Price Mkt] - [B&M Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price Prod +/- LY",
            "expression": "if(isblank([B&M Price Prod LY]), blank(), [B&M Price Prod] - [B&M Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "B&M Price Prod +/- PP",
            "expression": "if(isblank([B&M Price Prod PP]), blank(), [B&M Price Prod] - [B&M Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Unit +/- LY",
            "expression": "if(isblank([B&M Unit LY]), blank(), [B&M Unit] - [B&M Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit +/- PP",
            "expression": "if(isblank([B&M Unit PP]), blank(), [B&M Unit] - [B&M Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([B&M Unit % Mkt Shr LY]), blank(), [B&M Unit % Mkt Shr] - [B&M Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([B&M Unit % Mkt Shr PP]), blank(), [B&M Unit % Mkt Shr] - [B&M Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Comp +/- LY",
            "expression": "if(isblank([B&M Unit Comp LY]), blank(), [B&M Unit Comp] - [B&M Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit Comp +/- PP",
            "expression": "if(isblank([B&M Unit Comp PP]), blank(), [B&M Unit Comp] - [B&M Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Mkt +/- LY",
            "expression": "if(isblank([B&M Unit Mkt LY]), blank(), [B&M Unit Mkt] - [B&M Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit Mkt +/- PP",
            "expression": "if(isblank([B&M Unit Mkt PP]), blank(), [B&M Unit Mkt] - [B&M Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit PI +/- LY",
            "expression": "if(isblank([B&M Unit PI LY]), blank(), [B&M Unit PI] - [B&M Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit PI +/- PP",
            "expression": "if(isblank([B&M Unit PI PP]), blank(), [B&M Unit PI] - [B&M Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Prod +/- LY",
            "expression": "if(isblank([B&M Unit Prod LY]), blank(), [B&M Unit Prod] - [B&M Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit Prod +/- PP",
            "expression": "if(isblank([B&M Unit Prod PP]), blank(), [B&M Unit Prod] - [B&M Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Val +/- LY",
            "expression": "if(isblank([B&M Val LY]), blank(), [B&M Val] - [B&M Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val +/- PP",
            "expression": "if(isblank([B&M Val PP]), blank(), [B&M Val] - [B&M Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val % Mkt Shr +/- LY",
            "expression": "if(isblank([B&M Val % Mkt Shr LY]), blank(), [B&M Val % Mkt Shr] - [B&M Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val % Mkt Shr +/- PP",
            "expression": "if(isblank([B&M Val % Mkt Shr PP]), blank(), [B&M Val % Mkt Shr] - [B&M Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Comp +/- LY",
            "expression": "if(isblank([B&M Val Comp LY]), blank(), [B&M Val Comp] - [B&M Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val Comp +/- PP",
            "expression": "if(isblank([B&M Val Comp PP]), blank(), [B&M Val Comp] - [B&M Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Mkt +/- LY",
            "expression": "if(isblank([B&M Val Mkt LY]), blank(), [B&M Val Mkt] - [B&M Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val Mkt +/- PP",
            "expression": "if(isblank([B&M Val Mkt PP]), blank(), [B&M Val Mkt] - [B&M Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val PI +/- LY",
            "expression": "if(isblank([B&M Val PI LY]), blank(), [B&M Val PI] - [B&M Val PI LY])",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val PI +/- PP",
            "expression": "if(isblank([B&M Val PI PP]), blank(), [B&M Val PI] - [B&M Val PI PP])",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Prod +/- LY",
            "expression": "if(isblank([B&M Val Prod LY]), blank(), [B&M Val Prod] - [B&M Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val Prod +/- PP",
            "expression": "if(isblank([B&M Val Prod PP]), blank(), [B&M Val Prod] - [B&M Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Price +/- LY",
            "expression": "if(isblank([Baseline Price LY]), blank(), [Baseline Price] - [Baseline Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Baseline Price +/- PP",
            "expression": "if(isblank([Baseline Price PP]), blank(), [Baseline Price] - [Baseline Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price Comp +/- LY",
            "expression": "if(isblank([Baseline Price Comp LY]), blank(), [Baseline Price Comp] - [Baseline Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Baseline Price Comp +/- PP",
            "expression": "if(isblank([Baseline Price Comp PP]), blank(), [Baseline Price Comp] - [Baseline Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price Mkt +/- LY",
            "expression": "if(isblank([Baseline Price Mkt LY]), blank(), [Baseline Price Mkt] - [Baseline Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Baseline Price Mkt +/- PP",
            "expression": "if(isblank([Baseline Price Mkt PP]), blank(), [Baseline Price Mkt] - [Baseline Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price Prod +/- LY",
            "expression": "if(isblank([Baseline Price Prod LY]), blank(), [Baseline Price Prod] - [Baseline Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Baseline Price Prod +/- PP",
            "expression": "if(isblank([Baseline Price Prod PP]), blank(), [Baseline Price Prod] - [Baseline Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Unit +/- LY",
            "expression": "if(isblank([Baseline Unit LY]), blank(), [Baseline Unit] - [Baseline Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit +/- PP",
            "expression": "if(isblank([Baseline Unit PP]), blank(), [Baseline Unit] - [Baseline Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Baseline Unit % Mkt Shr LY]), blank(), [Baseline Unit % Mkt Shr] - [Baseline Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Baseline Unit % Mkt Shr PP]), blank(), [Baseline Unit % Mkt Shr] - [Baseline Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Comp +/- LY",
            "expression": "if(isblank([Baseline Unit Comp LY]), blank(), [Baseline Unit Comp] - [Baseline Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit Comp +/- PP",
            "expression": "if(isblank([Baseline Unit Comp PP]), blank(), [Baseline Unit Comp] - [Baseline Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Mkt +/- LY",
            "expression": "if(isblank([Baseline Unit Mkt LY]), blank(), [Baseline Unit Mkt] - [Baseline Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit Mkt +/- PP",
            "expression": "if(isblank([Baseline Unit Mkt PP]), blank(), [Baseline Unit Mkt] - [Baseline Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit PI +/- LY",
            "expression": "if(isblank([Baseline Unit PI LY]), blank(), [Baseline Unit PI] - [Baseline Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit PI +/- PP",
            "expression": "if(isblank([Baseline Unit PI PP]), blank(), [Baseline Unit PI] - [Baseline Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Prod +/- LY",
            "expression": "if(isblank([Baseline Unit Prod LY]), blank(), [Baseline Unit Prod] - [Baseline Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit Prod +/- PP",
            "expression": "if(isblank([Baseline Unit Prod PP]), blank(), [Baseline Unit Prod] - [Baseline Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Val +/- LY",
            "expression": "if(isblank([Baseline Val LY]), blank(), [Baseline Val] - [Baseline Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val +/- PP",
            "expression": "if(isblank([Baseline Val PP]), blank(), [Baseline Val] - [Baseline Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Baseline Val % Mkt Shr LY]), blank(), [Baseline Val % Mkt Shr] - [Baseline Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Baseline Val % Mkt Shr PP]), blank(), [Baseline Val % Mkt Shr] - [Baseline Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Comp +/- LY",
            "expression": "if(isblank([Baseline Val Comp LY]), blank(), [Baseline Val Comp] - [Baseline Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val Comp +/- PP",
            "expression": "if(isblank([Baseline Val Comp PP]), blank(), [Baseline Val Comp] - [Baseline Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Mkt +/- LY",
            "expression": "if(isblank([Baseline Val Mkt LY]), blank(), [Baseline Val Mkt] - [Baseline Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val Mkt +/- PP",
            "expression": "if(isblank([Baseline Val Mkt PP]), blank(), [Baseline Val Mkt] - [Baseline Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val PI +/- LY",
            "expression": "if(isblank([Baseline Val PI LY]), blank(), [Baseline Val PI] - [Baseline Val PI LY])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val PI +/- PP",
            "expression": "if(isblank([Baseline Val PI PP]), blank(), [Baseline Val PI] - [Baseline Val PI PP])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Prod +/- LY",
            "expression": "if(isblank([Baseline Val Prod LY]), blank(), [Baseline Val Prod] - [Baseline Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val Prod +/- PP",
            "expression": "if(isblank([Baseline Val Prod PP]), blank(), [Baseline Val Prod] - [Baseline Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Price +/- LY",
            "expression": "if(isblank([Domestic Price LY]), blank(), [Domestic Price] - [Domestic Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Domestic Price +/- PP",
            "expression": "if(isblank([Domestic Price PP]), blank(), [Domestic Price] - [Domestic Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price Comp +/- LY",
            "expression": "if(isblank([Domestic Price Comp LY]), blank(), [Domestic Price Comp] - [Domestic Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Domestic Price Comp +/- PP",
            "expression": "if(isblank([Domestic Price Comp PP]), blank(), [Domestic Price Comp] - [Domestic Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price Mkt +/- LY",
            "expression": "if(isblank([Domestic Price Mkt LY]), blank(), [Domestic Price Mkt] - [Domestic Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Domestic Price Mkt +/- PP",
            "expression": "if(isblank([Domestic Price Mkt PP]), blank(), [Domestic Price Mkt] - [Domestic Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price Prod +/- LY",
            "expression": "if(isblank([Domestic Price Prod LY]), blank(), [Domestic Price Prod] - [Domestic Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Domestic Price Prod +/- PP",
            "expression": "if(isblank([Domestic Price Prod PP]), blank(), [Domestic Price Prod] - [Domestic Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Unit +/- LY",
            "expression": "if(isblank([Domestic Unit LY]), blank(), [Domestic Unit] - [Domestic Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit +/- PP",
            "expression": "if(isblank([Domestic Unit PP]), blank(), [Domestic Unit] - [Domestic Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Domestic Unit % Mkt Shr LY]), blank(), [Domestic Unit % Mkt Shr] - [Domestic Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Domestic Unit % Mkt Shr PP]), blank(), [Domestic Unit % Mkt Shr] - [Domestic Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Comp +/- LY",
            "expression": "if(isblank([Domestic Unit Comp LY]), blank(), [Domestic Unit Comp] - [Domestic Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit Comp +/- PP",
            "expression": "if(isblank([Domestic Unit Comp PP]), blank(), [Domestic Unit Comp] - [Domestic Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Mkt +/- LY",
            "expression": "if(isblank([Domestic Unit Mkt LY]), blank(), [Domestic Unit Mkt] - [Domestic Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit Mkt +/- PP",
            "expression": "if(isblank([Domestic Unit Mkt PP]), blank(), [Domestic Unit Mkt] - [Domestic Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit PI +/- LY",
            "expression": "if(isblank([Domestic Unit PI LY]), blank(), [Domestic Unit PI] - [Domestic Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit PI +/- PP",
            "expression": "if(isblank([Domestic Unit PI PP]), blank(), [Domestic Unit PI] - [Domestic Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Prod +/- LY",
            "expression": "if(isblank([Domestic Unit Prod LY]), blank(), [Domestic Unit Prod] - [Domestic Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit Prod +/- PP",
            "expression": "if(isblank([Domestic Unit Prod PP]), blank(), [Domestic Unit Prod] - [Domestic Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Val +/- LY",
            "expression": "if(isblank([Domestic Val LY]), blank(), [Domestic Val] - [Domestic Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val +/- PP",
            "expression": "if(isblank([Domestic Val PP]), blank(), [Domestic Val] - [Domestic Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Domestic Val % Mkt Shr LY]), blank(), [Domestic Val % Mkt Shr] - [Domestic Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Domestic Val % Mkt Shr PP]), blank(), [Domestic Val % Mkt Shr] - [Domestic Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Comp +/- LY",
            "expression": "if(isblank([Domestic Val Comp LY]), blank(), [Domestic Val Comp] - [Domestic Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val Comp +/- PP",
            "expression": "if(isblank([Domestic Val Comp PP]), blank(), [Domestic Val Comp] - [Domestic Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Mkt +/- LY",
            "expression": "if(isblank([Domestic Val Mkt LY]), blank(), [Domestic Val Mkt] - [Domestic Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val Mkt +/- PP",
            "expression": "if(isblank([Domestic Val Mkt PP]), blank(), [Domestic Val Mkt] - [Domestic Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val PI +/- LY",
            "expression": "if(isblank([Domestic Val PI LY]), blank(), [Domestic Val PI] - [Domestic Val PI LY])",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val PI +/- PP",
            "expression": "if(isblank([Domestic Val PI PP]), blank(), [Domestic Val PI] - [Domestic Val PI PP])",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Prod +/- LY",
            "expression": "if(isblank([Domestic Val Prod LY]), blank(), [Domestic Val Prod] - [Domestic Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val Prod +/- PP",
            "expression": "if(isblank([Domestic Val Prod PP]), blank(), [Domestic Val Prod] - [Domestic Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Price +/- LY",
            "expression": "if(isblank([Export Price LY]), blank(), [Export Price] - [Export Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Export Price +/- PP",
            "expression": "if(isblank([Export Price PP]), blank(), [Export Price] - [Export Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price Comp +/- LY",
            "expression": "if(isblank([Export Price Comp LY]), blank(), [Export Price Comp] - [Export Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Export Price Comp +/- PP",
            "expression": "if(isblank([Export Price Comp PP]), blank(), [Export Price Comp] - [Export Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price Mkt +/- LY",
            "expression": "if(isblank([Export Price Mkt LY]), blank(), [Export Price Mkt] - [Export Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Export Price Mkt +/- PP",
            "expression": "if(isblank([Export Price Mkt PP]), blank(), [Export Price Mkt] - [Export Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price Prod +/- LY",
            "expression": "if(isblank([Export Price Prod LY]), blank(), [Export Price Prod] - [Export Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\Current Period (Price)"
          },
          {
            "name": "Export Price Prod +/- PP",
            "expression": "if(isblank([Export Price Prod PP]), blank(), [Export Price Prod] - [Export Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Unit +/- LY",
            "expression": "if(isblank([Export Unit LY]), blank(), [Export Unit] - [Export Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit +/- PP",
            "expression": "if(isblank([Export Unit PP]), blank(), [Export Unit] - [Export Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Export Unit % Mkt Shr LY]), blank(), [Export Unit % Mkt Shr] - [Export Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Export Unit % Mkt Shr PP]), blank(), [Export Unit % Mkt Shr] - [Export Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Comp +/- LY",
            "expression": "if(isblank([Export Unit Comp LY]), blank(), [Export Unit Comp] - [Export Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit Comp +/- PP",
            "expression": "if(isblank([Export Unit Comp PP]), blank(), [Export Unit Comp] - [Export Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Mkt +/- LY",
            "expression": "if(isblank([Export Unit Mkt LY]), blank(), [Export Unit Mkt] - [Export Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit Mkt +/- PP",
            "expression": "if(isblank([Export Unit Mkt PP]), blank(), [Export Unit Mkt] - [Export Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit PI +/- LY",
            "expression": "if(isblank([Export Unit PI LY]), blank(), [Export Unit PI] - [Export Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit PI +/- PP",
            "expression": "if(isblank([Export Unit PI PP]), blank(), [Export Unit PI] - [Export Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Prod +/- LY",
            "expression": "if(isblank([Export Unit Prod LY]), blank(), [Export Unit Prod] - [Export Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit Prod +/- PP",
            "expression": "if(isblank([Export Unit Prod PP]), blank(), [Export Unit Prod] - [Export Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Val +/- LY",
            "expression": "if(isblank([Export Val LY]), blank(), [Export Val] - [Export Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val +/- PP",
            "expression": "if(isblank([Export Val PP]), blank(), [Export Val] - [Export Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Export Val % Mkt Shr LY]), blank(), [Export Val % Mkt Shr] - [Export Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Export Val % Mkt Shr PP]), blank(), [Export Val % Mkt Shr] - [Export Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Comp +/- LY",
            "expression": "if(isblank([Export Val Comp LY]), blank(), [Export Val Comp] - [Export Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val Comp +/- PP",
            "expression": "if(isblank([Export Val Comp PP]), blank(), [Export Val Comp] - [Export Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Mkt +/- LY",
            "expression": "if(isblank([Export Val Mkt LY]), blank(), [Export Val Mkt] - [Export Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val Mkt +/- PP",
            "expression": "if(isblank([Export Val Mkt PP]), blank(), [Export Val Mkt] - [Export Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val PI +/- LY",
            "expression": "if(isblank([Export Val PI LY]), blank(), [Export Val PI] - [Export Val PI LY])",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val PI +/- PP",
            "expression": "if(isblank([Export Val PI PP]), blank(), [Export Val PI] - [Export Val PI PP])",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Prod +/- LY",
            "expression": "if(isblank([Export Val Prod LY]), blank(), [Export Val Prod] - [Export Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val Prod +/- PP",
            "expression": "if(isblank([Export Val Prod PP]), blank(), [Export Val Prod] - [Export Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Price +/- LY",
            "expression": "if(isblank([Grocery Price LY]), blank(), [Grocery Price] - [Grocery Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Grocery Price +/- PP",
            "expression": "if(isblank([Grocery Price PP]), blank(), [Grocery Price] - [Grocery Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price Comp +/- LY",
            "expression": "if(isblank([Grocery Price Comp LY]), blank(), [Grocery Price Comp] - [Grocery Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Grocery Price Comp +/- PP",
            "expression": "if(isblank([Grocery Price Comp PP]), blank(), [Grocery Price Comp] - [Grocery Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price Mkt +/- LY",
            "expression": "if(isblank([Grocery Price Mkt LY]), blank(), [Grocery Price Mkt] - [Grocery Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Grocery Price Mkt +/- PP",
            "expression": "if(isblank([Grocery Price Mkt PP]), blank(), [Grocery Price Mkt] - [Grocery Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price Prod +/- LY",
            "expression": "if(isblank([Grocery Price Prod LY]), blank(), [Grocery Price Prod] - [Grocery Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Grocery Price Prod +/- PP",
            "expression": "if(isblank([Grocery Price Prod PP]), blank(), [Grocery Price Prod] - [Grocery Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Unit +/- LY",
            "expression": "if(isblank([Grocery Unit LY]), blank(), [Grocery Unit] - [Grocery Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit +/- PP",
            "expression": "if(isblank([Grocery Unit PP]), blank(), [Grocery Unit] - [Grocery Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Grocery Unit % Mkt Shr LY]), blank(), [Grocery Unit % Mkt Shr] - [Grocery Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Grocery Unit % Mkt Shr PP]), blank(), [Grocery Unit % Mkt Shr] - [Grocery Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Comp +/- LY",
            "expression": "if(isblank([Grocery Unit Comp LY]), blank(), [Grocery Unit Comp] - [Grocery Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit Comp +/- PP",
            "expression": "if(isblank([Grocery Unit Comp PP]), blank(), [Grocery Unit Comp] - [Grocery Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Mkt +/- LY",
            "expression": "if(isblank([Grocery Unit Mkt LY]), blank(), [Grocery Unit Mkt] - [Grocery Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit Mkt +/- PP",
            "expression": "if(isblank([Grocery Unit Mkt PP]), blank(), [Grocery Unit Mkt] - [Grocery Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit PI +/- LY",
            "expression": "if(isblank([Grocery Unit PI LY]), blank(), [Grocery Unit PI] - [Grocery Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit PI +/- PP",
            "expression": "if(isblank([Grocery Unit PI PP]), blank(), [Grocery Unit PI] - [Grocery Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Prod +/- LY",
            "expression": "if(isblank([Grocery Unit Prod LY]), blank(), [Grocery Unit Prod] - [Grocery Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit Prod +/- PP",
            "expression": "if(isblank([Grocery Unit Prod PP]), blank(), [Grocery Unit Prod] - [Grocery Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Val +/- LY",
            "expression": "if(isblank([Grocery Val LY]), blank(), [Grocery Val] - [Grocery Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val +/- PP",
            "expression": "if(isblank([Grocery Val PP]), blank(), [Grocery Val] - [Grocery Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Grocery Val % Mkt Shr LY]), blank(), [Grocery Val % Mkt Shr] - [Grocery Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Grocery Val % Mkt Shr PP]), blank(), [Grocery Val % Mkt Shr] - [Grocery Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Comp +/- LY",
            "expression": "if(isblank([Grocery Val Comp LY]), blank(), [Grocery Val Comp] - [Grocery Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val Comp +/- PP",
            "expression": "if(isblank([Grocery Val Comp PP]), blank(), [Grocery Val Comp] - [Grocery Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Mkt +/- LY",
            "expression": "if(isblank([Grocery Val Mkt LY]), blank(), [Grocery Val Mkt] - [Grocery Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val Mkt +/- PP",
            "expression": "if(isblank([Grocery Val Mkt PP]), blank(), [Grocery Val Mkt] - [Grocery Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val PI +/- LY",
            "expression": "if(isblank([Grocery Val PI LY]), blank(), [Grocery Val PI] - [Grocery Val PI LY])",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val PI +/- PP",
            "expression": "if(isblank([Grocery Val PI PP]), blank(), [Grocery Val PI] - [Grocery Val PI PP])",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Prod +/- LY",
            "expression": "if(isblank([Grocery Val Prod LY]), blank(), [Grocery Val Prod] - [Grocery Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val Prod +/- PP",
            "expression": "if(isblank([Grocery Val Prod PP]), blank(), [Grocery Val Prod] - [Grocery Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Price +/- LY",
            "expression": "if(isblank([Incremental Price LY]), blank(), [Incremental Price] - [Incremental Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Incremental Price +/- PP",
            "expression": "if(isblank([Incremental Price PP]), blank(), [Incremental Price] - [Incremental Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price Comp +/- LY",
            "expression": "if(isblank([Incremental Price Comp LY]), blank(), [Incremental Price Comp] - [Incremental Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Incremental Price Comp +/- PP",
            "expression": "if(isblank([Incremental Price Comp PP]), blank(), [Incremental Price Comp] - [Incremental Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price Mkt +/- LY",
            "expression": "if(isblank([Incremental Price Mkt LY]), blank(), [Incremental Price Mkt] - [Incremental Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Incremental Price Mkt +/- PP",
            "expression": "if(isblank([Incremental Price Mkt PP]), blank(), [Incremental Price Mkt] - [Incremental Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price Prod +/- LY",
            "expression": "if(isblank([Incremental Price Prod LY]), blank(), [Incremental Price Prod] - [Incremental Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Incremental Price Prod +/- PP",
            "expression": "if(isblank([Incremental Price Prod PP]), blank(), [Incremental Price Prod] - [Incremental Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Unit +/- LY",
            "expression": "if(isblank([Incremental Unit LY]), blank(), [Incremental Unit] - [Incremental Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit +/- PP",
            "expression": "if(isblank([Incremental Unit PP]), blank(), [Incremental Unit] - [Incremental Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Incremental Unit % Mkt Shr LY]), blank(), [Incremental Unit % Mkt Shr] - [Incremental Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Incremental Unit % Mkt Shr PP]), blank(), [Incremental Unit % Mkt Shr] - [Incremental Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Comp +/- LY",
            "expression": "if(isblank([Incremental Unit Comp LY]), blank(), [Incremental Unit Comp] - [Incremental Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit Comp +/- PP",
            "expression": "if(isblank([Incremental Unit Comp PP]), blank(), [Incremental Unit Comp] - [Incremental Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Mkt +/- LY",
            "expression": "if(isblank([Incremental Unit Mkt LY]), blank(), [Incremental Unit Mkt] - [Incremental Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit Mkt +/- PP",
            "expression": "if(isblank([Incremental Unit Mkt PP]), blank(), [Incremental Unit Mkt] - [Incremental Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit PI +/- LY",
            "expression": "if(isblank([Incremental Unit PI LY]), blank(), [Incremental Unit PI] - [Incremental Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit PI +/- PP",
            "expression": "if(isblank([Incremental Unit PI PP]), blank(), [Incremental Unit PI] - [Incremental Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Prod +/- LY",
            "expression": "if(isblank([Incremental Unit Prod LY]), blank(), [Incremental Unit Prod] - [Incremental Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit Prod +/- PP",
            "expression": "if(isblank([Incremental Unit Prod PP]), blank(), [Incremental Unit Prod] - [Incremental Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Val +/- LY",
            "expression": "if(isblank([Incremental Val LY]), blank(), [Incremental Val] - [Incremental Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val +/- PP",
            "expression": "if(isblank([Incremental Val PP]), blank(), [Incremental Val] - [Incremental Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Incremental Val % Mkt Shr LY]), blank(), [Incremental Val % Mkt Shr] - [Incremental Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Incremental Val % Mkt Shr PP]), blank(), [Incremental Val % Mkt Shr] - [Incremental Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Comp +/- LY",
            "expression": "if(isblank([Incremental Val Comp LY]), blank(), [Incremental Val Comp] - [Incremental Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val Comp +/- PP",
            "expression": "if(isblank([Incremental Val Comp PP]), blank(), [Incremental Val Comp] - [Incremental Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Mkt +/- LY",
            "expression": "if(isblank([Incremental Val Mkt LY]), blank(), [Incremental Val Mkt] - [Incremental Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val Mkt +/- PP",
            "expression": "if(isblank([Incremental Val Mkt PP]), blank(), [Incremental Val Mkt] - [Incremental Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val PI +/- LY",
            "expression": "if(isblank([Incremental Val PI LY]), blank(), [Incremental Val PI] - [Incremental Val PI LY])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val PI +/- PP",
            "expression": "if(isblank([Incremental Val PI PP]), blank(), [Incremental Val PI] - [Incremental Val PI PP])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Prod +/- LY",
            "expression": "if(isblank([Incremental Val Prod LY]), blank(), [Incremental Val Prod] - [Incremental Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val Prod +/- PP",
            "expression": "if(isblank([Incremental Val Prod PP]), blank(), [Incremental Val Prod] - [Incremental Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Price +/- LY",
            "expression": "if(isblank([Lost Price LY]), blank(), [Lost Price] - [Lost Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Lost Price +/- PP",
            "expression": "if(isblank([Lost Price PP]), blank(), [Lost Price] - [Lost Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price Comp +/- LY",
            "expression": "if(isblank([Lost Price Comp LY]), blank(), [Lost Price Comp] - [Lost Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Lost Price Comp +/- PP",
            "expression": "if(isblank([Lost Price Comp PP]), blank(), [Lost Price Comp] - [Lost Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price Mkt +/- LY",
            "expression": "if(isblank([Lost Price Mkt LY]), blank(), [Lost Price Mkt] - [Lost Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Lost Price Mkt +/- PP",
            "expression": "if(isblank([Lost Price Mkt PP]), blank(), [Lost Price Mkt] - [Lost Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price Prod +/- LY",
            "expression": "if(isblank([Lost Price Prod LY]), blank(), [Lost Price Prod] - [Lost Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Price)"
          },
          {
            "name": "Lost Price Prod +/- PP",
            "expression": "if(isblank([Lost Price Prod PP]), blank(), [Lost Price Prod] - [Lost Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Unit +/- LY",
            "expression": "if(isblank([Lost Unit LY]), blank(), [Lost Unit] - [Lost Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit +/- PP",
            "expression": "if(isblank([Lost Unit PP]), blank(), [Lost Unit] - [Lost Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Lost Unit % Mkt Shr LY]), blank(), [Lost Unit % Mkt Shr] - [Lost Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Lost Unit % Mkt Shr PP]), blank(), [Lost Unit % Mkt Shr] - [Lost Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Comp +/- LY",
            "expression": "if(isblank([Lost Unit Comp LY]), blank(), [Lost Unit Comp] - [Lost Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit Comp +/- PP",
            "expression": "if(isblank([Lost Unit Comp PP]), blank(), [Lost Unit Comp] - [Lost Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Mkt +/- LY",
            "expression": "if(isblank([Lost Unit Mkt LY]), blank(), [Lost Unit Mkt] - [Lost Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit Mkt +/- PP",
            "expression": "if(isblank([Lost Unit Mkt PP]), blank(), [Lost Unit Mkt] - [Lost Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit PI +/- LY",
            "expression": "if(isblank([Lost Unit PI LY]), blank(), [Lost Unit PI] - [Lost Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit PI +/- PP",
            "expression": "if(isblank([Lost Unit PI PP]), blank(), [Lost Unit PI] - [Lost Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Prod +/- LY",
            "expression": "if(isblank([Lost Unit Prod LY]), blank(), [Lost Unit Prod] - [Lost Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit Prod +/- PP",
            "expression": "if(isblank([Lost Unit Prod PP]), blank(), [Lost Unit Prod] - [Lost Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Val +/- LY",
            "expression": "if(isblank([Lost Val LY]), blank(), [Lost Val] - [Lost Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val +/- PP",
            "expression": "if(isblank([Lost Val PP]), blank(), [Lost Val] - [Lost Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Lost Val % Mkt Shr LY]), blank(), [Lost Val % Mkt Shr] - [Lost Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Lost Val % Mkt Shr PP]), blank(), [Lost Val % Mkt Shr] - [Lost Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Comp +/- LY",
            "expression": "if(isblank([Lost Val Comp LY]), blank(), [Lost Val Comp] - [Lost Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val Comp +/- PP",
            "expression": "if(isblank([Lost Val Comp PP]), blank(), [Lost Val Comp] - [Lost Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Mkt +/- LY",
            "expression": "if(isblank([Lost Val Mkt LY]), blank(), [Lost Val Mkt] - [Lost Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val Mkt +/- PP",
            "expression": "if(isblank([Lost Val Mkt PP]), blank(), [Lost Val Mkt] - [Lost Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val PI +/- LY",
            "expression": "if(isblank([Lost Val PI LY]), blank(), [Lost Val PI] - [Lost Val PI LY])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val PI +/- PP",
            "expression": "if(isblank([Lost Val PI PP]), blank(), [Lost Val PI] - [Lost Val PI PP])",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Prod +/- LY",
            "expression": "if(isblank([Lost Val Prod LY]), blank(), [Lost Val Prod] - [Lost Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val Prod +/- PP",
            "expression": "if(isblank([Lost Val Prod PP]), blank(), [Lost Val Prod] - [Lost Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Price +/- LY",
            "expression": "if(isblank([Non Promo Price LY]), blank(), [Non Promo Price] - [Non Promo Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Non Promo Price +/- PP",
            "expression": "if(isblank([Non Promo Price PP]), blank(), [Non Promo Price] - [Non Promo Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price Comp +/- LY",
            "expression": "if(isblank([Non Promo Price Comp LY]), blank(), [Non Promo Price Comp] - [Non Promo Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Non Promo Price Comp +/- PP",
            "expression": "if(isblank([Non Promo Price Comp PP]), blank(), [Non Promo Price Comp] - [Non Promo Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price Mkt +/- LY",
            "expression": "if(isblank([Non Promo Price Mkt LY]), blank(), [Non Promo Price Mkt] - [Non Promo Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Non Promo Price Mkt +/- PP",
            "expression": "if(isblank([Non Promo Price Mkt PP]), blank(), [Non Promo Price Mkt] - [Non Promo Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price Prod +/- LY",
            "expression": "if(isblank([Non Promo Price Prod LY]), blank(), [Non Promo Price Prod] - [Non Promo Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Non Promo Price Prod +/- PP",
            "expression": "if(isblank([Non Promo Price Prod PP]), blank(), [Non Promo Price Prod] - [Non Promo Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Unit +/- LY",
            "expression": "if(isblank([Non Promo Unit LY]), blank(), [Non Promo Unit] - [Non Promo Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit +/- PP",
            "expression": "if(isblank([Non Promo Unit PP]), blank(), [Non Promo Unit] - [Non Promo Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Non Promo Unit % Mkt Shr LY]), blank(), [Non Promo Unit % Mkt Shr] - [Non Promo Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Non Promo Unit % Mkt Shr PP]), blank(), [Non Promo Unit % Mkt Shr] - [Non Promo Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Comp +/- LY",
            "expression": "if(isblank([Non Promo Unit Comp LY]), blank(), [Non Promo Unit Comp] - [Non Promo Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit Comp +/- PP",
            "expression": "if(isblank([Non Promo Unit Comp PP]), blank(), [Non Promo Unit Comp] - [Non Promo Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt +/- LY",
            "expression": "if(isblank([Non Promo Unit Mkt LY]), blank(), [Non Promo Unit Mkt] - [Non Promo Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt +/- PP",
            "expression": "if(isblank([Non Promo Unit Mkt PP]), blank(), [Non Promo Unit Mkt] - [Non Promo Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit PI +/- LY",
            "expression": "if(isblank([Non Promo Unit PI LY]), blank(), [Non Promo Unit PI] - [Non Promo Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit PI +/- PP",
            "expression": "if(isblank([Non Promo Unit PI PP]), blank(), [Non Promo Unit PI] - [Non Promo Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Prod +/- LY",
            "expression": "if(isblank([Non Promo Unit Prod LY]), blank(), [Non Promo Unit Prod] - [Non Promo Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit Prod +/- PP",
            "expression": "if(isblank([Non Promo Unit Prod PP]), blank(), [Non Promo Unit Prod] - [Non Promo Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Val +/- LY",
            "expression": "if(isblank([Non Promo Val LY]), blank(), [Non Promo Val] - [Non Promo Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val +/- PP",
            "expression": "if(isblank([Non Promo Val PP]), blank(), [Non Promo Val] - [Non Promo Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Non Promo Val % Mkt Shr LY]), blank(), [Non Promo Val % Mkt Shr] - [Non Promo Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Non Promo Val % Mkt Shr PP]), blank(), [Non Promo Val % Mkt Shr] - [Non Promo Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Comp +/- LY",
            "expression": "if(isblank([Non Promo Val Comp LY]), blank(), [Non Promo Val Comp] - [Non Promo Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val Comp +/- PP",
            "expression": "if(isblank([Non Promo Val Comp PP]), blank(), [Non Promo Val Comp] - [Non Promo Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Mkt +/- LY",
            "expression": "if(isblank([Non Promo Val Mkt LY]), blank(), [Non Promo Val Mkt] - [Non Promo Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val Mkt +/- PP",
            "expression": "if(isblank([Non Promo Val Mkt PP]), blank(), [Non Promo Val Mkt] - [Non Promo Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val PI +/- LY",
            "expression": "if(isblank([Non Promo Val PI LY]), blank(), [Non Promo Val PI] - [Non Promo Val PI LY])",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val PI +/- PP",
            "expression": "if(isblank([Non Promo Val PI PP]), blank(), [Non Promo Val PI] - [Non Promo Val PI PP])",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Prod +/- LY",
            "expression": "if(isblank([Non Promo Val Prod LY]), blank(), [Non Promo Val Prod] - [Non Promo Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val Prod +/- PP",
            "expression": "if(isblank([Non Promo Val Prod PP]), blank(), [Non Promo Val Prod] - [Non Promo Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Online Price +/- LY",
            "expression": "if(isblank([Online Price LY]), blank(), [Online Price] - [Online Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "Online Price +/- PP",
            "expression": "if(isblank([Online Price PP]), blank(), [Online Price] - [Online Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price Comp +/- LY",
            "expression": "if(isblank([Online Price Comp LY]), blank(), [Online Price Comp] - [Online Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "Online Price Comp +/- PP",
            "expression": "if(isblank([Online Price Comp PP]), blank(), [Online Price Comp] - [Online Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price Mkt +/- LY",
            "expression": "if(isblank([Online Price Mkt LY]), blank(), [Online Price Mkt] - [Online Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "Online Price Mkt +/- PP",
            "expression": "if(isblank([Online Price Mkt PP]), blank(), [Online Price Mkt] - [Online Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price Prod +/- LY",
            "expression": "if(isblank([Online Price Prod LY]), blank(), [Online Price Prod] - [Online Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Price)"
          },
          {
            "name": "Online Price Prod +/- PP",
            "expression": "if(isblank([Online Price Prod PP]), blank(), [Online Price Prod] - [Online Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Unit +/- LY",
            "expression": "if(isblank([Online Unit LY]), blank(), [Online Unit] - [Online Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit +/- PP",
            "expression": "if(isblank([Online Unit PP]), blank(), [Online Unit] - [Online Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Online Unit % Mkt Shr LY]), blank(), [Online Unit % Mkt Shr] - [Online Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Online Unit % Mkt Shr PP]), blank(), [Online Unit % Mkt Shr] - [Online Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Comp +/- LY",
            "expression": "if(isblank([Online Unit Comp LY]), blank(), [Online Unit Comp] - [Online Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit Comp +/- PP",
            "expression": "if(isblank([Online Unit Comp PP]), blank(), [Online Unit Comp] - [Online Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Mkt +/- LY",
            "expression": "if(isblank([Online Unit Mkt LY]), blank(), [Online Unit Mkt] - [Online Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit Mkt +/- PP",
            "expression": "if(isblank([Online Unit Mkt PP]), blank(), [Online Unit Mkt] - [Online Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit PI +/- LY",
            "expression": "if(isblank([Online Unit PI LY]), blank(), [Online Unit PI] - [Online Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit PI +/- PP",
            "expression": "if(isblank([Online Unit PI PP]), blank(), [Online Unit PI] - [Online Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Prod +/- LY",
            "expression": "if(isblank([Online Unit Prod LY]), blank(), [Online Unit Prod] - [Online Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit Prod +/- PP",
            "expression": "if(isblank([Online Unit Prod PP]), blank(), [Online Unit Prod] - [Online Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Val +/- LY",
            "expression": "if(isblank([Online Val LY]), blank(), [Online Val] - [Online Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val +/- PP",
            "expression": "if(isblank([Online Val PP]), blank(), [Online Val] - [Online Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Online Val % Mkt Shr LY]), blank(), [Online Val % Mkt Shr] - [Online Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Online Val % Mkt Shr PP]), blank(), [Online Val % Mkt Shr] - [Online Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Comp +/- LY",
            "expression": "if(isblank([Online Val Comp LY]), blank(), [Online Val Comp] - [Online Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val Comp +/- PP",
            "expression": "if(isblank([Online Val Comp PP]), blank(), [Online Val Comp] - [Online Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Mkt +/- LY",
            "expression": "if(isblank([Online Val Mkt LY]), blank(), [Online Val Mkt] - [Online Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val Mkt +/- PP",
            "expression": "if(isblank([Online Val Mkt PP]), blank(), [Online Val Mkt] - [Online Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val PI +/- LY",
            "expression": "if(isblank([Online Val PI LY]), blank(), [Online Val PI] - [Online Val PI LY])",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val PI +/- PP",
            "expression": "if(isblank([Online Val PI PP]), blank(), [Online Val PI] - [Online Val PI PP])",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Prod +/- LY",
            "expression": "if(isblank([Online Val Prod LY]), blank(), [Online Val Prod] - [Online Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val Prod +/- PP",
            "expression": "if(isblank([Online Val Prod PP]), blank(), [Online Val Prod] - [Online Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Pack # +/- LY",
            "expression": "if(isblank([Pack # LY]), blank(), [Pack #] - [Pack # LY])",
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # +/- PP",
            "expression": "if(isblank([Pack # PP]), blank(), [Pack #] - [Pack # PP])",
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # % Mkt Shr +/- LY",
            "expression": "if(isblank([Pack # % Mkt Shr LY]), blank(), [Pack # % Mkt Shr] - [Pack # % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # % Mkt Shr +/- PP",
            "expression": "if(isblank([Pack # % Mkt Shr PP]), blank(), [Pack # % Mkt Shr] - [Pack # % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Comp +/- LY",
            "expression": "if(isblank([Pack # Comp LY]), blank(), [Pack # Comp] - [Pack # Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # Comp +/- PP",
            "expression": "if(isblank([Pack # Comp PP]), blank(), [Pack # Comp] - [Pack # Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Mkt +/- LY",
            "expression": "if(isblank([Pack # Mkt LY]), blank(), [Pack # Mkt] - [Pack # Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # Mkt +/- PP",
            "expression": "if(isblank([Pack # Mkt PP]), blank(), [Pack # Mkt] - [Pack # Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # PI +/- LY",
            "expression": "if(isblank([Pack # PI LY]), blank(), [Pack # PI] - [Pack # PI LY])",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # PI +/- PP",
            "expression": "if(isblank([Pack # PI PP]), blank(), [Pack # PI] - [Pack # PI PP])",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Prod +/- LY",
            "expression": "if(isblank([Pack # Prod LY]), blank(), [Pack # Prod] - [Pack # Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # Prod +/- PP",
            "expression": "if(isblank([Pack # Prod PP]), blank(), [Pack # Prod] - [Pack # Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Price +/- LY",
            "expression": "if(isblank([Price LY]), blank(), [Price] - [Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\Current Period (Price)"
          },
          {
            "name": "Price +/- PP",
            "expression": "if(isblank([Price PP]), blank(), [Price] - [Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price Comp +/- LY",
            "expression": "if(isblank([Price Comp LY]), blank(), [Price Comp] - [Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\Current Period (Price)"
          },
          {
            "name": "Price Comp +/- PP",
            "expression": "if(isblank([Price Comp PP]), blank(), [Price Comp] - [Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price Mkt +/- LY",
            "expression": "if(isblank([Price Mkt LY]), blank(), [Price Mkt] - [Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\Current Period (Price)"
          },
          {
            "name": "Price Mkt +/- PP",
            "expression": "if(isblank([Price Mkt PP]), blank(), [Price Mkt] - [Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price Prod +/- LY",
            "expression": "if(isblank([Price Prod LY]), blank(), [Price Prod] - [Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\Current Period (Price)"
          },
          {
            "name": "Price Prod +/- PP",
            "expression": "if(isblank([Price Prod PP]), blank(), [Price Prod] - [Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price +/- LY",
            "expression": "if(isblank([Promo Price LY]), blank(), [Promo Price] - [Promo Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Promo Price +/- PP",
            "expression": "if(isblank([Promo Price PP]), blank(), [Promo Price] - [Promo Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Comp +/- LY",
            "expression": "if(isblank([Promo Price Comp LY]), blank(), [Promo Price Comp] - [Promo Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Promo Price Comp +/- PP",
            "expression": "if(isblank([Promo Price Comp PP]), blank(), [Promo Price Comp] - [Promo Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Mkt +/- LY",
            "expression": "if(isblank([Promo Price Mkt LY]), blank(), [Promo Price Mkt] - [Promo Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Promo Price Mkt +/- PP",
            "expression": "if(isblank([Promo Price Mkt PP]), blank(), [Promo Price Mkt] - [Promo Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Prod +/- LY",
            "expression": "if(isblank([Promo Price Prod LY]), blank(), [Promo Price Prod] - [Promo Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\Current Period (Price)"
          },
          {
            "name": "Promo Price Prod +/- PP",
            "expression": "if(isblank([Promo Price Prod PP]), blank(), [Promo Price Prod] - [Promo Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Unit +/- LY",
            "expression": "if(isblank([Promo Unit LY]), blank(), [Promo Unit] - [Promo Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit +/- PP",
            "expression": "if(isblank([Promo Unit PP]), blank(), [Promo Unit] - [Promo Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Promo Unit % Mkt Shr LY]), blank(), [Promo Unit % Mkt Shr] - [Promo Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Promo Unit % Mkt Shr PP]), blank(), [Promo Unit % Mkt Shr] - [Promo Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Comp +/- LY",
            "expression": "if(isblank([Promo Unit Comp LY]), blank(), [Promo Unit Comp] - [Promo Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit Comp +/- PP",
            "expression": "if(isblank([Promo Unit Comp PP]), blank(), [Promo Unit Comp] - [Promo Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Mkt +/- LY",
            "expression": "if(isblank([Promo Unit Mkt LY]), blank(), [Promo Unit Mkt] - [Promo Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit Mkt +/- PP",
            "expression": "if(isblank([Promo Unit Mkt PP]), blank(), [Promo Unit Mkt] - [Promo Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit PI +/- LY",
            "expression": "if(isblank([Promo Unit PI LY]), blank(), [Promo Unit PI] - [Promo Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit PI +/- PP",
            "expression": "if(isblank([Promo Unit PI PP]), blank(), [Promo Unit PI] - [Promo Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Prod +/- LY",
            "expression": "if(isblank([Promo Unit Prod LY]), blank(), [Promo Unit Prod] - [Promo Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit Prod +/- PP",
            "expression": "if(isblank([Promo Unit Prod PP]), blank(), [Promo Unit Prod] - [Promo Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Val +/- LY",
            "expression": "if(isblank([Promo Val LY]), blank(), [Promo Val] - [Promo Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val +/- PP",
            "expression": "if(isblank([Promo Val PP]), blank(), [Promo Val] - [Promo Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Promo Val % Mkt Shr LY]), blank(), [Promo Val % Mkt Shr] - [Promo Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Promo Val % Mkt Shr PP]), blank(), [Promo Val % Mkt Shr] - [Promo Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Comp +/- LY",
            "expression": "if(isblank([Promo Val Comp LY]), blank(), [Promo Val Comp] - [Promo Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val Comp +/- PP",
            "expression": "if(isblank([Promo Val Comp PP]), blank(), [Promo Val Comp] - [Promo Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Mkt +/- LY",
            "expression": "if(isblank([Promo Val Mkt LY]), blank(), [Promo Val Mkt] - [Promo Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val Mkt +/- PP",
            "expression": "if(isblank([Promo Val Mkt PP]), blank(), [Promo Val Mkt] - [Promo Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val PI +/- LY",
            "expression": "if(isblank([Promo Val PI LY]), blank(), [Promo Val PI] - [Promo Val PI LY])",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val PI +/- PP",
            "expression": "if(isblank([Promo Val PI PP]), blank(), [Promo Val PI] - [Promo Val PI PP])",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Prod +/- LY",
            "expression": "if(isblank([Promo Val Prod LY]), blank(), [Promo Val Prod] - [Promo Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val Prod +/- PP",
            "expression": "if(isblank([Promo Val Prod PP]), blank(), [Promo Val Prod] - [Promo Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Ret/Gr Unit Ratio +/- LY",
            "expression": "if(isblank([Ret/Gr Unit Ratio LY]), blank(), [Ret/Gr Unit Ratio] - [Ret/Gr Unit Ratio LY])",
            "formatString": "0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Ret/Gr Unit Ratio +/- PP",
            "expression": "if(isblank([Ret/Gr Unit Ratio PP]), blank(), [Ret/Gr Unit Ratio] - [Ret/Gr Unit Ratio PP])",
            "formatString": "0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Ret/Gr Val Ratio +/- LY",
            "expression": "if(isblank([Ret/Gr Val Ratio LY]), blank(), [Ret/Gr Val Ratio] - [Ret/Gr Val Ratio LY])",
            "formatString": "0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Ret/Gr Val Ratio +/- PP",
            "expression": "if(isblank([Ret/Gr Val Ratio PP]), blank(), [Ret/Gr Val Ratio] - [Ret/Gr Val Ratio PP])",
            "formatString": "0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Price +/- LY",
            "expression": "if(isblank([Retail Price LY]), blank(), [Retail Price] - [Retail Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Retail Price +/- PP",
            "expression": "if(isblank([Retail Price PP]), blank(), [Retail Price] - [Retail Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price Comp +/- LY",
            "expression": "if(isblank([Retail Price Comp LY]), blank(), [Retail Price Comp] - [Retail Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Retail Price Comp +/- PP",
            "expression": "if(isblank([Retail Price Comp PP]), blank(), [Retail Price Comp] - [Retail Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price Mkt +/- LY",
            "expression": "if(isblank([Retail Price Mkt LY]), blank(), [Retail Price Mkt] - [Retail Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Retail Price Mkt +/- PP",
            "expression": "if(isblank([Retail Price Mkt PP]), blank(), [Retail Price Mkt] - [Retail Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price Prod +/- LY",
            "expression": "if(isblank([Retail Price Prod LY]), blank(), [Retail Price Prod] - [Retail Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\Current Period (Price)"
          },
          {
            "name": "Retail Price Prod +/- PP",
            "expression": "if(isblank([Retail Price Prod PP]), blank(), [Retail Price Prod] - [Retail Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Unit +/- LY",
            "expression": "if(isblank([Retail Unit LY]), blank(), [Retail Unit] - [Retail Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit +/- PP",
            "expression": "if(isblank([Retail Unit PP]), blank(), [Retail Unit] - [Retail Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Retail Unit % Mkt Shr LY]), blank(), [Retail Unit % Mkt Shr] - [Retail Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Retail Unit % Mkt Shr PP]), blank(), [Retail Unit % Mkt Shr] - [Retail Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Comp +/- LY",
            "expression": "if(isblank([Retail Unit Comp LY]), blank(), [Retail Unit Comp] - [Retail Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit Comp +/- PP",
            "expression": "if(isblank([Retail Unit Comp PP]), blank(), [Retail Unit Comp] - [Retail Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Mkt +/- LY",
            "expression": "if(isblank([Retail Unit Mkt LY]), blank(), [Retail Unit Mkt] - [Retail Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit Mkt +/- PP",
            "expression": "if(isblank([Retail Unit Mkt PP]), blank(), [Retail Unit Mkt] - [Retail Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit PI +/- LY",
            "expression": "if(isblank([Retail Unit PI LY]), blank(), [Retail Unit PI] - [Retail Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit PI +/- PP",
            "expression": "if(isblank([Retail Unit PI PP]), blank(), [Retail Unit PI] - [Retail Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Prod +/- LY",
            "expression": "if(isblank([Retail Unit Prod LY]), blank(), [Retail Unit Prod] - [Retail Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit Prod +/- PP",
            "expression": "if(isblank([Retail Unit Prod PP]), blank(), [Retail Unit Prod] - [Retail Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Val +/- LY",
            "expression": "if(isblank([Retail Val LY]), blank(), [Retail Val] - [Retail Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val +/- PP",
            "expression": "if(isblank([Retail Val PP]), blank(), [Retail Val] - [Retail Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Retail Val % Mkt Shr LY]), blank(), [Retail Val % Mkt Shr] - [Retail Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Retail Val % Mkt Shr PP]), blank(), [Retail Val % Mkt Shr] - [Retail Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Comp +/- LY",
            "expression": "if(isblank([Retail Val Comp LY]), blank(), [Retail Val Comp] - [Retail Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val Comp +/- PP",
            "expression": "if(isblank([Retail Val Comp PP]), blank(), [Retail Val Comp] - [Retail Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Mkt +/- LY",
            "expression": "if(isblank([Retail Val Mkt LY]), blank(), [Retail Val Mkt] - [Retail Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val Mkt +/- PP",
            "expression": "if(isblank([Retail Val Mkt PP]), blank(), [Retail Val Mkt] - [Retail Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val PI +/- LY",
            "expression": "if(isblank([Retail Val PI LY]), blank(), [Retail Val PI] - [Retail Val PI LY])",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val PI +/- PP",
            "expression": "if(isblank([Retail Val PI PP]), blank(), [Retail Val PI] - [Retail Val PI PP])",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Prod +/- LY",
            "expression": "if(isblank([Retail Val Prod LY]), blank(), [Retail Val Prod] - [Retail Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val Prod +/- PP",
            "expression": "if(isblank([Retail Val Prod PP]), blank(), [Retail Val Prod] - [Retail Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Price +/- LY",
            "expression": "if(isblank([Scanout Price LY]), blank(), [Scanout Price] - [Scanout Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Scanout Price +/- PP",
            "expression": "if(isblank([Scanout Price PP]), blank(), [Scanout Price] - [Scanout Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price Comp +/- LY",
            "expression": "if(isblank([Scanout Price Comp LY]), blank(), [Scanout Price Comp] - [Scanout Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Scanout Price Comp +/- PP",
            "expression": "if(isblank([Scanout Price Comp PP]), blank(), [Scanout Price Comp] - [Scanout Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price Mkt +/- LY",
            "expression": "if(isblank([Scanout Price Mkt LY]), blank(), [Scanout Price Mkt] - [Scanout Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Scanout Price Mkt +/- PP",
            "expression": "if(isblank([Scanout Price Mkt PP]), blank(), [Scanout Price Mkt] - [Scanout Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price Prod +/- LY",
            "expression": "if(isblank([Scanout Price Prod LY]), blank(), [Scanout Price Prod] - [Scanout Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Scanout Price Prod +/- PP",
            "expression": "if(isblank([Scanout Price Prod PP]), blank(), [Scanout Price Prod] - [Scanout Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Unit +/- LY",
            "expression": "if(isblank([Scanout Unit LY]), blank(), [Scanout Unit] - [Scanout Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit +/- PP",
            "expression": "if(isblank([Scanout Unit PP]), blank(), [Scanout Unit] - [Scanout Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Scanout Unit % Mkt Shr LY]), blank(), [Scanout Unit % Mkt Shr] - [Scanout Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Scanout Unit % Mkt Shr PP]), blank(), [Scanout Unit % Mkt Shr] - [Scanout Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Comp +/- LY",
            "expression": "if(isblank([Scanout Unit Comp LY]), blank(), [Scanout Unit Comp] - [Scanout Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit Comp +/- PP",
            "expression": "if(isblank([Scanout Unit Comp PP]), blank(), [Scanout Unit Comp] - [Scanout Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Mkt +/- LY",
            "expression": "if(isblank([Scanout Unit Mkt LY]), blank(), [Scanout Unit Mkt] - [Scanout Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit Mkt +/- PP",
            "expression": "if(isblank([Scanout Unit Mkt PP]), blank(), [Scanout Unit Mkt] - [Scanout Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit PI +/- LY",
            "expression": "if(isblank([Scanout Unit PI LY]), blank(), [Scanout Unit PI] - [Scanout Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit PI +/- PP",
            "expression": "if(isblank([Scanout Unit PI PP]), blank(), [Scanout Unit PI] - [Scanout Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Prod +/- LY",
            "expression": "if(isblank([Scanout Unit Prod LY]), blank(), [Scanout Unit Prod] - [Scanout Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit Prod +/- PP",
            "expression": "if(isblank([Scanout Unit Prod PP]), blank(), [Scanout Unit Prod] - [Scanout Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Val +/- LY",
            "expression": "if(isblank([Scanout Val LY]), blank(), [Scanout Val] - [Scanout Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val +/- PP",
            "expression": "if(isblank([Scanout Val PP]), blank(), [Scanout Val] - [Scanout Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Scanout Val % Mkt Shr LY]), blank(), [Scanout Val % Mkt Shr] - [Scanout Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Scanout Val % Mkt Shr PP]), blank(), [Scanout Val % Mkt Shr] - [Scanout Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Comp +/- LY",
            "expression": "if(isblank([Scanout Val Comp LY]), blank(), [Scanout Val Comp] - [Scanout Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val Comp +/- PP",
            "expression": "if(isblank([Scanout Val Comp PP]), blank(), [Scanout Val Comp] - [Scanout Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Mkt +/- LY",
            "expression": "if(isblank([Scanout Val Mkt LY]), blank(), [Scanout Val Mkt] - [Scanout Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val Mkt +/- PP",
            "expression": "if(isblank([Scanout Val Mkt PP]), blank(), [Scanout Val Mkt] - [Scanout Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val PI +/- LY",
            "expression": "if(isblank([Scanout Val PI LY]), blank(), [Scanout Val PI] - [Scanout Val PI LY])",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val PI +/- PP",
            "expression": "if(isblank([Scanout Val PI PP]), blank(), [Scanout Val PI] - [Scanout Val PI PP])",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Prod +/- LY",
            "expression": "if(isblank([Scanout Val Prod LY]), blank(), [Scanout Val Prod] - [Scanout Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val Prod +/- PP",
            "expression": "if(isblank([Scanout Val Prod PP]), blank(), [Scanout Val Prod] - [Scanout Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Price +/- LY",
            "expression": "if(isblank([Sellin Price LY]), blank(), [Sellin Price] - [Sellin Price LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Sellin Price +/- PP",
            "expression": "if(isblank([Sellin Price PP]), blank(), [Sellin Price] - [Sellin Price PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price Comp +/- LY",
            "expression": "if(isblank([Sellin Price Comp LY]), blank(), [Sellin Price Comp] - [Sellin Price Comp LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Sellin Price Comp +/- PP",
            "expression": "if(isblank([Sellin Price Comp PP]), blank(), [Sellin Price Comp] - [Sellin Price Comp PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price Mkt +/- LY",
            "expression": "if(isblank([Sellin Price Mkt LY]), blank(), [Sellin Price Mkt] - [Sellin Price Mkt LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Sellin Price Mkt +/- PP",
            "expression": "if(isblank([Sellin Price Mkt PP]), blank(), [Sellin Price Mkt] - [Sellin Price Mkt PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price Prod +/- LY",
            "expression": "if(isblank([Sellin Price Prod LY]), blank(), [Sellin Price Prod] - [Sellin Price Prod LY])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Price)"
          },
          {
            "name": "Sellin Price Prod +/- PP",
            "expression": "if(isblank([Sellin Price Prod PP]), blank(), [Sellin Price Prod] - [Sellin Price Prod PP])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Unit +/- LY",
            "expression": "if(isblank([Sellin Unit LY]), blank(), [Sellin Unit] - [Sellin Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit +/- PP",
            "expression": "if(isblank([Sellin Unit PP]), blank(), [Sellin Unit] - [Sellin Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Sellin Unit % Mkt Shr LY]), blank(), [Sellin Unit % Mkt Shr] - [Sellin Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Sellin Unit % Mkt Shr PP]), blank(), [Sellin Unit % Mkt Shr] - [Sellin Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Comp +/- LY",
            "expression": "if(isblank([Sellin Unit Comp LY]), blank(), [Sellin Unit Comp] - [Sellin Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit Comp +/- PP",
            "expression": "if(isblank([Sellin Unit Comp PP]), blank(), [Sellin Unit Comp] - [Sellin Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Mkt +/- LY",
            "expression": "if(isblank([Sellin Unit Mkt LY]), blank(), [Sellin Unit Mkt] - [Sellin Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit Mkt +/- PP",
            "expression": "if(isblank([Sellin Unit Mkt PP]), blank(), [Sellin Unit Mkt] - [Sellin Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit PI +/- LY",
            "expression": "if(isblank([Sellin Unit PI LY]), blank(), [Sellin Unit PI] - [Sellin Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit PI +/- PP",
            "expression": "if(isblank([Sellin Unit PI PP]), blank(), [Sellin Unit PI] - [Sellin Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Prod +/- LY",
            "expression": "if(isblank([Sellin Unit Prod LY]), blank(), [Sellin Unit Prod] - [Sellin Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit Prod +/- PP",
            "expression": "if(isblank([Sellin Unit Prod PP]), blank(), [Sellin Unit Prod] - [Sellin Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Val +/- LY",
            "expression": "if(isblank([Sellin Val LY]), blank(), [Sellin Val] - [Sellin Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val +/- PP",
            "expression": "if(isblank([Sellin Val PP]), blank(), [Sellin Val] - [Sellin Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Sellin Val % Mkt Shr LY]), blank(), [Sellin Val % Mkt Shr] - [Sellin Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Sellin Val % Mkt Shr PP]), blank(), [Sellin Val % Mkt Shr] - [Sellin Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Comp +/- LY",
            "expression": "if(isblank([Sellin Val Comp LY]), blank(), [Sellin Val Comp] - [Sellin Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val Comp +/- PP",
            "expression": "if(isblank([Sellin Val Comp PP]), blank(), [Sellin Val Comp] - [Sellin Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Mkt +/- LY",
            "expression": "if(isblank([Sellin Val Mkt LY]), blank(), [Sellin Val Mkt] - [Sellin Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val Mkt +/- PP",
            "expression": "if(isblank([Sellin Val Mkt PP]), blank(), [Sellin Val Mkt] - [Sellin Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val PI +/- LY",
            "expression": "if(isblank([Sellin Val PI LY]), blank(), [Sellin Val PI] - [Sellin Val PI LY])",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val PI +/- PP",
            "expression": "if(isblank([Sellin Val PI PP]), blank(), [Sellin Val PI] - [Sellin Val PI PP])",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Prod +/- LY",
            "expression": "if(isblank([Sellin Val Prod LY]), blank(), [Sellin Val Prod] - [Sellin Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val Prod +/- PP",
            "expression": "if(isblank([Sellin Val Prod PP]), blank(), [Sellin Val Prod] - [Sellin Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "SO/SI Unit Ratio +/- LY",
            "expression": "if(isblank([SO/SI Unit Ratio LY]), blank(), [SO/SI Unit Ratio] - [SO/SI Unit Ratio LY])",
            "formatString": "0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "SO/SI Unit Ratio +/- PP",
            "expression": "if(isblank([SO/SI Unit Ratio PP]), blank(), [SO/SI Unit Ratio] - [SO/SI Unit Ratio PP])",
            "formatString": "0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "SO/SI Val Ratio +/- LY",
            "expression": "if(isblank([SO/SI Val Ratio LY]), blank(), [SO/SI Val Ratio] - [SO/SI Val Ratio LY])",
            "formatString": "0.00",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "SO/SI Val Ratio +/- PP",
            "expression": "if(isblank([SO/SI Val Ratio PP]), blank(), [SO/SI Val Ratio] - [SO/SI Val Ratio PP])",
            "formatString": "0.00",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Unit +/- LY",
            "expression": "if(isblank([Unit LY]), blank(), [Unit] - [Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit +/- PP",
            "expression": "if(isblank([Unit PP]), blank(), [Unit] - [Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit % Mkt Shr +/- LY",
            "expression": "if(isblank([Unit % Mkt Shr LY]), blank(), [Unit % Mkt Shr] - [Unit % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit % Mkt Shr +/- PP",
            "expression": "if(isblank([Unit % Mkt Shr PP]), blank(), [Unit % Mkt Shr] - [Unit % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Comp +/- LY",
            "expression": "if(isblank([Unit Comp LY]), blank(), [Unit Comp] - [Unit Comp LY])",
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit Comp +/- PP",
            "expression": "if(isblank([Unit Comp PP]), blank(), [Unit Comp] - [Unit Comp PP])",
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Mkt +/- LY",
            "expression": "if(isblank([Unit Mkt LY]), blank(), [Unit Mkt] - [Unit Mkt LY])",
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit Mkt +/- PP",
            "expression": "if(isblank([Unit Mkt PP]), blank(), [Unit Mkt] - [Unit Mkt PP])",
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit PI +/- LY",
            "expression": "if(isblank([Unit PI LY]), blank(), [Unit PI] - [Unit PI LY])",
            "formatString": "0",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit PI +/- PP",
            "expression": "if(isblank([Unit PI PP]), blank(), [Unit PI] - [Unit PI PP])",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Prod +/- LY",
            "expression": "if(isblank([Unit Prod LY]), blank(), [Unit Prod] - [Unit Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit Prod +/- PP",
            "expression": "if(isblank([Unit Prod PP]), blank(), [Unit Prod] - [Unit Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Val +/- LY",
            "expression": "if(isblank([Val LY]), blank(), [Val] - [Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val +/- PP",
            "expression": "if(isblank([Val PP]), blank(), [Val] - [Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val % Mkt Shr +/- LY",
            "expression": "if(isblank([Val % Mkt Shr LY]), blank(), [Val % Mkt Shr] - [Val % Mkt Shr LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val % Mkt Shr +/- PP",
            "expression": "if(isblank([Val % Mkt Shr PP]), blank(), [Val % Mkt Shr] - [Val % Mkt Shr PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Comp +/- LY",
            "expression": "if(isblank([Val Comp LY]), blank(), [Val Comp] - [Val Comp LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val Comp +/- PP",
            "expression": "if(isblank([Val Comp PP]), blank(), [Val Comp] - [Val Comp PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Mkt +/- LY",
            "expression": "if(isblank([Val Mkt LY]), blank(), [Val Mkt] - [Val Mkt LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val Mkt +/- PP",
            "expression": "if(isblank([Val Mkt PP]), blank(), [Val Mkt] - [Val Mkt PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val PI +/- LY",
            "expression": "if(isblank([Val PI LY]), blank(), [Val PI] - [Val PI LY])",
            "formatString": "0",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val PI +/- PP",
            "expression": "if(isblank([Val PI PP]), blank(), [Val PI] - [Val PI PP])",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Prod +/- LY",
            "expression": "if(isblank([Val Prod LY]), blank(), [Val Prod] - [Val Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val Prod +/- PP",
            "expression": "if(isblank([Val Prod PP]), blank(), [Val Prod] - [Val Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Price Gr % vs LY",
            "expression": "divide([B&M Price +/- LY], [B&M Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Price Gr % vs PP",
            "expression": "divide([B&M Price +/- PP], [B&M Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price Comp Gr % vs LY",
            "expression": "divide([B&M Price Comp +/- LY], [B&M Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Price Comp Gr % vs PP",
            "expression": "divide([B&M Price Comp +/- PP], [B&M Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price Mkt Gr % vs LY",
            "expression": "divide([B&M Price Mkt +/- LY], [B&M Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Price Mkt Gr % vs PP",
            "expression": "divide([B&M Price Mkt +/- PP], [B&M Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price Prod Gr % vs LY",
            "expression": "divide([B&M Price Prod +/- LY], [B&M Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Price Prod Gr % vs PP",
            "expression": "divide([B&M Price Prod +/- PP], [B&M Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Unit Gr % vs LY",
            "expression": "divide([B&M Unit +/- LY], [B&M Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Gr % vs PP",
            "expression": "divide([B&M Unit +/- PP], [B&M Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Comp Gr % vs LY",
            "expression": "divide([B&M Unit Comp +/- LY], [B&M Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Comp Gr % vs PP",
            "expression": "divide([B&M Unit Comp +/- PP], [B&M Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Mkt Gr % vs LY",
            "expression": "divide([B&M Unit Mkt +/- LY], [B&M Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Mkt Gr % vs PP",
            "expression": "divide([B&M Unit Mkt +/- PP], [B&M Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit PI Gr % vs LY",
            "expression": "divide([B&M Unit PI +/- LY], [B&M Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit PI Gr % vs PP",
            "expression": "divide([B&M Unit PI +/- PP], [B&M Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Prod Gr % vs LY",
            "expression": "divide([B&M Unit Prod +/- LY], [B&M Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Prod Gr % vs PP",
            "expression": "divide([B&M Unit Prod +/- PP], [B&M Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Val Gr % vs LY",
            "expression": "divide([B&M Val +/- LY], [B&M Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Gr % vs PP",
            "expression": "divide([B&M Val +/- PP], [B&M Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Comp Gr % vs LY",
            "expression": "divide([B&M Val Comp +/- LY], [B&M Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Comp Gr % vs PP",
            "expression": "divide([B&M Val Comp +/- PP], [B&M Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Mkt Gr % vs LY",
            "expression": "divide([B&M Val Mkt +/- LY], [B&M Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Mkt Gr % vs PP",
            "expression": "divide([B&M Val Mkt +/- PP], [B&M Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val PI Gr % vs LY",
            "expression": "divide([B&M Val PI +/- LY], [B&M Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val PI Gr % vs PP",
            "expression": "divide([B&M Val PI +/- PP], [B&M Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Prod Gr % vs LY",
            "expression": "divide([B&M Val Prod +/- LY], [B&M Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Prod Gr % vs PP",
            "expression": "divide([B&M Val Prod +/- PP], [B&M Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Price Gr % vs LY",
            "expression": "divide([Baseline Price +/- LY], [Baseline Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Price Gr % vs PP",
            "expression": "divide([Baseline Price +/- PP], [Baseline Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price Comp Gr % vs LY",
            "expression": "divide([Baseline Price Comp +/- LY], [Baseline Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Price Comp Gr % vs PP",
            "expression": "divide([Baseline Price Comp +/- PP], [Baseline Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price Mkt Gr % vs LY",
            "expression": "divide([Baseline Price Mkt +/- LY], [Baseline Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Price Mkt Gr % vs PP",
            "expression": "divide([Baseline Price Mkt +/- PP], [Baseline Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price Prod Gr % vs LY",
            "expression": "divide([Baseline Price Prod +/- LY], [Baseline Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Price Prod Gr % vs PP",
            "expression": "divide([Baseline Price Prod +/- PP], [Baseline Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Unit Gr % vs LY",
            "expression": "divide([Baseline Unit +/- LY], [Baseline Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Gr % vs PP",
            "expression": "divide([Baseline Unit +/- PP], [Baseline Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Comp Gr % vs LY",
            "expression": "divide([Baseline Unit Comp +/- LY], [Baseline Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Comp Gr % vs PP",
            "expression": "divide([Baseline Unit Comp +/- PP], [Baseline Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Mkt Gr % vs LY",
            "expression": "divide([Baseline Unit Mkt +/- LY], [Baseline Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Mkt Gr % vs PP",
            "expression": "divide([Baseline Unit Mkt +/- PP], [Baseline Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit PI Gr % vs LY",
            "expression": "divide([Baseline Unit PI +/- LY], [Baseline Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit PI Gr % vs PP",
            "expression": "divide([Baseline Unit PI +/- PP], [Baseline Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Prod Gr % vs LY",
            "expression": "divide([Baseline Unit Prod +/- LY], [Baseline Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Prod Gr % vs PP",
            "expression": "divide([Baseline Unit Prod +/- PP], [Baseline Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Val Gr % vs LY",
            "expression": "divide([Baseline Val +/- LY], [Baseline Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Gr % vs PP",
            "expression": "divide([Baseline Val +/- PP], [Baseline Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Comp Gr % vs LY",
            "expression": "divide([Baseline Val Comp +/- LY], [Baseline Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Comp Gr % vs PP",
            "expression": "divide([Baseline Val Comp +/- PP], [Baseline Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Mkt Gr % vs LY",
            "expression": "divide([Baseline Val Mkt +/- LY], [Baseline Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Mkt Gr % vs PP",
            "expression": "divide([Baseline Val Mkt +/- PP], [Baseline Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val PI Gr % vs LY",
            "expression": "divide([Baseline Val PI +/- LY], [Baseline Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val PI Gr % vs PP",
            "expression": "divide([Baseline Val PI +/- PP], [Baseline Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Prod Gr % vs LY",
            "expression": "divide([Baseline Val Prod +/- LY], [Baseline Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Prod Gr % vs PP",
            "expression": "divide([Baseline Val Prod +/- PP], [Baseline Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Price Gr % vs LY",
            "expression": "divide([Domestic Price +/- LY], [Domestic Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Price Gr % vs PP",
            "expression": "divide([Domestic Price +/- PP], [Domestic Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price Comp Gr % vs LY",
            "expression": "divide([Domestic Price Comp +/- LY], [Domestic Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Price Comp Gr % vs PP",
            "expression": "divide([Domestic Price Comp +/- PP], [Domestic Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price Mkt Gr % vs LY",
            "expression": "divide([Domestic Price Mkt +/- LY], [Domestic Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Price Mkt Gr % vs PP",
            "expression": "divide([Domestic Price Mkt +/- PP], [Domestic Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price Prod Gr % vs LY",
            "expression": "divide([Domestic Price Prod +/- LY], [Domestic Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Price Prod Gr % vs PP",
            "expression": "divide([Domestic Price Prod +/- PP], [Domestic Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Unit Gr % vs LY",
            "expression": "divide([Domestic Unit +/- LY], [Domestic Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Gr % vs PP",
            "expression": "divide([Domestic Unit +/- PP], [Domestic Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Comp Gr % vs LY",
            "expression": "divide([Domestic Unit Comp +/- LY], [Domestic Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Comp Gr % vs PP",
            "expression": "divide([Domestic Unit Comp +/- PP], [Domestic Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Mkt Gr % vs LY",
            "expression": "divide([Domestic Unit Mkt +/- LY], [Domestic Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Mkt Gr % vs PP",
            "expression": "divide([Domestic Unit Mkt +/- PP], [Domestic Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit PI Gr % vs LY",
            "expression": "divide([Domestic Unit PI +/- LY], [Domestic Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit PI Gr % vs PP",
            "expression": "divide([Domestic Unit PI +/- PP], [Domestic Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Prod Gr % vs LY",
            "expression": "divide([Domestic Unit Prod +/- LY], [Domestic Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Prod Gr % vs PP",
            "expression": "divide([Domestic Unit Prod +/- PP], [Domestic Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Val Gr % vs LY",
            "expression": "divide([Domestic Val +/- LY], [Domestic Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Gr % vs PP",
            "expression": "divide([Domestic Val +/- PP], [Domestic Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Comp Gr % vs LY",
            "expression": "divide([Domestic Val Comp +/- LY], [Domestic Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Comp Gr % vs PP",
            "expression": "divide([Domestic Val Comp +/- PP], [Domestic Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Mkt Gr % vs LY",
            "expression": "divide([Domestic Val Mkt +/- LY], [Domestic Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Mkt Gr % vs PP",
            "expression": "divide([Domestic Val Mkt +/- PP], [Domestic Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val PI Gr % vs LY",
            "expression": "divide([Domestic Val PI +/- LY], [Domestic Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val PI Gr % vs PP",
            "expression": "divide([Domestic Val PI +/- PP], [Domestic Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Prod Gr % vs LY",
            "expression": "divide([Domestic Val Prod +/- LY], [Domestic Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Prod Gr % vs PP",
            "expression": "divide([Domestic Val Prod +/- PP], [Domestic Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Price Gr % vs LY",
            "expression": "divide([Export Price +/- LY], [Export Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Price Gr % vs PP",
            "expression": "divide([Export Price +/- PP], [Export Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price Comp Gr % vs LY",
            "expression": "divide([Export Price Comp +/- LY], [Export Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Price Comp Gr % vs PP",
            "expression": "divide([Export Price Comp +/- PP], [Export Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price Mkt Gr % vs LY",
            "expression": "divide([Export Price Mkt +/- LY], [Export Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Price Mkt Gr % vs PP",
            "expression": "divide([Export Price Mkt +/- PP], [Export Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price Prod Gr % vs LY",
            "expression": "divide([Export Price Prod +/- LY], [Export Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Price Prod Gr % vs PP",
            "expression": "divide([Export Price Prod +/- PP], [Export Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Unit Gr % vs LY",
            "expression": "divide([Export Unit +/- LY], [Export Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Gr % vs PP",
            "expression": "divide([Export Unit +/- PP], [Export Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Comp Gr % vs LY",
            "expression": "divide([Export Unit Comp +/- LY], [Export Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Comp Gr % vs PP",
            "expression": "divide([Export Unit Comp +/- PP], [Export Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Mkt Gr % vs LY",
            "expression": "divide([Export Unit Mkt +/- LY], [Export Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Mkt Gr % vs PP",
            "expression": "divide([Export Unit Mkt +/- PP], [Export Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit PI Gr % vs LY",
            "expression": "divide([Export Unit PI +/- LY], [Export Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit PI Gr % vs PP",
            "expression": "divide([Export Unit PI +/- PP], [Export Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Prod Gr % vs LY",
            "expression": "divide([Export Unit Prod +/- LY], [Export Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Prod Gr % vs PP",
            "expression": "divide([Export Unit Prod +/- PP], [Export Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Val Gr % vs LY",
            "expression": "divide([Export Val +/- LY], [Export Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Gr % vs PP",
            "expression": "divide([Export Val +/- PP], [Export Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Comp Gr % vs LY",
            "expression": "divide([Export Val Comp +/- LY], [Export Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Comp Gr % vs PP",
            "expression": "divide([Export Val Comp +/- PP], [Export Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Mkt Gr % vs LY",
            "expression": "divide([Export Val Mkt +/- LY], [Export Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Mkt Gr % vs PP",
            "expression": "divide([Export Val Mkt +/- PP], [Export Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val PI Gr % vs LY",
            "expression": "divide([Export Val PI +/- LY], [Export Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val PI Gr % vs PP",
            "expression": "divide([Export Val PI +/- PP], [Export Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Prod Gr % vs LY",
            "expression": "divide([Export Val Prod +/- LY], [Export Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Prod Gr % vs PP",
            "expression": "divide([Export Val Prod +/- PP], [Export Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Price Gr % vs LY",
            "expression": "divide([Grocery Price +/- LY], [Grocery Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Price Gr % vs PP",
            "expression": "divide([Grocery Price +/- PP], [Grocery Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price Comp Gr % vs LY",
            "expression": "divide([Grocery Price Comp +/- LY], [Grocery Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Price Comp Gr % vs PP",
            "expression": "divide([Grocery Price Comp +/- PP], [Grocery Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price Mkt Gr % vs LY",
            "expression": "divide([Grocery Price Mkt +/- LY], [Grocery Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Price Mkt Gr % vs PP",
            "expression": "divide([Grocery Price Mkt +/- PP], [Grocery Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price Prod Gr % vs LY",
            "expression": "divide([Grocery Price Prod +/- LY], [Grocery Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Price Prod Gr % vs PP",
            "expression": "divide([Grocery Price Prod +/- PP], [Grocery Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Unit Gr % vs LY",
            "expression": "divide([Grocery Unit +/- LY], [Grocery Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Gr % vs PP",
            "expression": "divide([Grocery Unit +/- PP], [Grocery Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Comp Gr % vs LY",
            "expression": "divide([Grocery Unit Comp +/- LY], [Grocery Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Comp Gr % vs PP",
            "expression": "divide([Grocery Unit Comp +/- PP], [Grocery Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Mkt Gr % vs LY",
            "expression": "divide([Grocery Unit Mkt +/- LY], [Grocery Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Mkt Gr % vs PP",
            "expression": "divide([Grocery Unit Mkt +/- PP], [Grocery Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit PI Gr % vs LY",
            "expression": "divide([Grocery Unit PI +/- LY], [Grocery Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit PI Gr % vs PP",
            "expression": "divide([Grocery Unit PI +/- PP], [Grocery Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Prod Gr % vs LY",
            "expression": "divide([Grocery Unit Prod +/- LY], [Grocery Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Prod Gr % vs PP",
            "expression": "divide([Grocery Unit Prod +/- PP], [Grocery Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Val Gr % vs LY",
            "expression": "divide([Grocery Val +/- LY], [Grocery Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Gr % vs PP",
            "expression": "divide([Grocery Val +/- PP], [Grocery Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Comp Gr % vs LY",
            "expression": "divide([Grocery Val Comp +/- LY], [Grocery Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Comp Gr % vs PP",
            "expression": "divide([Grocery Val Comp +/- PP], [Grocery Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Mkt Gr % vs LY",
            "expression": "divide([Grocery Val Mkt +/- LY], [Grocery Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Mkt Gr % vs PP",
            "expression": "divide([Grocery Val Mkt +/- PP], [Grocery Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val PI Gr % vs LY",
            "expression": "divide([Grocery Val PI +/- LY], [Grocery Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val PI Gr % vs PP",
            "expression": "divide([Grocery Val PI +/- PP], [Grocery Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Prod Gr % vs LY",
            "expression": "divide([Grocery Val Prod +/- LY], [Grocery Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Prod Gr % vs PP",
            "expression": "divide([Grocery Val Prod +/- PP], [Grocery Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Price Gr % vs LY",
            "expression": "divide([Incremental Price +/- LY], [Incremental Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Price Gr % vs PP",
            "expression": "divide([Incremental Price +/- PP], [Incremental Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price Comp Gr % vs LY",
            "expression": "divide([Incremental Price Comp +/- LY], [Incremental Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Price Comp Gr % vs PP",
            "expression": "divide([Incremental Price Comp +/- PP], [Incremental Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price Mkt Gr % vs LY",
            "expression": "divide([Incremental Price Mkt +/- LY], [Incremental Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Price Mkt Gr % vs PP",
            "expression": "divide([Incremental Price Mkt +/- PP], [Incremental Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price Prod Gr % vs LY",
            "expression": "divide([Incremental Price Prod +/- LY], [Incremental Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Price Prod Gr % vs PP",
            "expression": "divide([Incremental Price Prod +/- PP], [Incremental Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Unit Gr % vs LY",
            "expression": "divide([Incremental Unit +/- LY], [Incremental Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Gr % vs PP",
            "expression": "divide([Incremental Unit +/- PP], [Incremental Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Comp Gr % vs LY",
            "expression": "divide([Incremental Unit Comp +/- LY], [Incremental Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Comp Gr % vs PP",
            "expression": "divide([Incremental Unit Comp +/- PP], [Incremental Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Mkt Gr % vs LY",
            "expression": "divide([Incremental Unit Mkt +/- LY], [Incremental Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Mkt Gr % vs PP",
            "expression": "divide([Incremental Unit Mkt +/- PP], [Incremental Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit PI Gr % vs LY",
            "expression": "divide([Incremental Unit PI +/- LY], [Incremental Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit PI Gr % vs PP",
            "expression": "divide([Incremental Unit PI +/- PP], [Incremental Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Prod Gr % vs LY",
            "expression": "divide([Incremental Unit Prod +/- LY], [Incremental Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Prod Gr % vs PP",
            "expression": "divide([Incremental Unit Prod +/- PP], [Incremental Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Val Gr % vs LY",
            "expression": "divide([Incremental Val +/- LY], [Incremental Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Gr % vs PP",
            "expression": "divide([Incremental Val +/- PP], [Incremental Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Comp Gr % vs LY",
            "expression": "divide([Incremental Val Comp +/- LY], [Incremental Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Comp Gr % vs PP",
            "expression": "divide([Incremental Val Comp +/- PP], [Incremental Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Mkt Gr % vs LY",
            "expression": "divide([Incremental Val Mkt +/- LY], [Incremental Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Mkt Gr % vs PP",
            "expression": "divide([Incremental Val Mkt +/- PP], [Incremental Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val PI Gr % vs LY",
            "expression": "divide([Incremental Val PI +/- LY], [Incremental Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val PI Gr % vs PP",
            "expression": "divide([Incremental Val PI +/- PP], [Incremental Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Prod Gr % vs LY",
            "expression": "divide([Incremental Val Prod +/- LY], [Incremental Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Prod Gr % vs PP",
            "expression": "divide([Incremental Val Prod +/- PP], [Incremental Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Price Gr % vs LY",
            "expression": "divide([Lost Price +/- LY], [Lost Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Price Gr % vs PP",
            "expression": "divide([Lost Price +/- PP], [Lost Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price Comp Gr % vs LY",
            "expression": "divide([Lost Price Comp +/- LY], [Lost Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Price Comp Gr % vs PP",
            "expression": "divide([Lost Price Comp +/- PP], [Lost Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price Mkt Gr % vs LY",
            "expression": "divide([Lost Price Mkt +/- LY], [Lost Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Price Mkt Gr % vs PP",
            "expression": "divide([Lost Price Mkt +/- PP], [Lost Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price Prod Gr % vs LY",
            "expression": "divide([Lost Price Prod +/- LY], [Lost Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Price Prod Gr % vs PP",
            "expression": "divide([Lost Price Prod +/- PP], [Lost Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Unit Gr % vs LY",
            "expression": "divide([Lost Unit +/- LY], [Lost Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Gr % vs PP",
            "expression": "divide([Lost Unit +/- PP], [Lost Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Comp Gr % vs LY",
            "expression": "divide([Lost Unit Comp +/- LY], [Lost Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Comp Gr % vs PP",
            "expression": "divide([Lost Unit Comp +/- PP], [Lost Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Mkt Gr % vs LY",
            "expression": "divide([Lost Unit Mkt +/- LY], [Lost Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Mkt Gr % vs PP",
            "expression": "divide([Lost Unit Mkt +/- PP], [Lost Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit PI Gr % vs LY",
            "expression": "divide([Lost Unit PI +/- LY], [Lost Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit PI Gr % vs PP",
            "expression": "divide([Lost Unit PI +/- PP], [Lost Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Prod Gr % vs LY",
            "expression": "divide([Lost Unit Prod +/- LY], [Lost Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Prod Gr % vs PP",
            "expression": "divide([Lost Unit Prod +/- PP], [Lost Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Val Gr % vs LY",
            "expression": "divide([Lost Val +/- LY], [Lost Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Gr % vs PP",
            "expression": "divide([Lost Val +/- PP], [Lost Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Comp Gr % vs LY",
            "expression": "divide([Lost Val Comp +/- LY], [Lost Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Comp Gr % vs PP",
            "expression": "divide([Lost Val Comp +/- PP], [Lost Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Mkt Gr % vs LY",
            "expression": "divide([Lost Val Mkt +/- LY], [Lost Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Mkt Gr % vs PP",
            "expression": "divide([Lost Val Mkt +/- PP], [Lost Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val PI Gr % vs LY",
            "expression": "divide([Lost Val PI +/- LY], [Lost Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val PI Gr % vs PP",
            "expression": "divide([Lost Val PI +/- PP], [Lost Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Prod Gr % vs LY",
            "expression": "divide([Lost Val Prod +/- LY], [Lost Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Prod Gr % vs PP",
            "expression": "divide([Lost Val Prod +/- PP], [Lost Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Price Gr % vs LY",
            "expression": "divide([Non Promo Price +/- LY], [Non Promo Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Price Gr % vs PP",
            "expression": "divide([Non Promo Price +/- PP], [Non Promo Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price Comp Gr % vs LY",
            "expression": "divide([Non Promo Price Comp +/- LY], [Non Promo Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Price Comp Gr % vs PP",
            "expression": "divide([Non Promo Price Comp +/- PP], [Non Promo Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price Mkt Gr % vs LY",
            "expression": "divide([Non Promo Price Mkt +/- LY], [Non Promo Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Price Mkt Gr % vs PP",
            "expression": "divide([Non Promo Price Mkt +/- PP], [Non Promo Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price Prod Gr % vs LY",
            "expression": "divide([Non Promo Price Prod +/- LY], [Non Promo Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Price Prod Gr % vs PP",
            "expression": "divide([Non Promo Price Prod +/- PP], [Non Promo Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Unit Gr % vs LY",
            "expression": "divide([Non Promo Unit +/- LY], [Non Promo Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Gr % vs PP",
            "expression": "divide([Non Promo Unit +/- PP], [Non Promo Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Comp Gr % vs LY",
            "expression": "divide([Non Promo Unit Comp +/- LY], [Non Promo Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Comp Gr % vs PP",
            "expression": "divide([Non Promo Unit Comp +/- PP], [Non Promo Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt Gr % vs LY",
            "expression": "divide([Non Promo Unit Mkt +/- LY], [Non Promo Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt Gr % vs PP",
            "expression": "divide([Non Promo Unit Mkt +/- PP], [Non Promo Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit PI Gr % vs LY",
            "expression": "divide([Non Promo Unit PI +/- LY], [Non Promo Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit PI Gr % vs PP",
            "expression": "divide([Non Promo Unit PI +/- PP], [Non Promo Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Prod Gr % vs LY",
            "expression": "divide([Non Promo Unit Prod +/- LY], [Non Promo Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Prod Gr % vs PP",
            "expression": "divide([Non Promo Unit Prod +/- PP], [Non Promo Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Val Gr % vs LY",
            "expression": "divide([Non Promo Val +/- LY], [Non Promo Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Gr % vs PP",
            "expression": "divide([Non Promo Val +/- PP], [Non Promo Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Comp Gr % vs LY",
            "expression": "divide([Non Promo Val Comp +/- LY], [Non Promo Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Comp Gr % vs PP",
            "expression": "divide([Non Promo Val Comp +/- PP], [Non Promo Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Mkt Gr % vs LY",
            "expression": "divide([Non Promo Val Mkt +/- LY], [Non Promo Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Mkt Gr % vs PP",
            "expression": "divide([Non Promo Val Mkt +/- PP], [Non Promo Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val PI Gr % vs LY",
            "expression": "divide([Non Promo Val PI +/- LY], [Non Promo Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val PI Gr % vs PP",
            "expression": "divide([Non Promo Val PI +/- PP], [Non Promo Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Prod Gr % vs LY",
            "expression": "divide([Non Promo Val Prod +/- LY], [Non Promo Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Prod Gr % vs PP",
            "expression": "divide([Non Promo Val Prod +/- PP], [Non Promo Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Online Price Gr % vs LY",
            "expression": "divide([Online Price +/- LY], [Online Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Price Gr % vs PP",
            "expression": "divide([Online Price +/- PP], [Online Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price Comp Gr % vs LY",
            "expression": "divide([Online Price Comp +/- LY], [Online Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Price Comp Gr % vs PP",
            "expression": "divide([Online Price Comp +/- PP], [Online Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price Mkt Gr % vs LY",
            "expression": "divide([Online Price Mkt +/- LY], [Online Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Price Mkt Gr % vs PP",
            "expression": "divide([Online Price Mkt +/- PP], [Online Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price Prod Gr % vs LY",
            "expression": "divide([Online Price Prod +/- LY], [Online Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Price Prod Gr % vs PP",
            "expression": "divide([Online Price Prod +/- PP], [Online Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Unit Gr % vs LY",
            "expression": "divide([Online Unit +/- LY], [Online Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Gr % vs PP",
            "expression": "divide([Online Unit +/- PP], [Online Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Comp Gr % vs LY",
            "expression": "divide([Online Unit Comp +/- LY], [Online Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Comp Gr % vs PP",
            "expression": "divide([Online Unit Comp +/- PP], [Online Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Mkt Gr % vs LY",
            "expression": "divide([Online Unit Mkt +/- LY], [Online Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Mkt Gr % vs PP",
            "expression": "divide([Online Unit Mkt +/- PP], [Online Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit PI Gr % vs LY",
            "expression": "divide([Online Unit PI +/- LY], [Online Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit PI Gr % vs PP",
            "expression": "divide([Online Unit PI +/- PP], [Online Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Prod Gr % vs LY",
            "expression": "divide([Online Unit Prod +/- LY], [Online Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Prod Gr % vs PP",
            "expression": "divide([Online Unit Prod +/- PP], [Online Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Val Gr % vs LY",
            "expression": "divide([Online Val +/- LY], [Online Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Gr % vs PP",
            "expression": "divide([Online Val +/- PP], [Online Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Comp Gr % vs LY",
            "expression": "divide([Online Val Comp +/- LY], [Online Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Comp Gr % vs PP",
            "expression": "divide([Online Val Comp +/- PP], [Online Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Mkt Gr % vs LY",
            "expression": "divide([Online Val Mkt +/- LY], [Online Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Mkt Gr % vs PP",
            "expression": "divide([Online Val Mkt +/- PP], [Online Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val PI Gr % vs LY",
            "expression": "divide([Online Val PI +/- LY], [Online Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val PI Gr % vs PP",
            "expression": "divide([Online Val PI +/- PP], [Online Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Prod Gr % vs LY",
            "expression": "divide([Online Val Prod +/- LY], [Online Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Prod Gr % vs PP",
            "expression": "divide([Online Val Prod +/- PP], [Online Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Pack # Gr % vs LY",
            "expression": "divide([Pack # +/- LY], [Pack # LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Gr % vs PP",
            "expression": "divide([Pack # +/- PP], [Pack # PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Comp Gr % vs LY",
            "expression": "divide([Pack # Comp +/- LY], [Pack # Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Comp Gr % vs PP",
            "expression": "divide([Pack # Comp +/- PP], [Pack # Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Mkt Gr % vs LY",
            "expression": "divide([Pack # Mkt +/- LY], [Pack # Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Mkt Gr % vs PP",
            "expression": "divide([Pack # Mkt +/- PP], [Pack # Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # PI Gr % vs LY",
            "expression": "divide([Pack # PI +/- LY], [Pack # PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # PI Gr % vs PP",
            "expression": "divide([Pack # PI +/- PP], [Pack # PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Prod Gr % vs LY",
            "expression": "divide([Pack # Prod +/- LY], [Pack # Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Prod Gr % vs PP",
            "expression": "divide([Pack # Prod +/- PP], [Pack # Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Price Gr % vs LY",
            "expression": "divide([Price +/- LY], [Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Price Gr % vs PP",
            "expression": "divide([Price +/- PP], [Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price Comp Gr % vs LY",
            "expression": "divide([Price Comp +/- LY], [Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Price Comp Gr % vs PP",
            "expression": "divide([Price Comp +/- PP], [Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price Mkt Gr % vs LY",
            "expression": "divide([Price Mkt +/- LY], [Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Price Mkt Gr % vs PP",
            "expression": "divide([Price Mkt +/- PP], [Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price Prod Gr % vs LY",
            "expression": "divide([Price Prod +/- LY], [Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Price Prod Gr % vs PP",
            "expression": "divide([Price Prod +/- PP], [Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Gr % vs LY",
            "expression": "divide([Promo Price +/- LY], [Promo Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price Gr % vs PP",
            "expression": "divide([Promo Price +/- PP], [Promo Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Comp Gr % vs LY",
            "expression": "divide([Promo Price Comp +/- LY], [Promo Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price Comp Gr % vs PP",
            "expression": "divide([Promo Price Comp +/- PP], [Promo Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Mkt Gr % vs LY",
            "expression": "divide([Promo Price Mkt +/- LY], [Promo Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price Mkt Gr % vs PP",
            "expression": "divide([Promo Price Mkt +/- PP], [Promo Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Prod Gr % vs LY",
            "expression": "divide([Promo Price Prod +/- LY], [Promo Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price Prod Gr % vs PP",
            "expression": "divide([Promo Price Prod +/- PP], [Promo Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Unit Gr % vs LY",
            "expression": "divide([Promo Unit +/- LY], [Promo Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Gr % vs PP",
            "expression": "divide([Promo Unit +/- PP], [Promo Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Comp Gr % vs LY",
            "expression": "divide([Promo Unit Comp +/- LY], [Promo Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Comp Gr % vs PP",
            "expression": "divide([Promo Unit Comp +/- PP], [Promo Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Mkt Gr % vs LY",
            "expression": "divide([Promo Unit Mkt +/- LY], [Promo Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Mkt Gr % vs PP",
            "expression": "divide([Promo Unit Mkt +/- PP], [Promo Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit PI Gr % vs LY",
            "expression": "divide([Promo Unit PI +/- LY], [Promo Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit PI Gr % vs PP",
            "expression": "divide([Promo Unit PI +/- PP], [Promo Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Prod Gr % vs LY",
            "expression": "divide([Promo Unit Prod +/- LY], [Promo Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Prod Gr % vs PP",
            "expression": "divide([Promo Unit Prod +/- PP], [Promo Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Val Gr % vs LY",
            "expression": "divide([Promo Val +/- LY], [Promo Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Gr % vs PP",
            "expression": "divide([Promo Val +/- PP], [Promo Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Comp Gr % vs LY",
            "expression": "divide([Promo Val Comp +/- LY], [Promo Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Comp Gr % vs PP",
            "expression": "divide([Promo Val Comp +/- PP], [Promo Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Mkt Gr % vs LY",
            "expression": "divide([Promo Val Mkt +/- LY], [Promo Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Mkt Gr % vs PP",
            "expression": "divide([Promo Val Mkt +/- PP], [Promo Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val PI Gr % vs LY",
            "expression": "divide([Promo Val PI +/- LY], [Promo Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val PI Gr % vs PP",
            "expression": "divide([Promo Val PI +/- PP], [Promo Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Prod Gr % vs LY",
            "expression": "divide([Promo Val Prod +/- LY], [Promo Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Prod Gr % vs PP",
            "expression": "divide([Promo Val Prod +/- PP], [Promo Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Price Gr % vs LY",
            "expression": "divide([Retail Price +/- LY], [Retail Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Price Gr % vs PP",
            "expression": "divide([Retail Price +/- PP], [Retail Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price Comp Gr % vs LY",
            "expression": "divide([Retail Price Comp +/- LY], [Retail Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Price Comp Gr % vs PP",
            "expression": "divide([Retail Price Comp +/- PP], [Retail Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price Mkt Gr % vs LY",
            "expression": "divide([Retail Price Mkt +/- LY], [Retail Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Price Mkt Gr % vs PP",
            "expression": "divide([Retail Price Mkt +/- PP], [Retail Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price Prod Gr % vs LY",
            "expression": "divide([Retail Price Prod +/- LY], [Retail Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Price Prod Gr % vs PP",
            "expression": "divide([Retail Price Prod +/- PP], [Retail Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Unit Gr % vs LY",
            "expression": "divide([Retail Unit +/- LY], [Retail Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Gr % vs PP",
            "expression": "divide([Retail Unit +/- PP], [Retail Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Comp Gr % vs LY",
            "expression": "divide([Retail Unit Comp +/- LY], [Retail Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Comp Gr % vs PP",
            "expression": "divide([Retail Unit Comp +/- PP], [Retail Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Mkt Gr % vs LY",
            "expression": "divide([Retail Unit Mkt +/- LY], [Retail Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Mkt Gr % vs PP",
            "expression": "divide([Retail Unit Mkt +/- PP], [Retail Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit PI Gr % vs LY",
            "expression": "divide([Retail Unit PI +/- LY], [Retail Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit PI Gr % vs PP",
            "expression": "divide([Retail Unit PI +/- PP], [Retail Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Prod Gr % vs LY",
            "expression": "divide([Retail Unit Prod +/- LY], [Retail Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Prod Gr % vs PP",
            "expression": "divide([Retail Unit Prod +/- PP], [Retail Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Val Gr % vs LY",
            "expression": "divide([Retail Val +/- LY], [Retail Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Gr % vs PP",
            "expression": "divide([Retail Val +/- PP], [Retail Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Comp Gr % vs LY",
            "expression": "divide([Retail Val Comp +/- LY], [Retail Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Comp Gr % vs PP",
            "expression": "divide([Retail Val Comp +/- PP], [Retail Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Mkt Gr % vs LY",
            "expression": "divide([Retail Val Mkt +/- LY], [Retail Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Mkt Gr % vs PP",
            "expression": "divide([Retail Val Mkt +/- PP], [Retail Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val PI Gr % vs LY",
            "expression": "divide([Retail Val PI +/- LY], [Retail Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val PI Gr % vs PP",
            "expression": "divide([Retail Val PI +/- PP], [Retail Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Prod Gr % vs LY",
            "expression": "divide([Retail Val Prod +/- LY], [Retail Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Prod Gr % vs PP",
            "expression": "divide([Retail Val Prod +/- PP], [Retail Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Price Gr % vs LY",
            "expression": "divide([Scanout Price +/- LY], [Scanout Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Price Gr % vs PP",
            "expression": "divide([Scanout Price +/- PP], [Scanout Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price Comp Gr % vs LY",
            "expression": "divide([Scanout Price Comp +/- LY], [Scanout Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Price Comp Gr % vs PP",
            "expression": "divide([Scanout Price Comp +/- PP], [Scanout Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price Mkt Gr % vs LY",
            "expression": "divide([Scanout Price Mkt +/- LY], [Scanout Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Price Mkt Gr % vs PP",
            "expression": "divide([Scanout Price Mkt +/- PP], [Scanout Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price Prod Gr % vs LY",
            "expression": "divide([Scanout Price Prod +/- LY], [Scanout Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Price Prod Gr % vs PP",
            "expression": "divide([Scanout Price Prod +/- PP], [Scanout Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Unit Gr % vs LY",
            "expression": "divide([Scanout Unit +/- LY], [Scanout Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Gr % vs PP",
            "expression": "divide([Scanout Unit +/- PP], [Scanout Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Comp Gr % vs LY",
            "expression": "divide([Scanout Unit Comp +/- LY], [Scanout Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Comp Gr % vs PP",
            "expression": "divide([Scanout Unit Comp +/- PP], [Scanout Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Mkt Gr % vs LY",
            "expression": "divide([Scanout Unit Mkt +/- LY], [Scanout Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Mkt Gr % vs PP",
            "expression": "divide([Scanout Unit Mkt +/- PP], [Scanout Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit PI Gr % vs LY",
            "expression": "divide([Scanout Unit PI +/- LY], [Scanout Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit PI Gr % vs PP",
            "expression": "divide([Scanout Unit PI +/- PP], [Scanout Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Prod Gr % vs LY",
            "expression": "divide([Scanout Unit Prod +/- LY], [Scanout Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Prod Gr % vs PP",
            "expression": "divide([Scanout Unit Prod +/- PP], [Scanout Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Val Gr % vs LY",
            "expression": "divide([Scanout Val +/- LY], [Scanout Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Gr % vs PP",
            "expression": "divide([Scanout Val +/- PP], [Scanout Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Comp Gr % vs LY",
            "expression": "divide([Scanout Val Comp +/- LY], [Scanout Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Comp Gr % vs PP",
            "expression": "divide([Scanout Val Comp +/- PP], [Scanout Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Mkt Gr % vs LY",
            "expression": "divide([Scanout Val Mkt +/- LY], [Scanout Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Mkt Gr % vs PP",
            "expression": "divide([Scanout Val Mkt +/- PP], [Scanout Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val PI Gr % vs LY",
            "expression": "divide([Scanout Val PI +/- LY], [Scanout Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val PI Gr % vs PP",
            "expression": "divide([Scanout Val PI +/- PP], [Scanout Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Prod Gr % vs LY",
            "expression": "divide([Scanout Val Prod +/- LY], [Scanout Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Prod Gr % vs PP",
            "expression": "divide([Scanout Val Prod +/- PP], [Scanout Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Price Gr % vs LY",
            "expression": "divide([Sellin Price +/- LY], [Sellin Price LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Price Gr % vs PP",
            "expression": "divide([Sellin Price +/- PP], [Sellin Price PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price Comp Gr % vs LY",
            "expression": "divide([Sellin Price Comp +/- LY], [Sellin Price Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Price Comp Gr % vs PP",
            "expression": "divide([Sellin Price Comp +/- PP], [Sellin Price Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price Mkt Gr % vs LY",
            "expression": "divide([Sellin Price Mkt +/- LY], [Sellin Price Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Price Mkt Gr % vs PP",
            "expression": "divide([Sellin Price Mkt +/- PP], [Sellin Price Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price Prod Gr % vs LY",
            "expression": "divide([Sellin Price Prod +/- LY], [Sellin Price Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Price Prod Gr % vs PP",
            "expression": "divide([Sellin Price Prod +/- PP], [Sellin Price Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Unit Gr % vs LY",
            "expression": "divide([Sellin Unit +/- LY], [Sellin Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Gr % vs PP",
            "expression": "divide([Sellin Unit +/- PP], [Sellin Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Comp Gr % vs LY",
            "expression": "divide([Sellin Unit Comp +/- LY], [Sellin Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Comp Gr % vs PP",
            "expression": "divide([Sellin Unit Comp +/- PP], [Sellin Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Mkt Gr % vs LY",
            "expression": "divide([Sellin Unit Mkt +/- LY], [Sellin Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Mkt Gr % vs PP",
            "expression": "divide([Sellin Unit Mkt +/- PP], [Sellin Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit PI Gr % vs LY",
            "expression": "divide([Sellin Unit PI +/- LY], [Sellin Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit PI Gr % vs PP",
            "expression": "divide([Sellin Unit PI +/- PP], [Sellin Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Prod Gr % vs LY",
            "expression": "divide([Sellin Unit Prod +/- LY], [Sellin Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Prod Gr % vs PP",
            "expression": "divide([Sellin Unit Prod +/- PP], [Sellin Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Val Gr % vs LY",
            "expression": "divide([Sellin Val +/- LY], [Sellin Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Gr % vs PP",
            "expression": "divide([Sellin Val +/- PP], [Sellin Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Comp Gr % vs LY",
            "expression": "divide([Sellin Val Comp +/- LY], [Sellin Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Comp Gr % vs PP",
            "expression": "divide([Sellin Val Comp +/- PP], [Sellin Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Mkt Gr % vs LY",
            "expression": "divide([Sellin Val Mkt +/- LY], [Sellin Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Mkt Gr % vs PP",
            "expression": "divide([Sellin Val Mkt +/- PP], [Sellin Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val PI Gr % vs LY",
            "expression": "divide([Sellin Val PI +/- LY], [Sellin Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val PI Gr % vs PP",
            "expression": "divide([Sellin Val PI +/- PP], [Sellin Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Prod Gr % vs LY",
            "expression": "divide([Sellin Val Prod +/- LY], [Sellin Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Prod Gr % vs PP",
            "expression": "divide([Sellin Val Prod +/- PP], [Sellin Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Unit Gr % vs LY",
            "expression": "divide([Unit +/- LY], [Unit LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Gr % vs PP",
            "expression": "divide([Unit +/- PP], [Unit PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Comp Gr % vs LY",
            "expression": "divide([Unit Comp +/- LY], [Unit Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Comp Gr % vs PP",
            "expression": "divide([Unit Comp +/- PP], [Unit Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Mkt Gr % vs LY",
            "expression": "divide([Unit Mkt +/- LY], [Unit Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Mkt Gr % vs PP",
            "expression": "divide([Unit Mkt +/- PP], [Unit Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit PI Gr % vs LY",
            "expression": "divide([Unit PI +/- LY], [Unit PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit PI Gr % vs PP",
            "expression": "divide([Unit PI +/- PP], [Unit PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Prod Gr % vs LY",
            "expression": "divide([Unit Prod +/- LY], [Unit Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Prod Gr % vs PP",
            "expression": "divide([Unit Prod +/- PP], [Unit Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Val Gr % vs LY",
            "expression": "divide([Val +/- LY], [Val LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Gr % vs PP",
            "expression": "divide([Val +/- PP], [Val PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Comp Gr % vs LY",
            "expression": "divide([Val Comp +/- LY], [Val Comp LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Comp Gr % vs PP",
            "expression": "divide([Val Comp +/- PP], [Val Comp PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Mkt Gr % vs LY",
            "expression": "divide([Val Mkt +/- LY], [Val Mkt LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Mkt Gr % vs PP",
            "expression": "divide([Val Mkt +/- PP], [Val Mkt PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val PI Gr % vs LY",
            "expression": "divide([Val PI +/- LY], [Val PI LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val PI Gr % vs PP",
            "expression": "divide([Val PI +/- PP], [Val PI PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Prod Gr % vs LY",
            "expression": "divide([Val Prod +/- LY], [Val Prod LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Prod Gr % vs PP",
            "expression": "divide([Val Prod +/- PP], [Val Prod PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Pack # Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Pack # Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Pack # Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Pack # Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Pack # Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Pack # Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Pack # Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Pack # Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Pack # Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Pack # Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Pack # Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Pack # Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Pack # Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Pack # Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Pack # Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Pack # PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Pack # PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Pack # PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Pack # PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Pack # PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Pack # Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Pack # Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Pack # Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Pack # Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Pack # Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Price Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Price Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Price Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Price Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Price Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Price Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Price Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Price Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Price Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Price Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Price Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Price Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Price Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Price Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Price Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Price Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Price Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Price Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Price Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Price Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Val Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Val Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Val Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Val Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Val Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Unit Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Unit Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Unit Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Unit Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Unit Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Unit Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Unit Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Unit Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Unit Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Unit Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Unit Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Unit Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Unit Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Unit Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Unit Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Unit PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Unit PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Unit PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Unit PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Unit PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Unit Prod Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Unit Prod Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Unit Prod Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Unit Prod Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Unit Prod Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Val Comp Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Val Comp Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Val Comp Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Val Comp Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Val Comp Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Val Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Val Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Val Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Val Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Val Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Val Mkt Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Val Mkt Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Val Mkt Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Val Mkt Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Val Mkt Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Val PI Gr % vs LY All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Val PI Gr % vs LY],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Val PI Gr % vs LY],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Val PI Gr % vs LY] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Val PI Gr % vs LY] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Price Comp GI vs LY",
            "expression": "if(not isblank([B&M Price Comp Gr % vs LY All Selected]), divide([B&M Price Comp Gr % vs LY] + 1, [B&M Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Price GI vs LY",
            "expression": "if(not isblank([B&M Price Gr % vs LY All Selected]), divide([B&M Price Gr % vs LY] + 1, [B&M Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Price Mkt GI vs LY",
            "expression": "if(not isblank([B&M Price Mkt Gr % vs LY All Selected]), divide([B&M Price Mkt Gr % vs LY] + 1, [B&M Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Price Prod GI vs LY",
            "expression": "if(not isblank([B&M Price Prod Gr % vs LY All Selected]), divide([B&M Price Prod Gr % vs LY] + 1, [B&M Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "B&M Unit Comp GI vs LY",
            "expression": "if(not isblank([B&M Unit Comp Gr % vs LY All Selected]), divide([B&M Unit Comp Gr % vs LY] + 1, [B&M Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit GI vs LY",
            "expression": "if(not isblank([B&M Unit Gr % vs LY All Selected]), divide([B&M Unit Gr % vs LY] + 1, [B&M Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Mkt GI vs LY",
            "expression": "if(not isblank([B&M Unit Mkt Gr % vs LY All Selected]), divide([B&M Unit Mkt Gr % vs LY] + 1, [B&M Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Unit Prod GI vs LY",
            "expression": "if(not isblank([B&M Unit Prod Gr % vs LY All Selected]), divide([B&M Unit Prod Gr % vs LY] + 1, [B&M Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "B&M Val Comp GI vs LY",
            "expression": "if(not isblank([B&M Val Comp Gr % vs LY All Selected]), divide([B&M Val Comp Gr % vs LY] + 1, [B&M Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val GI vs LY",
            "expression": "if(not isblank([B&M Val Gr % vs LY All Selected]), divide([B&M Val Gr % vs LY] + 1, [B&M Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Mkt GI vs LY",
            "expression": "if(not isblank([B&M Val Mkt Gr % vs LY All Selected]), divide([B&M Val Mkt Gr % vs LY] + 1, [B&M Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Val Prod GI vs LY",
            "expression": "if(not isblank([B&M Val Prod Gr % vs LY All Selected]), divide([B&M Val Prod Gr % vs LY] + 1, [B&M Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Price Comp GI vs LY",
            "expression": "if(not isblank([Baseline Price Comp Gr % vs LY All Selected]), divide([Baseline Price Comp Gr % vs LY] + 1, [Baseline Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Price GI vs LY",
            "expression": "if(not isblank([Baseline Price Gr % vs LY All Selected]), divide([Baseline Price Gr % vs LY] + 1, [Baseline Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Price Mkt GI vs LY",
            "expression": "if(not isblank([Baseline Price Mkt Gr % vs LY All Selected]), divide([Baseline Price Mkt Gr % vs LY] + 1, [Baseline Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Price Prod GI vs LY",
            "expression": "if(not isblank([Baseline Price Prod Gr % vs LY All Selected]), divide([Baseline Price Prod Gr % vs LY] + 1, [Baseline Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Baseline Unit Comp GI vs LY",
            "expression": "if(not isblank([Baseline Unit Comp Gr % vs LY All Selected]), divide([Baseline Unit Comp Gr % vs LY] + 1, [Baseline Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit GI vs LY",
            "expression": "if(not isblank([Baseline Unit Gr % vs LY All Selected]), divide([Baseline Unit Gr % vs LY] + 1, [Baseline Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Mkt GI vs LY",
            "expression": "if(not isblank([Baseline Unit Mkt Gr % vs LY All Selected]), divide([Baseline Unit Mkt Gr % vs LY] + 1, [Baseline Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Unit Prod GI vs LY",
            "expression": "if(not isblank([Baseline Unit Prod Gr % vs LY All Selected]), divide([Baseline Unit Prod Gr % vs LY] + 1, [Baseline Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Baseline Val Comp GI vs LY",
            "expression": "if(not isblank([Baseline Val Comp Gr % vs LY All Selected]), divide([Baseline Val Comp Gr % vs LY] + 1, [Baseline Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val GI vs LY",
            "expression": "if(not isblank([Baseline Val Gr % vs LY All Selected]), divide([Baseline Val Gr % vs LY] + 1, [Baseline Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Mkt GI vs LY",
            "expression": "if(not isblank([Baseline Val Mkt Gr % vs LY All Selected]), divide([Baseline Val Mkt Gr % vs LY] + 1, [Baseline Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Baseline Val Prod GI vs LY",
            "expression": "if(not isblank([Baseline Val Prod Gr % vs LY All Selected]), divide([Baseline Val Prod Gr % vs LY] + 1, [Baseline Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Price Comp GI vs LY",
            "expression": "if(not isblank([Domestic Price Comp Gr % vs LY All Selected]), divide([Domestic Price Comp Gr % vs LY] + 1, [Domestic Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Price GI vs LY",
            "expression": "if(not isblank([Domestic Price Gr % vs LY All Selected]), divide([Domestic Price Gr % vs LY] + 1, [Domestic Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Price Mkt GI vs LY",
            "expression": "if(not isblank([Domestic Price Mkt Gr % vs LY All Selected]), divide([Domestic Price Mkt Gr % vs LY] + 1, [Domestic Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Price Prod GI vs LY",
            "expression": "if(not isblank([Domestic Price Prod Gr % vs LY All Selected]), divide([Domestic Price Prod Gr % vs LY] + 1, [Domestic Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Domestic Unit Comp GI vs LY",
            "expression": "if(not isblank([Domestic Unit Comp Gr % vs LY All Selected]), divide([Domestic Unit Comp Gr % vs LY] + 1, [Domestic Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit GI vs LY",
            "expression": "if(not isblank([Domestic Unit Gr % vs LY All Selected]), divide([Domestic Unit Gr % vs LY] + 1, [Domestic Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Mkt GI vs LY",
            "expression": "if(not isblank([Domestic Unit Mkt Gr % vs LY All Selected]), divide([Domestic Unit Mkt Gr % vs LY] + 1, [Domestic Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Unit Prod GI vs LY",
            "expression": "if(not isblank([Domestic Unit Prod Gr % vs LY All Selected]), divide([Domestic Unit Prod Gr % vs LY] + 1, [Domestic Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Domestic Val Comp GI vs LY",
            "expression": "if(not isblank([Domestic Val Comp Gr % vs LY All Selected]), divide([Domestic Val Comp Gr % vs LY] + 1, [Domestic Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val GI vs LY",
            "expression": "if(not isblank([Domestic Val Gr % vs LY All Selected]), divide([Domestic Val Gr % vs LY] + 1, [Domestic Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Mkt GI vs LY",
            "expression": "if(not isblank([Domestic Val Mkt Gr % vs LY All Selected]), divide([Domestic Val Mkt Gr % vs LY] + 1, [Domestic Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Domestic Val Prod GI vs LY",
            "expression": "if(not isblank([Domestic Val Prod Gr % vs LY All Selected]), divide([Domestic Val Prod Gr % vs LY] + 1, [Domestic Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Price Comp GI vs LY",
            "expression": "if(not isblank([Export Price Comp Gr % vs LY All Selected]), divide([Export Price Comp Gr % vs LY] + 1, [Export Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Price GI vs LY",
            "expression": "if(not isblank([Export Price Gr % vs LY All Selected]), divide([Export Price Gr % vs LY] + 1, [Export Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Price Mkt GI vs LY",
            "expression": "if(not isblank([Export Price Mkt Gr % vs LY All Selected]), divide([Export Price Mkt Gr % vs LY] + 1, [Export Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Price Prod GI vs LY",
            "expression": "if(not isblank([Export Price Prod Gr % vs LY All Selected]), divide([Export Price Prod Gr % vs LY] + 1, [Export Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Price)"
          },
          {
            "name": "Export Unit Comp GI vs LY",
            "expression": "if(not isblank([Export Unit Comp Gr % vs LY All Selected]), divide([Export Unit Comp Gr % vs LY] + 1, [Export Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit GI vs LY",
            "expression": "if(not isblank([Export Unit Gr % vs LY All Selected]), divide([Export Unit Gr % vs LY] + 1, [Export Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Mkt GI vs LY",
            "expression": "if(not isblank([Export Unit Mkt Gr % vs LY All Selected]), divide([Export Unit Mkt Gr % vs LY] + 1, [Export Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Unit Prod GI vs LY",
            "expression": "if(not isblank([Export Unit Prod Gr % vs LY All Selected]), divide([Export Unit Prod Gr % vs LY] + 1, [Export Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Unit)"
          },
          {
            "name": "Export Val Comp GI vs LY",
            "expression": "if(not isblank([Export Val Comp Gr % vs LY All Selected]), divide([Export Val Comp Gr % vs LY] + 1, [Export Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val GI vs LY",
            "expression": "if(not isblank([Export Val Gr % vs LY All Selected]), divide([Export Val Gr % vs LY] + 1, [Export Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Mkt GI vs LY",
            "expression": "if(not isblank([Export Val Mkt Gr % vs LY All Selected]), divide([Export Val Mkt Gr % vs LY] + 1, [Export Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Export Val Prod GI vs LY",
            "expression": "if(not isblank([Export Val Prod Gr % vs LY All Selected]), divide([Export Val Prod Gr % vs LY] + 1, [Export Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Price Comp GI vs LY",
            "expression": "if(not isblank([Grocery Price Comp Gr % vs LY All Selected]), divide([Grocery Price Comp Gr % vs LY] + 1, [Grocery Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Price GI vs LY",
            "expression": "if(not isblank([Grocery Price Gr % vs LY All Selected]), divide([Grocery Price Gr % vs LY] + 1, [Grocery Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Price Mkt GI vs LY",
            "expression": "if(not isblank([Grocery Price Mkt Gr % vs LY All Selected]), divide([Grocery Price Mkt Gr % vs LY] + 1, [Grocery Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Price Prod GI vs LY",
            "expression": "if(not isblank([Grocery Price Prod Gr % vs LY All Selected]), divide([Grocery Price Prod Gr % vs LY] + 1, [Grocery Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Grocery Unit Comp GI vs LY",
            "expression": "if(not isblank([Grocery Unit Comp Gr % vs LY All Selected]), divide([Grocery Unit Comp Gr % vs LY] + 1, [Grocery Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit GI vs LY",
            "expression": "if(not isblank([Grocery Unit Gr % vs LY All Selected]), divide([Grocery Unit Gr % vs LY] + 1, [Grocery Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Mkt GI vs LY",
            "expression": "if(not isblank([Grocery Unit Mkt Gr % vs LY All Selected]), divide([Grocery Unit Mkt Gr % vs LY] + 1, [Grocery Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Unit Prod GI vs LY",
            "expression": "if(not isblank([Grocery Unit Prod Gr % vs LY All Selected]), divide([Grocery Unit Prod Gr % vs LY] + 1, [Grocery Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Grocery Val Comp GI vs LY",
            "expression": "if(not isblank([Grocery Val Comp Gr % vs LY All Selected]), divide([Grocery Val Comp Gr % vs LY] + 1, [Grocery Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val GI vs LY",
            "expression": "if(not isblank([Grocery Val Gr % vs LY All Selected]), divide([Grocery Val Gr % vs LY] + 1, [Grocery Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Mkt GI vs LY",
            "expression": "if(not isblank([Grocery Val Mkt Gr % vs LY All Selected]), divide([Grocery Val Mkt Gr % vs LY] + 1, [Grocery Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Grocery Val Prod GI vs LY",
            "expression": "if(not isblank([Grocery Val Prod Gr % vs LY All Selected]), divide([Grocery Val Prod Gr % vs LY] + 1, [Grocery Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Price Comp GI vs LY",
            "expression": "if(not isblank([Incremental Price Comp Gr % vs LY All Selected]), divide([Incremental Price Comp Gr % vs LY] + 1, [Incremental Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Price GI vs LY",
            "expression": "if(not isblank([Incremental Price Gr % vs LY All Selected]), divide([Incremental Price Gr % vs LY] + 1, [Incremental Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Price Mkt GI vs LY",
            "expression": "if(not isblank([Incremental Price Mkt Gr % vs LY All Selected]), divide([Incremental Price Mkt Gr % vs LY] + 1, [Incremental Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Price Prod GI vs LY",
            "expression": "if(not isblank([Incremental Price Prod Gr % vs LY All Selected]), divide([Incremental Price Prod Gr % vs LY] + 1, [Incremental Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Incremental Unit Comp GI vs LY",
            "expression": "if(not isblank([Incremental Unit Comp Gr % vs LY All Selected]), divide([Incremental Unit Comp Gr % vs LY] + 1, [Incremental Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit GI vs LY",
            "expression": "if(not isblank([Incremental Unit Gr % vs LY All Selected]), divide([Incremental Unit Gr % vs LY] + 1, [Incremental Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Mkt GI vs LY",
            "expression": "if(not isblank([Incremental Unit Mkt Gr % vs LY All Selected]), divide([Incremental Unit Mkt Gr % vs LY] + 1, [Incremental Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Unit Prod GI vs LY",
            "expression": "if(not isblank([Incremental Unit Prod Gr % vs LY All Selected]), divide([Incremental Unit Prod Gr % vs LY] + 1, [Incremental Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Incremental Val Comp GI vs LY",
            "expression": "if(not isblank([Incremental Val Comp Gr % vs LY All Selected]), divide([Incremental Val Comp Gr % vs LY] + 1, [Incremental Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val GI vs LY",
            "expression": "if(not isblank([Incremental Val Gr % vs LY All Selected]), divide([Incremental Val Gr % vs LY] + 1, [Incremental Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Mkt GI vs LY",
            "expression": "if(not isblank([Incremental Val Mkt Gr % vs LY All Selected]), divide([Incremental Val Mkt Gr % vs LY] + 1, [Incremental Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Incremental Val Prod GI vs LY",
            "expression": "if(not isblank([Incremental Val Prod Gr % vs LY All Selected]), divide([Incremental Val Prod Gr % vs LY] + 1, [Incremental Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Price Comp GI vs LY",
            "expression": "if(not isblank([Lost Price Comp Gr % vs LY All Selected]), divide([Lost Price Comp Gr % vs LY] + 1, [Lost Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Price GI vs LY",
            "expression": "if(not isblank([Lost Price Gr % vs LY All Selected]), divide([Lost Price Gr % vs LY] + 1, [Lost Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Price Mkt GI vs LY",
            "expression": "if(not isblank([Lost Price Mkt Gr % vs LY All Selected]), divide([Lost Price Mkt Gr % vs LY] + 1, [Lost Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Price Prod GI vs LY",
            "expression": "if(not isblank([Lost Price Prod Gr % vs LY All Selected]), divide([Lost Price Prod Gr % vs LY] + 1, [Lost Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Price)"
          },
          {
            "name": "Lost Unit Comp GI vs LY",
            "expression": "if(not isblank([Lost Unit Comp Gr % vs LY All Selected]), divide([Lost Unit Comp Gr % vs LY] + 1, [Lost Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit GI vs LY",
            "expression": "if(not isblank([Lost Unit Gr % vs LY All Selected]), divide([Lost Unit Gr % vs LY] + 1, [Lost Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Mkt GI vs LY",
            "expression": "if(not isblank([Lost Unit Mkt Gr % vs LY All Selected]), divide([Lost Unit Mkt Gr % vs LY] + 1, [Lost Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Unit Prod GI vs LY",
            "expression": "if(not isblank([Lost Unit Prod Gr % vs LY All Selected]), divide([Lost Unit Prod Gr % vs LY] + 1, [Lost Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Unit)"
          },
          {
            "name": "Lost Val Comp GI vs LY",
            "expression": "if(not isblank([Lost Val Comp Gr % vs LY All Selected]), divide([Lost Val Comp Gr % vs LY] + 1, [Lost Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val GI vs LY",
            "expression": "if(not isblank([Lost Val Gr % vs LY All Selected]), divide([Lost Val Gr % vs LY] + 1, [Lost Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Mkt GI vs LY",
            "expression": "if(not isblank([Lost Val Mkt Gr % vs LY All Selected]), divide([Lost Val Mkt Gr % vs LY] + 1, [Lost Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Lost Val Prod GI vs LY",
            "expression": "if(not isblank([Lost Val Prod Gr % vs LY All Selected]), divide([Lost Val Prod Gr % vs LY] + 1, [Lost Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Price Comp GI vs LY",
            "expression": "if(not isblank([Non Promo Price Comp Gr % vs LY All Selected]), divide([Non Promo Price Comp Gr % vs LY] + 1, [Non Promo Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Price GI vs LY",
            "expression": "if(not isblank([Non Promo Price Gr % vs LY All Selected]), divide([Non Promo Price Gr % vs LY] + 1, [Non Promo Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Price Mkt GI vs LY",
            "expression": "if(not isblank([Non Promo Price Mkt Gr % vs LY All Selected]), divide([Non Promo Price Mkt Gr % vs LY] + 1, [Non Promo Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Price Prod GI vs LY",
            "expression": "if(not isblank([Non Promo Price Prod Gr % vs LY All Selected]), divide([Non Promo Price Prod Gr % vs LY] + 1, [Non Promo Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Non Promo Unit Comp GI vs LY",
            "expression": "if(not isblank([Non Promo Unit Comp Gr % vs LY All Selected]), divide([Non Promo Unit Comp Gr % vs LY] + 1, [Non Promo Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit GI vs LY",
            "expression": "if(not isblank([Non Promo Unit Gr % vs LY All Selected]), divide([Non Promo Unit Gr % vs LY] + 1, [Non Promo Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt GI vs LY",
            "expression": "if(not isblank([Non Promo Unit Mkt Gr % vs LY All Selected]), divide([Non Promo Unit Mkt Gr % vs LY] + 1, [Non Promo Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Unit Prod GI vs LY",
            "expression": "if(not isblank([Non Promo Unit Prod Gr % vs LY All Selected]), divide([Non Promo Unit Prod Gr % vs LY] + 1, [Non Promo Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Non Promo Val Comp GI vs LY",
            "expression": "if(not isblank([Non Promo Val Comp Gr % vs LY All Selected]), divide([Non Promo Val Comp Gr % vs LY] + 1, [Non Promo Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val GI vs LY",
            "expression": "if(not isblank([Non Promo Val Gr % vs LY All Selected]), divide([Non Promo Val Gr % vs LY] + 1, [Non Promo Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Mkt GI vs LY",
            "expression": "if(not isblank([Non Promo Val Mkt Gr % vs LY All Selected]), divide([Non Promo Val Mkt Gr % vs LY] + 1, [Non Promo Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Non Promo Val Prod GI vs LY",
            "expression": "if(not isblank([Non Promo Val Prod Gr % vs LY All Selected]), divide([Non Promo Val Prod Gr % vs LY] + 1, [Non Promo Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Online Price Comp GI vs LY",
            "expression": "if(not isblank([Online Price Comp Gr % vs LY All Selected]), divide([Online Price Comp Gr % vs LY] + 1, [Online Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Price GI vs LY",
            "expression": "if(not isblank([Online Price Gr % vs LY All Selected]), divide([Online Price Gr % vs LY] + 1, [Online Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Price Mkt GI vs LY",
            "expression": "if(not isblank([Online Price Mkt Gr % vs LY All Selected]), divide([Online Price Mkt Gr % vs LY] + 1, [Online Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Price Prod GI vs LY",
            "expression": "if(not isblank([Online Price Prod Gr % vs LY All Selected]), divide([Online Price Prod Gr % vs LY] + 1, [Online Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Price)"
          },
          {
            "name": "Online Unit Comp GI vs LY",
            "expression": "if(not isblank([Online Unit Comp Gr % vs LY All Selected]), divide([Online Unit Comp Gr % vs LY] + 1, [Online Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit GI vs LY",
            "expression": "if(not isblank([Online Unit Gr % vs LY All Selected]), divide([Online Unit Gr % vs LY] + 1, [Online Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Mkt GI vs LY",
            "expression": "if(not isblank([Online Unit Mkt Gr % vs LY All Selected]), divide([Online Unit Mkt Gr % vs LY] + 1, [Online Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Unit Prod GI vs LY",
            "expression": "if(not isblank([Online Unit Prod Gr % vs LY All Selected]), divide([Online Unit Prod Gr % vs LY] + 1, [Online Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Unit)"
          },
          {
            "name": "Online Val Comp GI vs LY",
            "expression": "if(not isblank([Online Val Comp Gr % vs LY All Selected]), divide([Online Val Comp Gr % vs LY] + 1, [Online Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val GI vs LY",
            "expression": "if(not isblank([Online Val Gr % vs LY All Selected]), divide([Online Val Gr % vs LY] + 1, [Online Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Mkt GI vs LY",
            "expression": "if(not isblank([Online Val Mkt Gr % vs LY All Selected]), divide([Online Val Mkt Gr % vs LY] + 1, [Online Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Online Val Prod GI vs LY",
            "expression": "if(not isblank([Online Val Prod Gr % vs LY All Selected]), divide([Online Val Prod Gr % vs LY] + 1, [Online Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\LY or YoY (Amount)"
          },
          {
            "name": "Pack # Comp GI vs LY",
            "expression": "if(not isblank([Pack # Comp Gr % vs LY All Selected]), divide([Pack # Comp Gr % vs LY] + 1, [Pack # Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # GI vs LY",
            "expression": "if(not isblank([Pack # Gr % vs LY All Selected]), divide([Pack # Gr % vs LY] + 1, [Pack # Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Mkt GI vs LY",
            "expression": "if(not isblank([Pack # Mkt Gr % vs LY All Selected]), divide([Pack # Mkt Gr % vs LY] + 1, [Pack # Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Pack # Prod GI vs LY",
            "expression": "if(not isblank([Pack # Prod Gr % vs LY All Selected]), divide([Pack # Prod Gr % vs LY] + 1, [Pack # Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\LY or YoY"
          },
          {
            "name": "Price Comp GI vs LY",
            "expression": "if(not isblank([Price Comp Gr % vs LY All Selected]), divide([Price Comp Gr % vs LY] + 1, [Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Price GI vs LY",
            "expression": "if(not isblank([Price Gr % vs LY All Selected]), divide([Price Gr % vs LY] + 1, [Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Price Mkt GI vs LY",
            "expression": "if(not isblank([Price Mkt Gr % vs LY All Selected]), divide([Price Mkt Gr % vs LY] + 1, [Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Price Prod GI vs LY",
            "expression": "if(not isblank([Price Prod Gr % vs LY All Selected]), divide([Price Prod Gr % vs LY] + 1, [Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price Comp GI vs LY",
            "expression": "if(not isblank([Promo Price Comp Gr % vs LY All Selected]), divide([Promo Price Comp Gr % vs LY] + 1, [Promo Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price GI vs LY",
            "expression": "if(not isblank([Promo Price Gr % vs LY All Selected]), divide([Promo Price Gr % vs LY] + 1, [Promo Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price Mkt GI vs LY",
            "expression": "if(not isblank([Promo Price Mkt Gr % vs LY All Selected]), divide([Promo Price Mkt Gr % vs LY] + 1, [Promo Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Price Prod GI vs LY",
            "expression": "if(not isblank([Promo Price Prod Gr % vs LY All Selected]), divide([Promo Price Prod Gr % vs LY] + 1, [Promo Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Price)"
          },
          {
            "name": "Promo Unit Comp GI vs LY",
            "expression": "if(not isblank([Promo Unit Comp Gr % vs LY All Selected]), divide([Promo Unit Comp Gr % vs LY] + 1, [Promo Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit GI vs LY",
            "expression": "if(not isblank([Promo Unit Gr % vs LY All Selected]), divide([Promo Unit Gr % vs LY] + 1, [Promo Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Mkt GI vs LY",
            "expression": "if(not isblank([Promo Unit Mkt Gr % vs LY All Selected]), divide([Promo Unit Mkt Gr % vs LY] + 1, [Promo Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Unit Prod GI vs LY",
            "expression": "if(not isblank([Promo Unit Prod Gr % vs LY All Selected]), divide([Promo Unit Prod Gr % vs LY] + 1, [Promo Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Unit)"
          },
          {
            "name": "Promo Val Comp GI vs LY",
            "expression": "if(not isblank([Promo Val Comp Gr % vs LY All Selected]), divide([Promo Val Comp Gr % vs LY] + 1, [Promo Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val GI vs LY",
            "expression": "if(not isblank([Promo Val Gr % vs LY All Selected]), divide([Promo Val Gr % vs LY] + 1, [Promo Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Mkt GI vs LY",
            "expression": "if(not isblank([Promo Val Mkt Gr % vs LY All Selected]), divide([Promo Val Mkt Gr % vs LY] + 1, [Promo Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Promo Val Prod GI vs LY",
            "expression": "if(not isblank([Promo Val Prod Gr % vs LY All Selected]), divide([Promo Val Prod Gr % vs LY] + 1, [Promo Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Price Comp GI vs LY",
            "expression": "if(not isblank([Retail Price Comp Gr % vs LY All Selected]), divide([Retail Price Comp Gr % vs LY] + 1, [Retail Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Price GI vs LY",
            "expression": "if(not isblank([Retail Price Gr % vs LY All Selected]), divide([Retail Price Gr % vs LY] + 1, [Retail Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Price Mkt GI vs LY",
            "expression": "if(not isblank([Retail Price Mkt Gr % vs LY All Selected]), divide([Retail Price Mkt Gr % vs LY] + 1, [Retail Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Price Prod GI vs LY",
            "expression": "if(not isblank([Retail Price Prod Gr % vs LY All Selected]), divide([Retail Price Prod Gr % vs LY] + 1, [Retail Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Price)"
          },
          {
            "name": "Retail Unit Comp GI vs LY",
            "expression": "if(not isblank([Retail Unit Comp Gr % vs LY All Selected]), divide([Retail Unit Comp Gr % vs LY] + 1, [Retail Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit GI vs LY",
            "expression": "if(not isblank([Retail Unit Gr % vs LY All Selected]), divide([Retail Unit Gr % vs LY] + 1, [Retail Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Mkt GI vs LY",
            "expression": "if(not isblank([Retail Unit Mkt Gr % vs LY All Selected]), divide([Retail Unit Mkt Gr % vs LY] + 1, [Retail Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Unit Prod GI vs LY",
            "expression": "if(not isblank([Retail Unit Prod Gr % vs LY All Selected]), divide([Retail Unit Prod Gr % vs LY] + 1, [Retail Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Unit)"
          },
          {
            "name": "Retail Val Comp GI vs LY",
            "expression": "if(not isblank([Retail Val Comp Gr % vs LY All Selected]), divide([Retail Val Comp Gr % vs LY] + 1, [Retail Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val GI vs LY",
            "expression": "if(not isblank([Retail Val Gr % vs LY All Selected]), divide([Retail Val Gr % vs LY] + 1, [Retail Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Mkt GI vs LY",
            "expression": "if(not isblank([Retail Val Mkt Gr % vs LY All Selected]), divide([Retail Val Mkt Gr % vs LY] + 1, [Retail Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Retail Val Prod GI vs LY",
            "expression": "if(not isblank([Retail Val Prod Gr % vs LY All Selected]), divide([Retail Val Prod Gr % vs LY] + 1, [Retail Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Price Comp GI vs LY",
            "expression": "if(not isblank([Scanout Price Comp Gr % vs LY All Selected]), divide([Scanout Price Comp Gr % vs LY] + 1, [Scanout Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Price GI vs LY",
            "expression": "if(not isblank([Scanout Price Gr % vs LY All Selected]), divide([Scanout Price Gr % vs LY] + 1, [Scanout Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Price Mkt GI vs LY",
            "expression": "if(not isblank([Scanout Price Mkt Gr % vs LY All Selected]), divide([Scanout Price Mkt Gr % vs LY] + 1, [Scanout Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Price Prod GI vs LY",
            "expression": "if(not isblank([Scanout Price Prod Gr % vs LY All Selected]), divide([Scanout Price Prod Gr % vs LY] + 1, [Scanout Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Scanout Unit Comp GI vs LY",
            "expression": "if(not isblank([Scanout Unit Comp Gr % vs LY All Selected]), divide([Scanout Unit Comp Gr % vs LY] + 1, [Scanout Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit GI vs LY",
            "expression": "if(not isblank([Scanout Unit Gr % vs LY All Selected]), divide([Scanout Unit Gr % vs LY] + 1, [Scanout Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Mkt GI vs LY",
            "expression": "if(not isblank([Scanout Unit Mkt Gr % vs LY All Selected]), divide([Scanout Unit Mkt Gr % vs LY] + 1, [Scanout Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Unit Prod GI vs LY",
            "expression": "if(not isblank([Scanout Unit Prod Gr % vs LY All Selected]), divide([Scanout Unit Prod Gr % vs LY] + 1, [Scanout Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Scanout Val Comp GI vs LY",
            "expression": "if(not isblank([Scanout Val Comp Gr % vs LY All Selected]), divide([Scanout Val Comp Gr % vs LY] + 1, [Scanout Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val GI vs LY",
            "expression": "if(not isblank([Scanout Val Gr % vs LY All Selected]), divide([Scanout Val Gr % vs LY] + 1, [Scanout Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Mkt GI vs LY",
            "expression": "if(not isblank([Scanout Val Mkt Gr % vs LY All Selected]), divide([Scanout Val Mkt Gr % vs LY] + 1, [Scanout Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Scanout Val Prod GI vs LY",
            "expression": "if(not isblank([Scanout Val Prod Gr % vs LY All Selected]), divide([Scanout Val Prod Gr % vs LY] + 1, [Scanout Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Price Comp GI vs LY",
            "expression": "if(not isblank([Sellin Price Comp Gr % vs LY All Selected]), divide([Sellin Price Comp Gr % vs LY] + 1, [Sellin Price Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Price GI vs LY",
            "expression": "if(not isblank([Sellin Price Gr % vs LY All Selected]), divide([Sellin Price Gr % vs LY] + 1, [Sellin Price Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Price Mkt GI vs LY",
            "expression": "if(not isblank([Sellin Price Mkt Gr % vs LY All Selected]), divide([Sellin Price Mkt Gr % vs LY] + 1, [Sellin Price Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Price Prod GI vs LY",
            "expression": "if(not isblank([Sellin Price Prod Gr % vs LY All Selected]), divide([Sellin Price Prod Gr % vs LY] + 1, [Sellin Price Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Price)"
          },
          {
            "name": "Sellin Unit Comp GI vs LY",
            "expression": "if(not isblank([Sellin Unit Comp Gr % vs LY All Selected]), divide([Sellin Unit Comp Gr % vs LY] + 1, [Sellin Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit GI vs LY",
            "expression": "if(not isblank([Sellin Unit Gr % vs LY All Selected]), divide([Sellin Unit Gr % vs LY] + 1, [Sellin Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Mkt GI vs LY",
            "expression": "if(not isblank([Sellin Unit Mkt Gr % vs LY All Selected]), divide([Sellin Unit Mkt Gr % vs LY] + 1, [Sellin Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Unit Prod GI vs LY",
            "expression": "if(not isblank([Sellin Unit Prod Gr % vs LY All Selected]), divide([Sellin Unit Prod Gr % vs LY] + 1, [Sellin Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Unit)"
          },
          {
            "name": "Sellin Val Comp GI vs LY",
            "expression": "if(not isblank([Sellin Val Comp Gr % vs LY All Selected]), divide([Sellin Val Comp Gr % vs LY] + 1, [Sellin Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val GI vs LY",
            "expression": "if(not isblank([Sellin Val Gr % vs LY All Selected]), divide([Sellin Val Gr % vs LY] + 1, [Sellin Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Mkt GI vs LY",
            "expression": "if(not isblank([Sellin Val Mkt Gr % vs LY All Selected]), divide([Sellin Val Mkt Gr % vs LY] + 1, [Sellin Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Sellin Val Prod GI vs LY",
            "expression": "if(not isblank([Sellin Val Prod Gr % vs LY All Selected]), divide([Sellin Val Prod Gr % vs LY] + 1, [Sellin Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\LY or YoY (Amount)"
          },
          {
            "name": "Unit Comp GI vs LY",
            "expression": "if(not isblank([Unit Comp Gr % vs LY All Selected]), divide([Unit Comp Gr % vs LY] + 1, [Unit Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit GI vs LY",
            "expression": "if(not isblank([Unit Gr % vs LY All Selected]), divide([Unit Gr % vs LY] + 1, [Unit Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Mkt GI vs LY",
            "expression": "if(not isblank([Unit Mkt Gr % vs LY All Selected]), divide([Unit Mkt Gr % vs LY] + 1, [Unit Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Prod GI vs LY",
            "expression": "if(not isblank([Unit Prod Gr % vs LY All Selected]), divide([Unit Prod Gr % vs LY] + 1, [Unit Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Val Comp GI vs LY",
            "expression": "if(not isblank([Val Comp Gr % vs LY All Selected]), divide([Val Comp Gr % vs LY] + 1, [Val Comp Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val GI vs LY",
            "expression": "if(not isblank([Val Gr % vs LY All Selected]), divide([Val Gr % vs LY] + 1, [Val Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Mkt GI vs LY",
            "expression": "if(not isblank([Val Mkt Gr % vs LY All Selected]), divide([Val Mkt Gr % vs LY] + 1, [Val Mkt Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Prod GI vs LY",
            "expression": "if(not isblank([Val Prod Gr % vs LY All Selected]), divide([Val Prod Gr % vs LY] + 1, [Val Prod Gr % vs LY All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "B&M Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [B&M Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [B&M Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [B&M Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [B&M Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Baseline Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Baseline Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Baseline Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Baseline Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Baseline Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Domestic Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Domestic Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Domestic Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Domestic Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Domestic Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Export Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Export Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Export Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Export Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Export Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Grocery Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Grocery Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Grocery Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Grocery Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Grocery Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Incremental Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Incremental Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Incremental Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Incremental Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Incremental Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Lost Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Lost Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Lost Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Lost Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Lost Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Non Promo Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Non Promo Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Non Promo Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Non Promo Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Online Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Online Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Online Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Online Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Online Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Pack # Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Pack # Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Pack # Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Pack # Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Pack # Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Pack # Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Pack # Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Pack # Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Pack # Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Pack # Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Pack # Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Pack # Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Pack # Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Pack # Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Pack # Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Pack # PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Pack # PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Pack # PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Pack # PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Pack # PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Pack # Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Pack # Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Pack # Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Pack # Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Pack # Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Promo Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Promo Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Promo Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Promo Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Promo Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Retail Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Retail Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Retail Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Retail Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Retail Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Scanout Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Scanout Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Scanout Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Scanout Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Scanout Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Price Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Price Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Price Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Price Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Price Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Price Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Price Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Price Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Price Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Price Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Price Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Price Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Price Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Price Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Price Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Price Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Price Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Price Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Price Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Price Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Sellin Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Sellin Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Sellin Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Sellin Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Sellin Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Unit Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Unit Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Unit Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Unit Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Unit Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Unit Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Unit Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Unit Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Unit Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Unit Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Unit Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Unit Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Unit Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Unit Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Unit Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Unit PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Unit PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Unit PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Unit PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Unit PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Unit Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Unit Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Unit Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Unit Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Unit Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Val Comp Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Val Comp Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Val Comp Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Val Comp Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Val Comp Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Val Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Val Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Val Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Val Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Val Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Val Mkt Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Val Mkt Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Val Mkt Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Val Mkt Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Val Mkt Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Val PI Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Val PI Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Val PI Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Val PI Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Val PI Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "Val Prod Gr % vs PP All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [Val Prod Gr % vs PP],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [Val Prod Gr % vs PP],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [Val Prod Gr % vs PP] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [Val Prod Gr % vs PP] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "B&M Price Comp GI vs PP",
            "expression": "if(not isblank([B&M Price Comp Gr % vs PP All Selected]), divide([B&M Price Comp Gr % vs PP] + 1, [B&M Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price GI vs PP",
            "expression": "if(not isblank([B&M Price Gr % vs PP All Selected]), divide([B&M Price Gr % vs PP] + 1, [B&M Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price Mkt GI vs PP",
            "expression": "if(not isblank([B&M Price Mkt Gr % vs PP All Selected]), divide([B&M Price Mkt Gr % vs PP] + 1, [B&M Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Price Prod GI vs PP",
            "expression": "if(not isblank([B&M Price Prod Gr % vs PP All Selected]), divide([B&M Price Prod Gr % vs PP] + 1, [B&M Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "B&M Unit Comp GI vs PP",
            "expression": "if(not isblank([B&M Unit Comp Gr % vs PP All Selected]), divide([B&M Unit Comp Gr % vs PP] + 1, [B&M Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit GI vs PP",
            "expression": "if(not isblank([B&M Unit Gr % vs PP All Selected]), divide([B&M Unit Gr % vs PP] + 1, [B&M Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Mkt GI vs PP",
            "expression": "if(not isblank([B&M Unit Mkt Gr % vs PP All Selected]), divide([B&M Unit Mkt Gr % vs PP] + 1, [B&M Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Unit Prod GI vs PP",
            "expression": "if(not isblank([B&M Unit Prod Gr % vs PP All Selected]), divide([B&M Unit Prod Gr % vs PP] + 1, [B&M Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "B&M Val Comp GI vs PP",
            "expression": "if(not isblank([B&M Val Comp Gr % vs PP All Selected]), divide([B&M Val Comp Gr % vs PP] + 1, [B&M Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val GI vs PP",
            "expression": "if(not isblank([B&M Val Gr % vs PP All Selected]), divide([B&M Val Gr % vs PP] + 1, [B&M Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Mkt GI vs PP",
            "expression": "if(not isblank([B&M Val Mkt Gr % vs PP All Selected]), divide([B&M Val Mkt Gr % vs PP] + 1, [B&M Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "B&M Val Prod GI vs PP",
            "expression": "if(not isblank([B&M Val Prod Gr % vs PP All Selected]), divide([B&M Val Prod Gr % vs PP] + 1, [B&M Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Price Comp GI vs PP",
            "expression": "if(not isblank([Baseline Price Comp Gr % vs PP All Selected]), divide([Baseline Price Comp Gr % vs PP] + 1, [Baseline Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price GI vs PP",
            "expression": "if(not isblank([Baseline Price Gr % vs PP All Selected]), divide([Baseline Price Gr % vs PP] + 1, [Baseline Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price Mkt GI vs PP",
            "expression": "if(not isblank([Baseline Price Mkt Gr % vs PP All Selected]), divide([Baseline Price Mkt Gr % vs PP] + 1, [Baseline Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Price Prod GI vs PP",
            "expression": "if(not isblank([Baseline Price Prod Gr % vs PP All Selected]), divide([Baseline Price Prod Gr % vs PP] + 1, [Baseline Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Baseline Unit Comp GI vs PP",
            "expression": "if(not isblank([Baseline Unit Comp Gr % vs PP All Selected]), divide([Baseline Unit Comp Gr % vs PP] + 1, [Baseline Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit GI vs PP",
            "expression": "if(not isblank([Baseline Unit Gr % vs PP All Selected]), divide([Baseline Unit Gr % vs PP] + 1, [Baseline Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Mkt GI vs PP",
            "expression": "if(not isblank([Baseline Unit Mkt Gr % vs PP All Selected]), divide([Baseline Unit Mkt Gr % vs PP] + 1, [Baseline Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Unit Prod GI vs PP",
            "expression": "if(not isblank([Baseline Unit Prod Gr % vs PP All Selected]), divide([Baseline Unit Prod Gr % vs PP] + 1, [Baseline Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Baseline Val Comp GI vs PP",
            "expression": "if(not isblank([Baseline Val Comp Gr % vs PP All Selected]), divide([Baseline Val Comp Gr % vs PP] + 1, [Baseline Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val GI vs PP",
            "expression": "if(not isblank([Baseline Val Gr % vs PP All Selected]), divide([Baseline Val Gr % vs PP] + 1, [Baseline Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Mkt GI vs PP",
            "expression": "if(not isblank([Baseline Val Mkt Gr % vs PP All Selected]), divide([Baseline Val Mkt Gr % vs PP] + 1, [Baseline Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Baseline Val Prod GI vs PP",
            "expression": "if(not isblank([Baseline Val Prod Gr % vs PP All Selected]), divide([Baseline Val Prod Gr % vs PP] + 1, [Baseline Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Price Comp GI vs PP",
            "expression": "if(not isblank([Domestic Price Comp Gr % vs PP All Selected]), divide([Domestic Price Comp Gr % vs PP] + 1, [Domestic Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price GI vs PP",
            "expression": "if(not isblank([Domestic Price Gr % vs PP All Selected]), divide([Domestic Price Gr % vs PP] + 1, [Domestic Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price Mkt GI vs PP",
            "expression": "if(not isblank([Domestic Price Mkt Gr % vs PP All Selected]), divide([Domestic Price Mkt Gr % vs PP] + 1, [Domestic Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Price Prod GI vs PP",
            "expression": "if(not isblank([Domestic Price Prod Gr % vs PP All Selected]), divide([Domestic Price Prod Gr % vs PP] + 1, [Domestic Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Domestic Unit Comp GI vs PP",
            "expression": "if(not isblank([Domestic Unit Comp Gr % vs PP All Selected]), divide([Domestic Unit Comp Gr % vs PP] + 1, [Domestic Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit GI vs PP",
            "expression": "if(not isblank([Domestic Unit Gr % vs PP All Selected]), divide([Domestic Unit Gr % vs PP] + 1, [Domestic Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Mkt GI vs PP",
            "expression": "if(not isblank([Domestic Unit Mkt Gr % vs PP All Selected]), divide([Domestic Unit Mkt Gr % vs PP] + 1, [Domestic Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Unit Prod GI vs PP",
            "expression": "if(not isblank([Domestic Unit Prod Gr % vs PP All Selected]), divide([Domestic Unit Prod Gr % vs PP] + 1, [Domestic Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Domestic Val Comp GI vs PP",
            "expression": "if(not isblank([Domestic Val Comp Gr % vs PP All Selected]), divide([Domestic Val Comp Gr % vs PP] + 1, [Domestic Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val GI vs PP",
            "expression": "if(not isblank([Domestic Val Gr % vs PP All Selected]), divide([Domestic Val Gr % vs PP] + 1, [Domestic Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Mkt GI vs PP",
            "expression": "if(not isblank([Domestic Val Mkt Gr % vs PP All Selected]), divide([Domestic Val Mkt Gr % vs PP] + 1, [Domestic Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Domestic Val Prod GI vs PP",
            "expression": "if(not isblank([Domestic Val Prod Gr % vs PP All Selected]), divide([Domestic Val Prod Gr % vs PP] + 1, [Domestic Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Price Comp GI vs PP",
            "expression": "if(not isblank([Export Price Comp Gr % vs PP All Selected]), divide([Export Price Comp Gr % vs PP] + 1, [Export Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price GI vs PP",
            "expression": "if(not isblank([Export Price Gr % vs PP All Selected]), divide([Export Price Gr % vs PP] + 1, [Export Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price Mkt GI vs PP",
            "expression": "if(not isblank([Export Price Mkt Gr % vs PP All Selected]), divide([Export Price Mkt Gr % vs PP] + 1, [Export Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Price Prod GI vs PP",
            "expression": "if(not isblank([Export Price Prod Gr % vs PP All Selected]), divide([Export Price Prod Gr % vs PP] + 1, [Export Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Price)"
          },
          {
            "name": "Export Unit Comp GI vs PP",
            "expression": "if(not isblank([Export Unit Comp Gr % vs PP All Selected]), divide([Export Unit Comp Gr % vs PP] + 1, [Export Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit GI vs PP",
            "expression": "if(not isblank([Export Unit Gr % vs PP All Selected]), divide([Export Unit Gr % vs PP] + 1, [Export Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Mkt GI vs PP",
            "expression": "if(not isblank([Export Unit Mkt Gr % vs PP All Selected]), divide([Export Unit Mkt Gr % vs PP] + 1, [Export Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Unit Prod GI vs PP",
            "expression": "if(not isblank([Export Unit Prod Gr % vs PP All Selected]), divide([Export Unit Prod Gr % vs PP] + 1, [Export Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Unit)"
          },
          {
            "name": "Export Val Comp GI vs PP",
            "expression": "if(not isblank([Export Val Comp Gr % vs PP All Selected]), divide([Export Val Comp Gr % vs PP] + 1, [Export Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val GI vs PP",
            "expression": "if(not isblank([Export Val Gr % vs PP All Selected]), divide([Export Val Gr % vs PP] + 1, [Export Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Mkt GI vs PP",
            "expression": "if(not isblank([Export Val Mkt Gr % vs PP All Selected]), divide([Export Val Mkt Gr % vs PP] + 1, [Export Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Export Val Prod GI vs PP",
            "expression": "if(not isblank([Export Val Prod Gr % vs PP All Selected]), divide([Export Val Prod Gr % vs PP] + 1, [Export Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Price Comp GI vs PP",
            "expression": "if(not isblank([Grocery Price Comp Gr % vs PP All Selected]), divide([Grocery Price Comp Gr % vs PP] + 1, [Grocery Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price GI vs PP",
            "expression": "if(not isblank([Grocery Price Gr % vs PP All Selected]), divide([Grocery Price Gr % vs PP] + 1, [Grocery Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price Mkt GI vs PP",
            "expression": "if(not isblank([Grocery Price Mkt Gr % vs PP All Selected]), divide([Grocery Price Mkt Gr % vs PP] + 1, [Grocery Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Price Prod GI vs PP",
            "expression": "if(not isblank([Grocery Price Prod Gr % vs PP All Selected]), divide([Grocery Price Prod Gr % vs PP] + 1, [Grocery Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Grocery Unit Comp GI vs PP",
            "expression": "if(not isblank([Grocery Unit Comp Gr % vs PP All Selected]), divide([Grocery Unit Comp Gr % vs PP] + 1, [Grocery Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit GI vs PP",
            "expression": "if(not isblank([Grocery Unit Gr % vs PP All Selected]), divide([Grocery Unit Gr % vs PP] + 1, [Grocery Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Mkt GI vs PP",
            "expression": "if(not isblank([Grocery Unit Mkt Gr % vs PP All Selected]), divide([Grocery Unit Mkt Gr % vs PP] + 1, [Grocery Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Unit Prod GI vs PP",
            "expression": "if(not isblank([Grocery Unit Prod Gr % vs PP All Selected]), divide([Grocery Unit Prod Gr % vs PP] + 1, [Grocery Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Grocery Val Comp GI vs PP",
            "expression": "if(not isblank([Grocery Val Comp Gr % vs PP All Selected]), divide([Grocery Val Comp Gr % vs PP] + 1, [Grocery Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val GI vs PP",
            "expression": "if(not isblank([Grocery Val Gr % vs PP All Selected]), divide([Grocery Val Gr % vs PP] + 1, [Grocery Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Mkt GI vs PP",
            "expression": "if(not isblank([Grocery Val Mkt Gr % vs PP All Selected]), divide([Grocery Val Mkt Gr % vs PP] + 1, [Grocery Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Grocery Val Prod GI vs PP",
            "expression": "if(not isblank([Grocery Val Prod Gr % vs PP All Selected]), divide([Grocery Val Prod Gr % vs PP] + 1, [Grocery Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Price Comp GI vs PP",
            "expression": "if(not isblank([Incremental Price Comp Gr % vs PP All Selected]), divide([Incremental Price Comp Gr % vs PP] + 1, [Incremental Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price GI vs PP",
            "expression": "if(not isblank([Incremental Price Gr % vs PP All Selected]), divide([Incremental Price Gr % vs PP] + 1, [Incremental Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price Mkt GI vs PP",
            "expression": "if(not isblank([Incremental Price Mkt Gr % vs PP All Selected]), divide([Incremental Price Mkt Gr % vs PP] + 1, [Incremental Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Price Prod GI vs PP",
            "expression": "if(not isblank([Incremental Price Prod Gr % vs PP All Selected]), divide([Incremental Price Prod Gr % vs PP] + 1, [Incremental Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Incremental Unit Comp GI vs PP",
            "expression": "if(not isblank([Incremental Unit Comp Gr % vs PP All Selected]), divide([Incremental Unit Comp Gr % vs PP] + 1, [Incremental Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit GI vs PP",
            "expression": "if(not isblank([Incremental Unit Gr % vs PP All Selected]), divide([Incremental Unit Gr % vs PP] + 1, [Incremental Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Mkt GI vs PP",
            "expression": "if(not isblank([Incremental Unit Mkt Gr % vs PP All Selected]), divide([Incremental Unit Mkt Gr % vs PP] + 1, [Incremental Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Unit Prod GI vs PP",
            "expression": "if(not isblank([Incremental Unit Prod Gr % vs PP All Selected]), divide([Incremental Unit Prod Gr % vs PP] + 1, [Incremental Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Incremental Val Comp GI vs PP",
            "expression": "if(not isblank([Incremental Val Comp Gr % vs PP All Selected]), divide([Incremental Val Comp Gr % vs PP] + 1, [Incremental Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val GI vs PP",
            "expression": "if(not isblank([Incremental Val Gr % vs PP All Selected]), divide([Incremental Val Gr % vs PP] + 1, [Incremental Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Mkt GI vs PP",
            "expression": "if(not isblank([Incremental Val Mkt Gr % vs PP All Selected]), divide([Incremental Val Mkt Gr % vs PP] + 1, [Incremental Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Incremental Val Prod GI vs PP",
            "expression": "if(not isblank([Incremental Val Prod Gr % vs PP All Selected]), divide([Incremental Val Prod Gr % vs PP] + 1, [Incremental Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Price Comp GI vs PP",
            "expression": "if(not isblank([Lost Price Comp Gr % vs PP All Selected]), divide([Lost Price Comp Gr % vs PP] + 1, [Lost Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price GI vs PP",
            "expression": "if(not isblank([Lost Price Gr % vs PP All Selected]), divide([Lost Price Gr % vs PP] + 1, [Lost Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price Mkt GI vs PP",
            "expression": "if(not isblank([Lost Price Mkt Gr % vs PP All Selected]), divide([Lost Price Mkt Gr % vs PP] + 1, [Lost Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Price Prod GI vs PP",
            "expression": "if(not isblank([Lost Price Prod Gr % vs PP All Selected]), divide([Lost Price Prod Gr % vs PP] + 1, [Lost Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Price)"
          },
          {
            "name": "Lost Unit Comp GI vs PP",
            "expression": "if(not isblank([Lost Unit Comp Gr % vs PP All Selected]), divide([Lost Unit Comp Gr % vs PP] + 1, [Lost Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit GI vs PP",
            "expression": "if(not isblank([Lost Unit Gr % vs PP All Selected]), divide([Lost Unit Gr % vs PP] + 1, [Lost Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Mkt GI vs PP",
            "expression": "if(not isblank([Lost Unit Mkt Gr % vs PP All Selected]), divide([Lost Unit Mkt Gr % vs PP] + 1, [Lost Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Unit Prod GI vs PP",
            "expression": "if(not isblank([Lost Unit Prod Gr % vs PP All Selected]), divide([Lost Unit Prod Gr % vs PP] + 1, [Lost Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Unit)"
          },
          {
            "name": "Lost Val Comp GI vs PP",
            "expression": "if(not isblank([Lost Val Comp Gr % vs PP All Selected]), divide([Lost Val Comp Gr % vs PP] + 1, [Lost Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val GI vs PP",
            "expression": "if(not isblank([Lost Val Gr % vs PP All Selected]), divide([Lost Val Gr % vs PP] + 1, [Lost Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Mkt GI vs PP",
            "expression": "if(not isblank([Lost Val Mkt Gr % vs PP All Selected]), divide([Lost Val Mkt Gr % vs PP] + 1, [Lost Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Lost Val Prod GI vs PP",
            "expression": "if(not isblank([Lost Val Prod Gr % vs PP All Selected]), divide([Lost Val Prod Gr % vs PP] + 1, [Lost Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Price Comp GI vs PP",
            "expression": "if(not isblank([Non Promo Price Comp Gr % vs PP All Selected]), divide([Non Promo Price Comp Gr % vs PP] + 1, [Non Promo Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price GI vs PP",
            "expression": "if(not isblank([Non Promo Price Gr % vs PP All Selected]), divide([Non Promo Price Gr % vs PP] + 1, [Non Promo Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price Mkt GI vs PP",
            "expression": "if(not isblank([Non Promo Price Mkt Gr % vs PP All Selected]), divide([Non Promo Price Mkt Gr % vs PP] + 1, [Non Promo Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Price Prod GI vs PP",
            "expression": "if(not isblank([Non Promo Price Prod Gr % vs PP All Selected]), divide([Non Promo Price Prod Gr % vs PP] + 1, [Non Promo Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Non Promo Unit Comp GI vs PP",
            "expression": "if(not isblank([Non Promo Unit Comp Gr % vs PP All Selected]), divide([Non Promo Unit Comp Gr % vs PP] + 1, [Non Promo Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit GI vs PP",
            "expression": "if(not isblank([Non Promo Unit Gr % vs PP All Selected]), divide([Non Promo Unit Gr % vs PP] + 1, [Non Promo Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Mkt GI vs PP",
            "expression": "if(not isblank([Non Promo Unit Mkt Gr % vs PP All Selected]), divide([Non Promo Unit Mkt Gr % vs PP] + 1, [Non Promo Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Unit Prod GI vs PP",
            "expression": "if(not isblank([Non Promo Unit Prod Gr % vs PP All Selected]), divide([Non Promo Unit Prod Gr % vs PP] + 1, [Non Promo Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Non Promo Val Comp GI vs PP",
            "expression": "if(not isblank([Non Promo Val Comp Gr % vs PP All Selected]), divide([Non Promo Val Comp Gr % vs PP] + 1, [Non Promo Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val GI vs PP",
            "expression": "if(not isblank([Non Promo Val Gr % vs PP All Selected]), divide([Non Promo Val Gr % vs PP] + 1, [Non Promo Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Mkt GI vs PP",
            "expression": "if(not isblank([Non Promo Val Mkt Gr % vs PP All Selected]), divide([Non Promo Val Mkt Gr % vs PP] + 1, [Non Promo Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Non Promo Val Prod GI vs PP",
            "expression": "if(not isblank([Non Promo Val Prod Gr % vs PP All Selected]), divide([Non Promo Val Prod Gr % vs PP] + 1, [Non Promo Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Online Price Comp GI vs PP",
            "expression": "if(not isblank([Online Price Comp Gr % vs PP All Selected]), divide([Online Price Comp Gr % vs PP] + 1, [Online Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price GI vs PP",
            "expression": "if(not isblank([Online Price Gr % vs PP All Selected]), divide([Online Price Gr % vs PP] + 1, [Online Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price Mkt GI vs PP",
            "expression": "if(not isblank([Online Price Mkt Gr % vs PP All Selected]), divide([Online Price Mkt Gr % vs PP] + 1, [Online Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Price Prod GI vs PP",
            "expression": "if(not isblank([Online Price Prod Gr % vs PP All Selected]), divide([Online Price Prod Gr % vs PP] + 1, [Online Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Price)"
          },
          {
            "name": "Online Unit Comp GI vs PP",
            "expression": "if(not isblank([Online Unit Comp Gr % vs PP All Selected]), divide([Online Unit Comp Gr % vs PP] + 1, [Online Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit GI vs PP",
            "expression": "if(not isblank([Online Unit Gr % vs PP All Selected]), divide([Online Unit Gr % vs PP] + 1, [Online Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Mkt GI vs PP",
            "expression": "if(not isblank([Online Unit Mkt Gr % vs PP All Selected]), divide([Online Unit Mkt Gr % vs PP] + 1, [Online Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Unit Prod GI vs PP",
            "expression": "if(not isblank([Online Unit Prod Gr % vs PP All Selected]), divide([Online Unit Prod Gr % vs PP] + 1, [Online Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Unit)"
          },
          {
            "name": "Online Val Comp GI vs PP",
            "expression": "if(not isblank([Online Val Comp Gr % vs PP All Selected]), divide([Online Val Comp Gr % vs PP] + 1, [Online Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val GI vs PP",
            "expression": "if(not isblank([Online Val Gr % vs PP All Selected]), divide([Online Val Gr % vs PP] + 1, [Online Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Mkt GI vs PP",
            "expression": "if(not isblank([Online Val Mkt Gr % vs PP All Selected]), divide([Online Val Mkt Gr % vs PP] + 1, [Online Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Online Val Prod GI vs PP",
            "expression": "if(not isblank([Online Val Prod Gr % vs PP All Selected]), divide([Online Val Prod Gr % vs PP] + 1, [Online Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\PP or PoP (Amount)"
          },
          {
            "name": "Pack # Comp GI vs PP",
            "expression": "if(not isblank([Pack # Comp Gr % vs PP All Selected]), divide([Pack # Comp Gr % vs PP] + 1, [Pack # Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # GI vs PP",
            "expression": "if(not isblank([Pack # Gr % vs PP All Selected]), divide([Pack # Gr % vs PP] + 1, [Pack # Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Mkt GI vs PP",
            "expression": "if(not isblank([Pack # Mkt Gr % vs PP All Selected]), divide([Pack # Mkt Gr % vs PP] + 1, [Pack # Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Pack # Prod GI vs PP",
            "expression": "if(not isblank([Pack # Prod Gr % vs PP All Selected]), divide([Pack # Prod Gr % vs PP] + 1, [Pack # Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\PP or PoP"
          },
          {
            "name": "Price Comp GI vs PP",
            "expression": "if(not isblank([Price Comp Gr % vs PP All Selected]), divide([Price Comp Gr % vs PP] + 1, [Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price GI vs PP",
            "expression": "if(not isblank([Price Gr % vs PP All Selected]), divide([Price Gr % vs PP] + 1, [Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price Mkt GI vs PP",
            "expression": "if(not isblank([Price Mkt Gr % vs PP All Selected]), divide([Price Mkt Gr % vs PP] + 1, [Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Price Prod GI vs PP",
            "expression": "if(not isblank([Price Prod Gr % vs PP All Selected]), divide([Price Prod Gr % vs PP] + 1, [Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Comp GI vs PP",
            "expression": "if(not isblank([Promo Price Comp Gr % vs PP All Selected]), divide([Promo Price Comp Gr % vs PP] + 1, [Promo Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price GI vs PP",
            "expression": "if(not isblank([Promo Price Gr % vs PP All Selected]), divide([Promo Price Gr % vs PP] + 1, [Promo Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Mkt GI vs PP",
            "expression": "if(not isblank([Promo Price Mkt Gr % vs PP All Selected]), divide([Promo Price Mkt Gr % vs PP] + 1, [Promo Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Price Prod GI vs PP",
            "expression": "if(not isblank([Promo Price Prod Gr % vs PP All Selected]), divide([Promo Price Prod Gr % vs PP] + 1, [Promo Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Price)"
          },
          {
            "name": "Promo Unit Comp GI vs PP",
            "expression": "if(not isblank([Promo Unit Comp Gr % vs PP All Selected]), divide([Promo Unit Comp Gr % vs PP] + 1, [Promo Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit GI vs PP",
            "expression": "if(not isblank([Promo Unit Gr % vs PP All Selected]), divide([Promo Unit Gr % vs PP] + 1, [Promo Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Mkt GI vs PP",
            "expression": "if(not isblank([Promo Unit Mkt Gr % vs PP All Selected]), divide([Promo Unit Mkt Gr % vs PP] + 1, [Promo Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Unit Prod GI vs PP",
            "expression": "if(not isblank([Promo Unit Prod Gr % vs PP All Selected]), divide([Promo Unit Prod Gr % vs PP] + 1, [Promo Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Unit)"
          },
          {
            "name": "Promo Val Comp GI vs PP",
            "expression": "if(not isblank([Promo Val Comp Gr % vs PP All Selected]), divide([Promo Val Comp Gr % vs PP] + 1, [Promo Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val GI vs PP",
            "expression": "if(not isblank([Promo Val Gr % vs PP All Selected]), divide([Promo Val Gr % vs PP] + 1, [Promo Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Mkt GI vs PP",
            "expression": "if(not isblank([Promo Val Mkt Gr % vs PP All Selected]), divide([Promo Val Mkt Gr % vs PP] + 1, [Promo Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Promo Val Prod GI vs PP",
            "expression": "if(not isblank([Promo Val Prod Gr % vs PP All Selected]), divide([Promo Val Prod Gr % vs PP] + 1, [Promo Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Price Comp GI vs PP",
            "expression": "if(not isblank([Retail Price Comp Gr % vs PP All Selected]), divide([Retail Price Comp Gr % vs PP] + 1, [Retail Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price GI vs PP",
            "expression": "if(not isblank([Retail Price Gr % vs PP All Selected]), divide([Retail Price Gr % vs PP] + 1, [Retail Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price Mkt GI vs PP",
            "expression": "if(not isblank([Retail Price Mkt Gr % vs PP All Selected]), divide([Retail Price Mkt Gr % vs PP] + 1, [Retail Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Price Prod GI vs PP",
            "expression": "if(not isblank([Retail Price Prod Gr % vs PP All Selected]), divide([Retail Price Prod Gr % vs PP] + 1, [Retail Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Price)"
          },
          {
            "name": "Retail Unit Comp GI vs PP",
            "expression": "if(not isblank([Retail Unit Comp Gr % vs PP All Selected]), divide([Retail Unit Comp Gr % vs PP] + 1, [Retail Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit GI vs PP",
            "expression": "if(not isblank([Retail Unit Gr % vs PP All Selected]), divide([Retail Unit Gr % vs PP] + 1, [Retail Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Mkt GI vs PP",
            "expression": "if(not isblank([Retail Unit Mkt Gr % vs PP All Selected]), divide([Retail Unit Mkt Gr % vs PP] + 1, [Retail Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Unit Prod GI vs PP",
            "expression": "if(not isblank([Retail Unit Prod Gr % vs PP All Selected]), divide([Retail Unit Prod Gr % vs PP] + 1, [Retail Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Unit)"
          },
          {
            "name": "Retail Val Comp GI vs PP",
            "expression": "if(not isblank([Retail Val Comp Gr % vs PP All Selected]), divide([Retail Val Comp Gr % vs PP] + 1, [Retail Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val GI vs PP",
            "expression": "if(not isblank([Retail Val Gr % vs PP All Selected]), divide([Retail Val Gr % vs PP] + 1, [Retail Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Mkt GI vs PP",
            "expression": "if(not isblank([Retail Val Mkt Gr % vs PP All Selected]), divide([Retail Val Mkt Gr % vs PP] + 1, [Retail Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Retail Val Prod GI vs PP",
            "expression": "if(not isblank([Retail Val Prod Gr % vs PP All Selected]), divide([Retail Val Prod Gr % vs PP] + 1, [Retail Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Price Comp GI vs PP",
            "expression": "if(not isblank([Scanout Price Comp Gr % vs PP All Selected]), divide([Scanout Price Comp Gr % vs PP] + 1, [Scanout Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price GI vs PP",
            "expression": "if(not isblank([Scanout Price Gr % vs PP All Selected]), divide([Scanout Price Gr % vs PP] + 1, [Scanout Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price Mkt GI vs PP",
            "expression": "if(not isblank([Scanout Price Mkt Gr % vs PP All Selected]), divide([Scanout Price Mkt Gr % vs PP] + 1, [Scanout Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Price Prod GI vs PP",
            "expression": "if(not isblank([Scanout Price Prod Gr % vs PP All Selected]), divide([Scanout Price Prod Gr % vs PP] + 1, [Scanout Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Scanout Unit Comp GI vs PP",
            "expression": "if(not isblank([Scanout Unit Comp Gr % vs PP All Selected]), divide([Scanout Unit Comp Gr % vs PP] + 1, [Scanout Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit GI vs PP",
            "expression": "if(not isblank([Scanout Unit Gr % vs PP All Selected]), divide([Scanout Unit Gr % vs PP] + 1, [Scanout Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Mkt GI vs PP",
            "expression": "if(not isblank([Scanout Unit Mkt Gr % vs PP All Selected]), divide([Scanout Unit Mkt Gr % vs PP] + 1, [Scanout Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Unit Prod GI vs PP",
            "expression": "if(not isblank([Scanout Unit Prod Gr % vs PP All Selected]), divide([Scanout Unit Prod Gr % vs PP] + 1, [Scanout Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Scanout Val Comp GI vs PP",
            "expression": "if(not isblank([Scanout Val Comp Gr % vs PP All Selected]), divide([Scanout Val Comp Gr % vs PP] + 1, [Scanout Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val GI vs PP",
            "expression": "if(not isblank([Scanout Val Gr % vs PP All Selected]), divide([Scanout Val Gr % vs PP] + 1, [Scanout Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Mkt GI vs PP",
            "expression": "if(not isblank([Scanout Val Mkt Gr % vs PP All Selected]), divide([Scanout Val Mkt Gr % vs PP] + 1, [Scanout Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Scanout Val Prod GI vs PP",
            "expression": "if(not isblank([Scanout Val Prod Gr % vs PP All Selected]), divide([Scanout Val Prod Gr % vs PP] + 1, [Scanout Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Price Comp GI vs PP",
            "expression": "if(not isblank([Sellin Price Comp Gr % vs PP All Selected]), divide([Sellin Price Comp Gr % vs PP] + 1, [Sellin Price Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price GI vs PP",
            "expression": "if(not isblank([Sellin Price Gr % vs PP All Selected]), divide([Sellin Price Gr % vs PP] + 1, [Sellin Price Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price Mkt GI vs PP",
            "expression": "if(not isblank([Sellin Price Mkt Gr % vs PP All Selected]), divide([Sellin Price Mkt Gr % vs PP] + 1, [Sellin Price Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Price Prod GI vs PP",
            "expression": "if(not isblank([Sellin Price Prod Gr % vs PP All Selected]), divide([Sellin Price Prod Gr % vs PP] + 1, [Sellin Price Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Price)"
          },
          {
            "name": "Sellin Unit Comp GI vs PP",
            "expression": "if(not isblank([Sellin Unit Comp Gr % vs PP All Selected]), divide([Sellin Unit Comp Gr % vs PP] + 1, [Sellin Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit GI vs PP",
            "expression": "if(not isblank([Sellin Unit Gr % vs PP All Selected]), divide([Sellin Unit Gr % vs PP] + 1, [Sellin Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Mkt GI vs PP",
            "expression": "if(not isblank([Sellin Unit Mkt Gr % vs PP All Selected]), divide([Sellin Unit Mkt Gr % vs PP] + 1, [Sellin Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Unit Prod GI vs PP",
            "expression": "if(not isblank([Sellin Unit Prod Gr % vs PP All Selected]), divide([Sellin Unit Prod Gr % vs PP] + 1, [Sellin Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Unit)"
          },
          {
            "name": "Sellin Val Comp GI vs PP",
            "expression": "if(not isblank([Sellin Val Comp Gr % vs PP All Selected]), divide([Sellin Val Comp Gr % vs PP] + 1, [Sellin Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val GI vs PP",
            "expression": "if(not isblank([Sellin Val Gr % vs PP All Selected]), divide([Sellin Val Gr % vs PP] + 1, [Sellin Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Mkt GI vs PP",
            "expression": "if(not isblank([Sellin Val Mkt Gr % vs PP All Selected]), divide([Sellin Val Mkt Gr % vs PP] + 1, [Sellin Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Sellin Val Prod GI vs PP",
            "expression": "if(not isblank([Sellin Val Prod Gr % vs PP All Selected]), divide([Sellin Val Prod Gr % vs PP] + 1, [Sellin Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\PP or PoP (Amount)"
          },
          {
            "name": "Unit Comp GI vs PP",
            "expression": "if(not isblank([Unit Comp Gr % vs PP All Selected]), divide([Unit Comp Gr % vs PP] + 1, [Unit Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit GI vs PP",
            "expression": "if(not isblank([Unit Gr % vs PP All Selected]), divide([Unit Gr % vs PP] + 1, [Unit Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Mkt GI vs PP",
            "expression": "if(not isblank([Unit Mkt Gr % vs PP All Selected]), divide([Unit Mkt Gr % vs PP] + 1, [Unit Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Prod GI vs PP",
            "expression": "if(not isblank([Unit Prod Gr % vs PP All Selected]), divide([Unit Prod Gr % vs PP] + 1, [Unit Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Val Comp GI vs PP",
            "expression": "if(not isblank([Val Comp Gr % vs PP All Selected]), divide([Val Comp Gr % vs PP] + 1, [Val Comp Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val GI vs PP",
            "expression": "if(not isblank([Val Gr % vs PP All Selected]), divide([Val Gr % vs PP] + 1, [Val Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Mkt GI vs PP",
            "expression": "if(not isblank([Val Mkt Gr % vs PP All Selected]), divide([Val Mkt Gr % vs PP] + 1, [Val Mkt Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Prod GI vs PP",
            "expression": "if(not isblank([Val Prod Gr % vs PP All Selected]), divide([Val Prod Gr % vs PP] + 1, [Val Prod Gr % vs PP All Selected] + 1) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Base Store # Dist",
            "expression": [
              "VAR pds =",
              "    VALUES ( 'Dim_Product'[FCC] )",
              "VAR dates =",
              "    VALUES ( 'Dim_Date'[period_id] )",
              "VAR store_si =",
              "    CALCULATE (",
              "        DISTINCTCOUNT ( 'Fact_Store_Sales'[eid] ),",
              "        FILTER ( 'Dim_Store', 'Dim_Store'[distribution_use] = 1 ),",
              "        FILTER (",
              "            'Dim_Banner_State',",
              "            NOT 'Dim_Banner_State'[banner_state]",
              "                IN { \"PRICE H&B_OTHER STATES\", \"PRICELINE_OTHER STATES\" }",
              "        ),",
              "        FILTER ( ALL ( 'Dim_Product_Base' ), 'Dim_Product_Base'[FCC] IN pds ),",
              "        FILTER ( ALL ( 'Dim_Date_Base' ), 'Dim_Date_Base'[period_id] IN dates )",
              "    )",
              "VAR store_so =",
              "    CALCULATE (",
              "        DISTINCTCOUNT ( 'Fact_Store_Sales'[eid] ),",
              "        FILTER ( 'Dim_Store', 'Dim_Store'[distribution_use] = 1 ),",
              "        FILTER ( 'Dim_Banner', 'Dim_Banner'[use_iri] <> 1 ),",
              "        FILTER ( ALL ( 'Dim_Product_Base' ), 'Dim_Product_Base'[FCC] IN pds ),",
              "        FILTER ( ALL ( 'Dim_Date_Base' ), 'Dim_Date_Base'[period_id] IN dates )",
              "    )",
              "RETURN",
              "    SWITCH (",
              "        TRUE (),",
              "        [const_Selected_Source] = \"Scanout\", store_so,",
              "        [const_Selected_Source] = \"Sellin\", store_si",
              "    )"
            ],
            "formatString": "0",
            "isHidden": true,
            "displayFolder": "Base Dist Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              }
            ]
          },
          {
            "name": "Base Store # Total",
            "expression": [
              "VAR dates =",
              "    VALUES ( 'Dim_Date'[period_id] )",
              "VAR store_si =",
              "    CALCULATE (",
              "        DISTINCTCOUNT ( 'Dim_Banner_Store_Period'[eid] ),",
              "        FILTER ( 'Dim_Store', 'Dim_Store'[distribution_use] = 1 ),",
              "        FILTER (",
              "            'Dim_Banner_State',",
              "            NOT 'Dim_Banner_State'[banner_state]",
              "                IN { \"PRICE H&B_OTHER STATES\", \"PRICELINE_OTHER STATES\" }",
              "        ),",
              "        FILTER ( ALL ( 'Dim_Date_Base' ), 'Dim_Date_Base'[period_id] IN dates )",
              "    )",
              "VAR store_so =",
              "    CALCULATE (",
              "        DISTINCTCOUNT ( 'Dim_Banner_Store_Period'[eid] ),",
              "        FILTER ( 'Dim_Store', 'Dim_Store'[distribution_use] = 1 ),",
              "        FILTER ( 'Dim_Banner', 'Dim_Banner'[use_iri] <> 1 ),",
              "        FILTER ( ALL ( 'Dim_Date_Base' ), 'Dim_Date_Base'[period_id] IN dates )",
              "    )",
              "RETURN",
              "    SWITCH (",
              "        TRUE (),",
              "        [const_Selected_Source] = \"Scanout\", store_so,",
              "        [const_Selected_Source] = \"Sellin\", store_si",
              "    )",
              "    "
            ],
            "formatString": "0",
            "isHidden": true,
            "displayFolder": "Base Dist Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              }
            ]
          },
          {
            "name": "Store # Dist",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base Store # Dist],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base Store # Dist],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF (f_date, sales_all, sales )"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Store # Total",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base Store # Total],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base Store # Total],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )",
              "    ",
              "    "
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Base Turnover Total",
            "expression": [
              "VAR dates =",
              "    VALUES ( 'Dim_Date'[period_id] )",
              "VAR to_all_so =",
              "    CALCULATE (",
              "        SUM ( 'Dim_Banner_Store_Period'[scan_amount] ),",
              "        ALL ( 'Dim_Banner_Store_Period'[eid] ),",
              "        FILTER ( 'Dim_Banner', 'Dim_Banner'[use_iri] <> 1 ),",
              "        FILTER ( ALL ( 'Dim_Date_Base' ), 'Dim_Date_Base'[period_id] IN dates )",
              "    )",
              "VAR to_all_si =",
              "    CALCULATE (",
              "        SUM ( 'Dim_Banner_Store_Period'[sellin_amount] ),",
              "        ALL ( 'Dim_Banner_Store_Period'[eid] ),",
              "        FILTER ( ALL ( 'Dim_Date_Base' ), 'Dim_Date_Base'[period_id] IN dates )",
              "    )",
              "RETURN",
              "    SWITCH (",
              "        TRUE (),",
              "        [const_Selected_Source] = \"Scanout\", to_all_so,",
              "        [const_Selected_Source] = \"Sellin\", to_all_si",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Dist Metrics"
          },
          {
            "name": "Base Turnover Dist",
            "expression": [
              "VAR dates =",
              "    VALUES ( 'Dim_Date'[period_id] )",
              "VAR eids =",
              "    VALUES ( 'Fact_Store_Sales'[eid] )",
              "VAR tover_so =",
              "    CALCULATE (",
              "        SUM ( 'Dim_Banner_Store_Period'[scan_amount] ),",
              "        FILTER (",
              "            'Dim_Store',",
              "            'Dim_Store'[EID] IN eids",
              "                && 'Dim_Store'[distribution_use] = 1",
              "        ),",
              "        FILTER ( 'Dim_Banner', 'Dim_Banner'[use_iri] <> 1 ),",
              "        FILTER ( ALL ( 'Dim_Date_Base' ), 'Dim_Date_Base'[period_id] IN dates )",
              "    )",
              "VAR tover_si =",
              "    CALCULATE (",
              "        SUM ( 'Dim_Banner_Store_Period'[sellin_amount] ),",
              "        FILTER (",
              "            'Dim_Store',",
              "            'Dim_Store'[EID] IN eids",
              "                && 'Dim_Store'[distribution_use] = 1",
              "        ),",
              "        FILTER ( ALL ( 'Dim_Date_Base' ), 'Dim_Date_Base'[period_id] IN dates )",
              "    )",
              "RETURN",
              "    SWITCH (",
              "        TRUE (),",
              "        [const_Selected_Source] = \"Scanout\", tover_so,",
              "        [const_Selected_Source] = \"Sellin\", tover_si",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Dist Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "Turnover Dist",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base Turnover Dist],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base Turnover Dist],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Base Dist Metrics"
          },
          {
            "name": "Turnover Total",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base Turnover Total],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base Turnover Total],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Base Dist Metrics"
          },
          {
            "name": "Wtd Selling Dist",
            "expression": "Divide([Turnover Dist], [Turnover Total])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Num Selling Dist",
            "expression": [
              "divide([Store # Dist], [Store # Total])",
              ""
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Base Unit Dist",
            "expression": [
              "VAR eids =",
              "    VALUES ( 'Fact_Store_Sales'[eid] )",
              "VAR tover =",
              "    CALCULATE (",
              "        [Base ST Unit Sales],",
              "        FILTER (",
              "            'Dim_Store',",
              "            'Dim_Store'[EID] IN eids",
              "                && 'Dim_Store'[distribution_use] = 1",
              "        )",
              "    )",
              "RETURN",
              "    tover"
            ],
            "isHidden": true,
            "displayFolder": "Base Dist Metrics"
          },
          {
            "name": "Base Val Dist",
            "expression": [
              "VAR eids =",
              "    VALUES ( 'Fact_Store_Sales'[eid] )",
              "VAR tover =",
              "    CALCULATE (",
              "        [Base ST Val Sales],",
              "        FILTER (",
              "            'Dim_Store',",
              "            'Dim_Store'[EID] IN eids",
              "                && 'Dim_Store'[distribution_use] = 1",
              "        )",
              "    )",
              "RETURN",
              "    tover"
            ],
            "isHidden": true,
            "displayFolder": "Base Dist Metrics"
          },
          {
            "name": "Unit Dist",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base Unit Dist],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base Unit Dist],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Unit)"
          },
          {
            "name": "Val Dist",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base Val Dist],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base Val Dist],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Unit Dist Prod",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [Unit Dist],",
              "    CALCULATE (",
              "        [Unit Dist],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Unit)"
          },
          {
            "name": "Val Dist Prod",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [Val Dist],",
              "    CALCULATE (",
              "        [Val Dist],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "ROS Unit",
            "expression": [
              "",
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cp_count =",
              "    CALCULATE (",
              "        COUNTROWS ( VALUES ( 'Dim_Date'[period_id] ) ),",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR f_dd =",
              "    IF ( cp_count > 1, TRUE, FALSE )",
              "VAR f_dd2 =",
              "    IF (",
              "        cp",
              "            = CALCULATE (",
              "                MAX ( 'Dim_Date'[Date Code] ),",
              "                FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt )",
              "            ),",
              "        TRUE,",
              "        FALSE",
              "    )",
              "VAR cps =",
              "    VALUES('Dim_Date'[Date Code])",
              "    ",
              "VAR cps_count =",
              "    calculate(countrows(VALUES('Dim_Date'[period_id])),",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] in cps",
              "        )",
              "    )",
              "    ",
              "VAR f_date = [f_DimDate]",
              "",
              "var ros = divide([Unit Dist Prod], [Store # Dist])",
              "",
              "return ",
              "",
              "    SWITCH (",
              "        TRUE,",
              "        not [f_DimDate], DIVIDE ( ros, cp_count ),",
              "        f_dd, DIVIDE ( ros, cps_count),",
              "        DIVIDE ( ros, cp_count )",
              "    )",
              "",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Unit)"
          },
          {
            "name": "ROS Val",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cp_count =",
              "    CALCULATE (",
              "        COUNTROWS ( VALUES ( 'Dim_Date'[period_id] ) ),",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR f_dd =",
              "    IF ( cp_count > 1, TRUE, FALSE )",
              "VAR f_dd2 =",
              "    IF (",
              "        cp",
              "            = CALCULATE (",
              "                MAX ( 'Dim_Date'[Date Code] ),",
              "                FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt )",
              "            ),",
              "        TRUE,",
              "        FALSE",
              "    )",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR cps_count =",
              "    CALCULATE (",
              "        COUNTROWS ( VALUES ( 'Dim_Date'[period_id] ) ),",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "VAR ros =",
              "    DIVIDE ( [Val Dist Prod], [Store # Dist] )",
              "RETURN",
              "    //IF (f_dd, divide(ros , cp_count), divide(ros , cps_count) )",
              "    SWITCH (",
              "        TRUE,",
              "        not [f_DimDate], DIVIDE ( ros, cp_count ),",
              "        f_dd, DIVIDE ( ros, cps_count),",
              "        DIVIDE ( ros, cp_count )",
              "    )"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "SPPD Unit",
            "expression": "divide([Unit Dist Prod], [Wtd Selling Dist])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Unit)"
          },
          {
            "name": "SPPD Val",
            "expression": "divide([Val Dist Prod], [Wtd Selling Dist])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Wtd/Num Dist Index",
            "expression": "divide([Wtd Selling Dist], [Num Selling Dist]) * 100",
            "formatString": "0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Base Turnover Total Subscribe",
            "expression": [
              "VAR pds =",
              "    VALUES ( 'Dim_Product'[FCC] )",
              "",
              "VAR to_all =",
              "    CALCULATE (",
              "        [Base ST Val Sales],",
              "        ALL ( 'Dim_Banner_Store_Period'[eid] ),",
              "        FILTER ( ALL ( 'Dim_Product_Base' ), 'Dim_Product_Base'[FCC] IN pds )",
              "    )",
              "RETURN",
              "    to_all"
            ],
            "isHidden": true,
            "displayFolder": "Base Dist Metrics"
          },
          {
            "name": "Base Turnover Dist Subscribe",
            "expression": [
              "VAR pds =",
              "    VALUES ( 'Dim_Product'[FCC] )",
              "VAR eids =",
              "    VALUES ( 'Fact_Store_Sales'[eid] )",
              "VAR tover =",
              "    CALCULATE (",
              "        [Base ST Val Sales],",
              "        FILTER (",
              "            'Dim_Store',",
              "            'Dim_Store'[EID] IN eids",
              "                && 'Dim_Store'[distribution_use] = 1",
              "        ),",
              "        FILTER ( ALL ( 'Dim_Product_Base' ), 'Dim_Product_Base'[FCC] IN pds )",
              "    )",
              "RETURN",
              "    tover"
            ],
            "isHidden": true,
            "displayFolder": "Base Dist Metrics",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"General\" />"
              }
            ]
          },
          {
            "name": "Num Selling Dist LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Num Selling Dist], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Distribution Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Num Selling Dist PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Num Selling Dist], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "ROS Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([ROS Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "ROS Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([ROS Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "ROS Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([ROS Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "ROS Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([ROS Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "SPPD Unit LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([SPPD Unit], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "SPPD Unit PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([SPPD Unit], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "SPPD Val LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([SPPD Val], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "SPPD Val PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([SPPD Val], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Store # Dist LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Store # Dist], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Store # Dist PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Store # Dist], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Store # Total LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Store # Total], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Store # Total PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Store # Total], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Unit Dist LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit Dist], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Dist PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit Dist], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Dist Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Unit Dist Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\LY or YoY (Unit)"
          },
          {
            "name": "Unit Dist Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Unit Dist Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Val Dist LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val Dist], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Dist PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val Dist], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Dist Prod LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Val Dist Prod], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Val Dist Prod PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Val Dist Prod], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Wtd Selling Dist LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Wtd Selling Dist], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Distribution Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Wtd Selling Dist PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Wtd Selling Dist], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Wtd/Num Dist Index LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([Wtd/Num Dist Index], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Distribution Metrics\\LY or YoY (Amount)"
          },
          {
            "name": "Wtd/Num Dist Index PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([Wtd/Num Dist Index], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "formatString": "0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Num Selling Dist +/- LY",
            "expression": "if(isblank([Num Selling Dist LY]), blank(), [Num Selling Dist] - [Num Selling Dist LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Num Selling Dist +/- PP",
            "expression": "if(isblank([Num Selling Dist PP]), blank(), [Num Selling Dist] - [Num Selling Dist PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "ROS Unit +/- LY",
            "expression": "if(isblank([ROS Unit LY]), blank(), [ROS Unit] - [ROS Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Unit)"
          },
          {
            "name": "ROS Unit +/- PP",
            "expression": "if(isblank([ROS Unit PP]), blank(), [ROS Unit] - [ROS Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "ROS Val +/- LY",
            "expression": "if(isblank([ROS Val LY]), blank(), [ROS Val] - [ROS Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "ROS Val +/- PP",
            "expression": "if(isblank([ROS Val PP]), blank(), [ROS Val] - [ROS Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "SPPD Unit +/- LY",
            "expression": "if(isblank([SPPD Unit LY]), blank(), [SPPD Unit] - [SPPD Unit LY])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Unit)"
          },
          {
            "name": "SPPD Unit +/- PP",
            "expression": "if(isblank([SPPD Unit PP]), blank(), [SPPD Unit] - [SPPD Unit PP])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "SPPD Val +/- LY",
            "expression": "if(isblank([SPPD Val LY]), blank(), [SPPD Val] - [SPPD Val LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "SPPD Val +/- PP",
            "expression": "if(isblank([SPPD Val PP]), blank(), [SPPD Val] - [SPPD Val PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Store # Dist +/- LY",
            "expression": "if(isblank([Store # Dist LY]), blank(), [Store # Dist] - [Store # Dist LY])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Store # Dist +/- PP",
            "expression": "if(isblank([Store # Dist PP]), blank(), [Store # Dist] - [Store # Dist PP])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Store # Total +/- LY",
            "expression": "if(isblank([Store # Total LY]), blank(), [Store # Total] - [Store # Total LY])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Store # Total +/- PP",
            "expression": "if(isblank([Store # Total PP]), blank(), [Store # Total] - [Store # Total PP])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Unit Dist +/- LY",
            "expression": "if(isblank([Unit Dist LY]), blank(), [Unit Dist] - [Unit Dist LY])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit Dist +/- PP",
            "expression": "if(isblank([Unit Dist PP]), blank(), [Unit Dist] - [Unit Dist PP])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Unit Dist Prod +/- LY",
            "expression": "if(isblank([Unit Dist Prod LY]), blank(), [Unit Dist Prod] - [Unit Dist Prod LY])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit Dist Prod +/- PP",
            "expression": "if(isblank([Unit Dist Prod PP]), blank(), [Unit Dist Prod] - [Unit Dist Prod PP])",
            "formatString": "#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Unit)"
          },
          {
            "name": "Val Dist +/- LY",
            "expression": "if(isblank([Val Dist LY]), blank(), [Val Dist] - [Val Dist LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val Dist +/- PP",
            "expression": "if(isblank([Val Dist PP]), blank(), [Val Dist] - [Val Dist PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val Dist Prod +/- LY",
            "expression": "if(isblank([Val Dist Prod LY]), blank(), [Val Dist Prod] - [Val Dist Prod LY])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val Dist Prod +/- PP",
            "expression": "if(isblank([Val Dist Prod PP]), blank(), [Val Dist Prod] - [Val Dist Prod PP])",
            "formatString": "\\$#,0;-\\$#,0;\\$#,0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Wtd Selling Dist +/- LY",
            "expression": "if(isblank([Wtd Selling Dist LY]), blank(), [Wtd Selling Dist] - [Wtd Selling Dist LY])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Wtd Selling Dist +/- PP",
            "expression": "if(isblank([Wtd Selling Dist PP]), blank(), [Wtd Selling Dist] - [Wtd Selling Dist PP])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Wtd/Num Dist Index +/- LY",
            "expression": "if(isblank([Wtd/Num Dist Index LY]), blank(), [Wtd/Num Dist Index] - [Wtd/Num Dist Index LY])",
            "formatString": "0",
            "displayFolder": "Distribution Metrics\\Current Period (Amount)"
          },
          {
            "name": "Wtd/Num Dist Index +/- PP",
            "expression": "if(isblank([Wtd/Num Dist Index PP]), blank(), [Wtd/Num Dist Index] - [Wtd/Num Dist Index PP])",
            "formatString": "0",
            "displayFolder": "Distribution Metrics\\PP or PoP (Amount)"
          },
          {
            "name": "Val EI vs LY",
            "expression": "if(not isblank([Val % Mkt Shr LY]), divide([Val % Mkt Shr], [Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "Val EI vs PP",
            "expression": "if(not isblank([Val % Mkt Shr PP]), divide([Val % Mkt Shr], [Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\Current Period (Amount)"
          },
          {
            "name": "B&M Unit EI vs LY",
            "expression": "if(not isblank([B&M Unit % Mkt Shr LY]), divide([B&M Unit % Mkt Shr], [B&M Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Unit EI vs PP",
            "expression": "if(not isblank([B&M Unit % Mkt Shr PP]), divide([B&M Unit % Mkt Shr], [B&M Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "B&M Val EI vs LY",
            "expression": "if(not isblank([B&M Val % Mkt Shr LY]), divide([B&M Val % Mkt Shr], [B&M Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "B&M Val EI vs PP",
            "expression": "if(not isblank([B&M Val % Mkt Shr PP]), divide([B&M Val % Mkt Shr], [B&M Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Baseline Unit EI vs LY",
            "expression": "if(not isblank([Baseline Unit % Mkt Shr LY]), divide([Baseline Unit % Mkt Shr], [Baseline Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Unit EI vs PP",
            "expression": "if(not isblank([Baseline Unit % Mkt Shr PP]), divide([Baseline Unit % Mkt Shr], [Baseline Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Baseline Val EI vs LY",
            "expression": "if(not isblank([Baseline Val % Mkt Shr LY]), divide([Baseline Val % Mkt Shr], [Baseline Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Baseline Val EI vs PP",
            "expression": "if(not isblank([Baseline Val % Mkt Shr PP]), divide([Baseline Val % Mkt Shr], [Baseline Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Domestic Unit EI vs LY",
            "expression": "if(not isblank([Domestic Unit % Mkt Shr LY]), divide([Domestic Unit % Mkt Shr], [Domestic Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Unit EI vs PP",
            "expression": "if(not isblank([Domestic Unit % Mkt Shr PP]), divide([Domestic Unit % Mkt Shr], [Domestic Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Domestic Val EI vs LY",
            "expression": "if(not isblank([Domestic Val % Mkt Shr LY]), divide([Domestic Val % Mkt Shr], [Domestic Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Domestic Val EI vs PP",
            "expression": "if(not isblank([Domestic Val % Mkt Shr PP]), divide([Domestic Val % Mkt Shr], [Domestic Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Unit EI vs LY",
            "expression": "if(not isblank([Export Unit % Mkt Shr LY]), divide([Export Unit % Mkt Shr], [Export Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Unit EI vs PP",
            "expression": "if(not isblank([Export Unit % Mkt Shr PP]), divide([Export Unit % Mkt Shr], [Export Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Unit)"
          },
          {
            "name": "Export Val EI vs LY",
            "expression": "if(not isblank([Export Val % Mkt Shr LY]), divide([Export Val % Mkt Shr], [Export Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Export Val EI vs PP",
            "expression": "if(not isblank([Export Val % Mkt Shr PP]), divide([Export Val % Mkt Shr], [Export Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Domestic / Export\\Current Period (Amount)"
          },
          {
            "name": "Grocery Unit EI vs LY",
            "expression": "if(not isblank([Grocery Unit % Mkt Shr LY]), divide([Grocery Unit % Mkt Shr], [Grocery Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Unit EI vs PP",
            "expression": "if(not isblank([Grocery Unit % Mkt Shr PP]), divide([Grocery Unit % Mkt Shr], [Grocery Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Grocery Val EI vs LY",
            "expression": "if(not isblank([Grocery Val % Mkt Shr LY]), divide([Grocery Val % Mkt Shr], [Grocery Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Grocery Val EI vs PP",
            "expression": "if(not isblank([Grocery Val % Mkt Shr PP]), divide([Grocery Val % Mkt Shr], [Grocery Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Incremental Unit EI vs LY",
            "expression": "if(not isblank([Incremental Unit % Mkt Shr LY]), divide([Incremental Unit % Mkt Shr], [Incremental Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Unit EI vs PP",
            "expression": "if(not isblank([Incremental Unit % Mkt Shr PP]), divide([Incremental Unit % Mkt Shr], [Incremental Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Incremental Val EI vs LY",
            "expression": "if(not isblank([Incremental Val % Mkt Shr LY]), divide([Incremental Val % Mkt Shr], [Incremental Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Incremental Val EI vs PP",
            "expression": "if(not isblank([Incremental Val % Mkt Shr PP]), divide([Incremental Val % Mkt Shr], [Incremental Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Unit EI vs LY",
            "expression": "if(not isblank([Lost Unit % Mkt Shr LY]), divide([Lost Unit % Mkt Shr], [Lost Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Unit EI vs PP",
            "expression": "if(not isblank([Lost Unit % Mkt Shr PP]), divide([Lost Unit % Mkt Shr], [Lost Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Unit)"
          },
          {
            "name": "Lost Val EI vs LY",
            "expression": "if(not isblank([Lost Val % Mkt Shr LY]), divide([Lost Val % Mkt Shr], [Lost Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Lost Val EI vs PP",
            "expression": "if(not isblank([Lost Val % Mkt Shr PP]), divide([Lost Val % Mkt Shr], [Lost Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Baseline /Incremental / Lost\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Unit EI vs LY",
            "expression": "if(not isblank([Non Promo Unit % Mkt Shr LY]), divide([Non Promo Unit % Mkt Shr], [Non Promo Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Unit EI vs PP",
            "expression": "if(not isblank([Non Promo Unit % Mkt Shr PP]), divide([Non Promo Unit % Mkt Shr], [Non Promo Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Non Promo Val EI vs LY",
            "expression": "if(not isblank([Non Promo Val % Mkt Shr LY]), divide([Non Promo Val % Mkt Shr], [Non Promo Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Non Promo Val EI vs PP",
            "expression": "if(not isblank([Non Promo Val % Mkt Shr PP]), divide([Non Promo Val % Mkt Shr], [Non Promo Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Online Unit EI vs LY",
            "expression": "if(not isblank([Online Unit % Mkt Shr LY]), divide([Online Unit % Mkt Shr], [Online Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Unit EI vs PP",
            "expression": "if(not isblank([Online Unit % Mkt Shr PP]), divide([Online Unit % Mkt Shr], [Online Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Unit)"
          },
          {
            "name": "Online Val EI vs LY",
            "expression": "if(not isblank([Online Val % Mkt Shr LY]), divide([Online Val % Mkt Shr], [Online Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Online Val EI vs PP",
            "expression": "if(not isblank([Online Val % Mkt Shr PP]), divide([Online Val % Mkt Shr], [Online Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Brick & Mortar / Online\\Current Period (Amount)"
          },
          {
            "name": "Pack # EI vs LY",
            "expression": "if(not isblank([Pack # % Mkt Shr LY]), divide([Pack # % Mkt Shr], [Pack # % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Pack # EI vs PP",
            "expression": "if(not isblank([Pack # % Mkt Shr PP]), divide([Pack # % Mkt Shr], [Pack # % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Pack Ranging Metrics\\Current Period"
          },
          {
            "name": "Promo Unit EI vs LY",
            "expression": "if(not isblank([Promo Unit % Mkt Shr LY]), divide([Promo Unit % Mkt Shr], [Promo Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Unit EI vs PP",
            "expression": "if(not isblank([Promo Unit % Mkt Shr PP]), divide([Promo Unit % Mkt Shr], [Promo Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Unit)"
          },
          {
            "name": "Promo Val EI vs LY",
            "expression": "if(not isblank([Promo Val % Mkt Shr LY]), divide([Promo Val % Mkt Shr], [Promo Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Promo Val EI vs PP",
            "expression": "if(not isblank([Promo Val % Mkt Shr PP]), divide([Promo Val % Mkt Shr], [Promo Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Promo / Non Promo\\Current Period (Amount)"
          },
          {
            "name": "Retail Unit EI vs LY",
            "expression": "if(not isblank([Retail Unit % Mkt Shr LY]), divide([Retail Unit % Mkt Shr], [Retail Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Unit EI vs PP",
            "expression": "if(not isblank([Retail Unit % Mkt Shr PP]), divide([Retail Unit % Mkt Shr], [Retail Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Unit)"
          },
          {
            "name": "Retail Val EI vs LY",
            "expression": "if(not isblank([Retail Val % Mkt Shr LY]), divide([Retail Val % Mkt Shr], [Retail Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Retail Val EI vs PP",
            "expression": "if(not isblank([Retail Val % Mkt Shr PP]), divide([Retail Val % Mkt Shr], [Retail Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Retail / Grocery\\Current Period (Amount)"
          },
          {
            "name": "Scanout Unit EI vs LY",
            "expression": "if(not isblank([Scanout Unit % Mkt Shr LY]), divide([Scanout Unit % Mkt Shr], [Scanout Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Unit EI vs PP",
            "expression": "if(not isblank([Scanout Unit % Mkt Shr PP]), divide([Scanout Unit % Mkt Shr], [Scanout Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Scanout Val EI vs LY",
            "expression": "if(not isblank([Scanout Val % Mkt Shr LY]), divide([Scanout Val % Mkt Shr], [Scanout Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Scanout Val EI vs PP",
            "expression": "if(not isblank([Scanout Val % Mkt Shr PP]), divide([Scanout Val % Mkt Shr], [Scanout Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Unit EI vs LY",
            "expression": "if(not isblank([Sellin Unit % Mkt Shr LY]), divide([Sellin Unit % Mkt Shr], [Sellin Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Unit EI vs PP",
            "expression": "if(not isblank([Sellin Unit % Mkt Shr PP]), divide([Sellin Unit % Mkt Shr], [Sellin Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Unit)"
          },
          {
            "name": "Sellin Val EI vs LY",
            "expression": "if(not isblank([Sellin Val % Mkt Shr LY]), divide([Sellin Val % Mkt Shr], [Sellin Val % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Sellin Val EI vs PP",
            "expression": "if(not isblank([Sellin Val % Mkt Shr PP]), divide([Sellin Val % Mkt Shr], [Sellin Val % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Scanout / Sellin\\Current Period (Amount)"
          },
          {
            "name": "Unit EI vs LY",
            "expression": "if(not isblank([Unit % Mkt Shr LY]), divide([Unit % Mkt Shr], [Unit % Mkt Shr LY]) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          },
          {
            "name": "Unit EI vs PP",
            "expression": "if(not isblank([Unit % Mkt Shr PP]), divide([Unit % Mkt Shr], [Unit % Mkt Shr PP]) * 100)",
            "formatString": "0",
            "displayFolder": "Base Metrics\\Current Period (Unit)"
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Fact_Store_Sales",
        "isHidden": true,
        "refreshPolicy": {
          "policyType": "basic",
          "rollingWindowGranularity": "month",
          "rollingWindowPeriods": 25,
          "incrementalGranularity": "month",
          "incrementalPeriods": 25,
          "sourceExpression": [
            "let",
            "    Source = Sql.Database(Server_Name, Database_Name),",
            "    dbo_Fact_Store_Sales = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Fact_Store_Sales\"]}[Data],",
            "    #\"Filtered Rows\" = Table.SelectRows(dbo_Fact_Store_Sales, each [period_id] >= fun_CDatetoInt(RangeStart) and [period_id] < fun_CDatetoInt(RangeEnd))",
            "in",
            "    #\"Filtered Rows\""
          ]
        },
        "columns": [
          {
            "name": "partition_key",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "partition_key",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "partition_key"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_outlet_id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "period_outlet_id",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_outlet_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "fcc",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "fcc",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "fcc"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "amount",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "amount",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "amount"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "unit",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "unit",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "unit"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "date_updated",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "date_updated",
            "formatString": "General Date",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeGeneralPattern\"><DateTimes><DateTime LCID=\"3081\" Group=\"GeneralDateTimeLong\" FormatString=\"G\" /></DateTimes></Format>"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "DateTime#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "date_updated"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "eid",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "eid",
            "formatString": "0",
            "summarizeBy": "sum",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "eid"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "period_id",
            "dataType": "int64",
            "isHidden": true,
            "isNullable": false,
            "sourceColumn": "period_id",
            "formatString": "0",
            "sourceProviderType": "int",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "period_id"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Fact_Store_Sales-f1c71814-23ba-4d9f-9956-3c16c17bb37d",
            "mode": "import",
            "queryGroup": "Fact Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Fact_Store_Sales = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Fact_Store_Sales\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(dbo_Fact_Store_Sales, each [period_id] >= fun_CDatetoInt(RangeStart) and [period_id] < fun_CDatetoInt(RangeEnd))",
                "in",
                "    #\"Filtered Rows\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Base ST B&M Unit Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST B&M Val Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Baseline Unit Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Baseline Val Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Domestic Unit Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Domestic Val Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Export Unit Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Export Val Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Grocery Unit Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Grocery Val Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Incremental Unit Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Incremental Val Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Lost Unit Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Lost Val Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Non Promo Unit Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Non Promo Val Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Online Unit Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Online Val Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Pack Count",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            DISTINCTCOUNT ( Fact_Store_Sales[fcc] ),",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )",
              "        )",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Promo Unit Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Promo Val Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Retail Unit Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Retail Val Sales",
            "expression": "BLANK ()",
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Scanout Unit Sales",
            "description": "is the total base scanout sales for the all selected filters or the context expressed in Unit value.",
            "expression": [
              "var source = \"Scanout\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base ST Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Scanout Val Sales",
            "description": "is the total base scanout sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "var source = \"Scanout\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base ST Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Sellin Unit Sales",
            "description": "is the total base sellin sales for the all selected filters or the context expressed in unit value.",
            "expression": [
              "VAR source = \"Sellin\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base ST Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Sellin Val Sales",
            "description": "is the total base sellin sales for the all selected filters or the context expressed in currency value.",
            "expression": [
              "VAR source = \"Sellin\"",
              "RETURN",
              "    CALCULATE (",
              "        [Base ST Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "            'Dim_Sellin_Scanout'[Sales Type] = source",
              "        )",
              "    )"
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Unit Sales",
            "description": "is the total base sales for the all selected filters or the context expressed in unit value. Calculated by: if(countrows('Fact_Store_Sales'), sum('Fact_Store_Sales'[amount]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            SUM (  'Fact_Store_Sales'[unit]  ) / 10,",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )",
              "        )",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "Base ST Val Sales",
            "description": "is the total base sales for the all selected filters or the context expressed in currency value. Calculated by: if(countrows('Fact_Store_Sales'), sum('Fact_Store_Sales'[unit]) / 10)",
            "expression": [
              "VAR source = [const_Selected_Source]",
              "var pds = values('Dim_Product'[FCC])",
              "var dates = values('Dim_Date'[period_id])",
              "RETURN",
              "        CALCULATE (",
              "            SUM (  'Fact_Store_Sales'[amount]  ) / 10,",
              "            FILTER (",
              "                ALL ( 'Dim_Sellin_Scanout'[Sales Type] ),",
              "                'Dim_Sellin_Scanout'[Sales Type] = source",
              "            ),",
              "            Filter(all('Dim_Product_Base'),",
              "            'Dim_Product_Base'[FCC] in pds",
              "            ),",
              "            Filter(all('Dim_Date_Base'),",
              "            'Dim_Date_Base'[period_id] in dates",
              "            )",
              "        )",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Base Metrics"
          },
          {
            "name": "ST Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST B&M Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST B&M Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST B&M Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST B&M Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Baseline Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Baseline Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Baseline Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Baseline Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Domestic Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Domestic Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Domestic Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Domestic Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Export Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Export Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Export Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Export Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Grocery Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Grocery Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Grocery Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Grocery Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Incremental Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Incremental Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Incremental Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Incremental Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Lost Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Lost Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Lost Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Lost Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Non Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Non Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Non Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Non Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Online Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Online Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Online Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Online Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Pack Count",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Pack Count],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Pack Count],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Retail Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Retail Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Retail Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Retail Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Scanout Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Scanout Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Scanout Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Scanout Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Unit Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Sellin Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Sellin Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Val Sales",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR cps =",
              "    VALUES ( 'Dim_Date'[Date Code] )",
              "VAR f_date = [f_DimDate]",
              "VAR sales =",
              "    CALCULATE (",
              "        [Base ST Sellin Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        )",
              "    )",
              "VAR sales_all =",
              "    CALCULATE (",
              "        [Base ST Sellin Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] IN cps",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, sales_all, sales )"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST B&M Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST B&M Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST B&M Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST B&M Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST B&M Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST B&M Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST B&M Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST B&M Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST B&M Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Baseline Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Baseline Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Baseline Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Baseline Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Baseline Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Baseline Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Baseline Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Baseline Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Baseline Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Baseline Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Domestic Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Domestic Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Domestic Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Domestic Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Domestic Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Domestic Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Domestic Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Domestic Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Domestic Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Domestic Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Export Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Export Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Export Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Export Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Export Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Export Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Export Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Export Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Export Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Export Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Grocery Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Grocery Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Grocery Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Grocery Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Grocery Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Grocery Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Grocery Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Grocery Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Grocery Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Grocery Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Incremental Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Incremental Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Incremental Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Incremental Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Incremental Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Incremental Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Incremental Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Incremental Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Incremental Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Incremental Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Lost Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Lost Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Lost Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Lost Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Lost Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Lost Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Lost Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Lost Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Lost Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Lost Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Non Promo Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Non Promo Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Non Promo Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Non Promo Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Non Promo Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Non Promo Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Non Promo Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Non Promo Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Non Promo Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Non Promo Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Online Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Online Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Online Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Online Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Online Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Online Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Online Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Online Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Online Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Online Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Pack Count All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Pack Count] ),",
              "        CALCULATE (",
              "            [Base ST Pack Count],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Pack Count] ),",
              "        CALCULATE (",
              "            [Base ST Pack Count],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Promo Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Promo Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Promo Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Promo Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Promo Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Promo Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Promo Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Promo Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Promo Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Promo Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Retail Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Retail Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Retail Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Retail Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Retail Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Retail Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Retail Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Retail Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Retail Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Retail Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Scanout Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Scanout Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Scanout Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Scanout Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Scanout Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Scanout Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Scanout Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Scanout Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Scanout Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Scanout Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Sellin Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Sellin Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Sellin Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Sellin Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Sellin Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Sellin Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Sellin Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Sellin Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Sellin Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Sellin Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Unit Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Unit Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Unit Sales] ),",
              "        CALCULATE (",
              "            [Base ST Unit Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Val Sales All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_currrent =",
              "    IF (",
              "        NOT ISBLANK ( [ST Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Val Sales],",
              "            FILTER (",
              "                ALL ( 'Dim_Date' ),",
              "                'Dim_Date'[Period Type] = pt",
              "                    && 'Dim_Date'[Date Code] = cp",
              "            ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "VAR val_date_select =",
              "    IF (",
              "        NOT ISBLANK ( [ST Val Sales] ),",
              "        CALCULATE (",
              "            [Base ST Val Sales],",
              "            FILTER ( ALL ( 'Dim_Date'[Period Type] ), 'Dim_Date'[Period Type] = pt ),",
              "            ALLSELECTED ()",
              "        )",
              "    )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST B&M Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST B&M Unit Sales],",
              "    CALCULATE (",
              "        [ST B&M Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST B&M Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST B&M Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST B&M Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST B&M Unit Sales],",
              "    CALCULATE (",
              "        [ST B&M Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST B&M Unit Prod Sales], [ST B&M Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST B&M Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST B&M Val Sales],",
              "    CALCULATE (",
              "        [ST B&M Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST B&M Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST B&M Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST B&M Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST B&M Val Sales],",
              "    CALCULATE (",
              "        [ST B&M Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Val % Mkt Shr",
            "expression": "DIVIDE ( [ST B&M Val Prod Sales], [ST B&M Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Baseline Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Baseline Unit Sales],",
              "    CALCULATE (",
              "        [ST Baseline Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Baseline Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Baseline Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Baseline Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Baseline Unit Sales],",
              "    CALCULATE (",
              "        [ST Baseline Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Baseline Unit Prod Sales], [ST Baseline Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Baseline Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Baseline Val Sales],",
              "    CALCULATE (",
              "        [ST Baseline Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Baseline Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Baseline Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Baseline Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Baseline Val Sales],",
              "    CALCULATE (",
              "        [ST Baseline Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Baseline Val Prod Sales], [ST Baseline Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Domestic Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Domestic Unit Sales],",
              "    CALCULATE (",
              "        [ST Domestic Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Domestic Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Domestic Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Domestic Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Domestic Unit Sales],",
              "    CALCULATE (",
              "        [ST Domestic Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Domestic Unit Prod Sales], [ST Domestic Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Domestic Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Domestic Val Sales],",
              "    CALCULATE (",
              "        [ST Domestic Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Domestic Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Domestic Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Domestic Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Domestic Val Sales],",
              "    CALCULATE (",
              "        [ST Domestic Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Domestic Val Prod Sales], [ST Domestic Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Export Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Export Unit Sales],",
              "    CALCULATE (",
              "        [ST Export Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Export Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Export Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Export Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              "    ",
              "   "
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Export Unit Sales],",
              "    CALCULATE (",
              "        [ST Export Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Export Unit Prod Sales], [ST Export Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Export Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Export Val Sales],",
              "    CALCULATE (",
              "        [ST Export Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Export Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Export Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Export Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              "    ",
              "   "
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Export Val Sales],",
              "    CALCULATE (",
              "        [ST Export Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Export Val Prod Sales], [ST Export Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Grocery Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Grocery Unit Sales],",
              "    CALCULATE (",
              "        [ST Grocery Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Grocery Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Grocery Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Grocery Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Grocery Unit Sales],",
              "    CALCULATE (",
              "        [ST Grocery Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Grocery Unit Prod Sales], [ST Grocery Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Grocery Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Grocery Val Sales],",
              "    CALCULATE (",
              "        [ST Grocery Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Grocery Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Grocery Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Grocery Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Grocery Val Sales],",
              "    CALCULATE (",
              "        [ST Grocery Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Grocery Val Prod Sales], [ST Grocery Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Incremental Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Incremental Unit Sales],",
              "    CALCULATE (",
              "        [ST Incremental Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Incremental Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Incremental Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Incremental Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Incremental Unit Sales],",
              "    CALCULATE (",
              "        [ST Incremental Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Incremental Unit Prod Sales], [ST Incremental Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Incremental Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Incremental Val Sales],",
              "    CALCULATE (",
              "        [ST Incremental Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Incremental Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Incremental Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Incremental Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Incremental Val Sales],",
              "    CALCULATE (",
              "        [ST Incremental Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Incremental Val Prod Sales], [ST Incremental Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Lost Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Lost Unit Sales],",
              "    CALCULATE (",
              "        [ST Lost Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Lost Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Lost Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Lost Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Lost Unit Sales],",
              "    CALCULATE (",
              "        [ST Lost Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Lost Unit Prod Sales], [ST Lost Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Lost Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Lost Val Sales],",
              "    CALCULATE (",
              "        [ST Lost Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Lost Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Lost Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Lost Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Lost Val Sales],",
              "    CALCULATE (",
              "        [ST Lost Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Lost Val Prod Sales], [ST Lost Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Non Promo Unit Prod Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Non Promo Unit Sales],",
              "    CALCULATE (",
              "        [ST Non Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Non Promo Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Non Promo Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Non Promo Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Non Promo Unit Sales],",
              "    CALCULATE (",
              "        [ST Non Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Non Promo Unit Prod Sales], [ST Non Promo Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Non Promo Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Non Promo Val Sales],",
              "    CALCULATE (",
              "        [ST Non Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Non Promo Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Non Promo Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Non Promo Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Non Promo Val Sales],",
              "    CALCULATE (",
              "        [ST Non Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Non Promo Val Prod Sales], [ST Non Promo Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Online Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Online Unit Sales],",
              "    CALCULATE (",
              "        [ST Online Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Online Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Online Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Online Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Online Unit Sales],",
              "    CALCULATE (",
              "        [ST Online Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Online Unit Prod Sales], [ST Online Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Online Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Online Val Sales],",
              "    CALCULATE (",
              "        [ST Online Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Online Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Online Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Online Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Online Val Sales],",
              "    CALCULATE (",
              "        [ST Online Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Online Val Prod Sales], [ST Online Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Pack Count Prod",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Pack Count],",
              "    CALCULATE (",
              "        [ST Pack Count],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Pack Count Mkt",
            "expression": [
              "VAR p_market =",
              "    CALCULATE (",
              "        [ST Pack Count],",
              "        ALL ( 'Dim_Product'[Product Ownership] ),",
              "        ALLSELECTED ( 'Dim_Product'[APN] ),",
              "        ALLSELECTED ( 'Dim_Product'[Brand] ),",
              "        ALLSELECTED ( 'Dim_Product'[Manufacturer] ),",
              "        ALLSELECTED ( 'Dim_Product'[Pack Long Name] ),",
              "        ALLSELECTED ( 'Dim_Product'[PFC] ),",
              "        ALLSELECTED ( 'Dim_Product'[Sub Brand] )",
              "    )",
              "VAR owner_market =",
              "    CALCULATE ( [ST Pack Count], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    IF ( [f_SKUSelected], p_market, owner_market )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Pack Count Comp",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Pack Count],",
              "    CALCULATE (",
              "        [ST Pack Count],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Pack Count % Mkt Shr",
            "expression": "DIVIDE ( [ST Pack Count Prod], [ST Pack Count Mkt] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Promo Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Promo Unit Sales],",
              "    CALCULATE (",
              "        [ST Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Promo Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Promo Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Promo Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Promo Unit Sales],",
              "    CALCULATE (",
              "        [ST Promo Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Promo Unit Prod Sales], [ST Promo Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Promo Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Promo Val Sales],",
              "    CALCULATE (",
              "        [ST Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Promo Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Promo Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Promo Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Promo Val Sales],",
              "    CALCULATE (",
              "        [ST Promo Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Promo Val Prod Sales], [ST Promo Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Retail Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Retail Unit Sales],",
              "    CALCULATE (",
              "        [ST Retail Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Retail Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Retail Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Retail Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Retail Unit Sales],",
              "    CALCULATE (",
              "        [ST Retail Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Retail Unit Prod Sales], [ST Retail Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Retail Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Retail Val Sales],",
              "    CALCULATE (",
              "        [ST Retail Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Retail Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Retail Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Retail Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Retail Val Sales],",
              "    CALCULATE (",
              "        [ST Retail Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Retail Val Prod Sales], [ST Retail Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Scanout Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Scanout Unit Sales],",
              "    CALCULATE (",
              "        [ST Scanout Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Scanout Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Scanout Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Scanout Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Scanout Unit Sales],",
              "    CALCULATE (",
              "        [ST Scanout Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Scanout Unit Prod Sales], [ST Scanout Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Scanout Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Scanout Val Sales],",
              "    CALCULATE (",
              "        [ST Scanout Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Scanout Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Scanout Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Scanout Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Scanout Val Sales],",
              "    CALCULATE (",
              "        [ST Scanout Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Scanout Val Prod Sales], [ST Scanout Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Sellin Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Sellin Unit Sales],",
              "    CALCULATE (",
              "        [ST Sellin Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Sellin Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Sellin Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Sellin Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Sellin Unit Sales],",
              "    CALCULATE (",
              "        [ST Sellin Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Sellin Unit Prod Sales], [ST Sellin Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Sellin Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Sellin Val Sales],",
              "    CALCULATE (",
              "        [ST Sellin Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Sellin Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Sellin Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Sellin Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Sellin Val Sales],",
              "    CALCULATE (",
              "        [ST Sellin Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Sellin Val Prod Sales], [ST Sellin Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Unit Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Unit Sales],",
              "    CALCULATE (",
              "        [ST Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Unit Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Unit Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Unit Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Unit Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Unit Sales],",
              "    CALCULATE (",
              "        [ST Unit Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Unit % Mkt Shr",
            "expression": "DIVIDE ( [ST Unit Prod Sales], [ST Unit Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Val Prod Sales",
            "expression": [
              "IF (",
              "    or([f_SKUSelected], [f_ProductOwnership]),",
              "    [ST Val Sales],",
              "    CALCULATE (",
              "        [ST Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Own Products\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Val Mkt Sales",
            "expression": [
              "VAR cats =",
              "    VALUES ( 'Dim_Product'[Category] )",
              "VAR c_market =",
              "    CALCULATE (",
              "        [ST Val Sales],",
              "        FILTER ( ALL ( 'Dim_Product' ), 'Dim_Product'[Category] IN cats )",
              "    )",
              "var p_market = CALCULATE ( [ST Val Sales], ALL ( 'Dim_Product'[Product Ownership] ), allselected('Dim_Product'[APN]), allselected('Dim_Product'[Brand]),",
              "                           allselected('Dim_Product'[Manufacturer]), allselected('Dim_Product'[Pack Long Name]), allselected('Dim_Product'[PFC]),",
              "                           allselected('Dim_Product'[Sub Brand]))",
              "var owner_market = CALCULATE ( [ST Val Sales], ALL ( 'Dim_Product'[Product Ownership] ) )",
              "VAR finalval =",
              "    //IF ( [f_SKUSelected], p_market, owner_market )",
              "    SWITCH (",
              "        TRUE,",
              "        [ff_CategorySelected], c_market,",
              "        [f_SKUSelected], p_market,",
              "        owner_market",
              "    )",
              "RETURN",
              "    finalval",
              ""
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Val Comp Sales",
            "expression": [
              "IF (",
              "    [f_SKUSelected],",
              "    [ST Val Sales],",
              "    CALCULATE (",
              "        [ST Val Sales],",
              "        FILTER (",
              "            ALL ( 'Dim_Product'[Product Ownership] ),",
              "            'Dim_Product'[Product Ownership] = \"Competitor\"",
              "        )",
              "    )",
              ")"
            ],
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Val % Mkt Shr",
            "expression": "DIVIDE ( [ST Val Prod Sales], [ST Val Mkt Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST B&M Unit Comp Sales All Selected",
            "expression": "calculate([ST B&M Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST B&M Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST B&M Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST B&M Unit Prod Sales All Selected",
            "expression": "calculate([ST B&M Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST B&M Val Comp Sales All Selected",
            "expression": "calculate([ST B&M Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST B&M Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST B&M Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST B&M Val Prod Sales All Selected",
            "expression": "calculate([ST B&M Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Baseline Unit Comp Sales All Selected",
            "expression": "calculate([ST Baseline Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Baseline Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Baseline Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Baseline Unit Prod Sales All Selected",
            "expression": "calculate([ST Baseline Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Baseline Val Comp Sales All Selected",
            "expression": "calculate([ST Baseline Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Baseline Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Baseline Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Baseline Val Prod Sales All Selected",
            "expression": "calculate([ST Baseline Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Domestic Unit Comp Sales All Selected",
            "expression": "calculate([ST Domestic Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Domestic Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Domestic Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Domestic Unit Prod Sales All Selected",
            "expression": "calculate([ST Domestic Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Domestic Val Comp Sales All Selected",
            "expression": "calculate([ST Domestic Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Domestic Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Domestic Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Domestic Val Prod Sales All Selected",
            "expression": "calculate([ST Domestic Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Export Unit Comp Sales All Selected",
            "expression": "calculate([ST Export Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Export Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Export Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Export Unit Prod Sales All Selected",
            "expression": "calculate([ST Export Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Export Val Comp Sales All Selected",
            "expression": "calculate([ST Export Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Export Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Export Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Export Val Prod Sales All Selected",
            "expression": "calculate([ST Export Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Grocery Unit Comp Sales All Selected",
            "expression": "calculate([ST Grocery Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Grocery Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Grocery Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Grocery Unit Prod Sales All Selected",
            "expression": "calculate([ST Grocery Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Grocery Val Comp Sales All Selected",
            "expression": "calculate([ST Grocery Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Grocery Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Grocery Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Grocery Val Prod Sales All Selected",
            "expression": "calculate([ST Grocery Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Incremental Unit Comp Sales All Selected",
            "expression": "calculate([ST Incremental Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Incremental Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Incremental Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Incremental Unit Prod Sales All Selected",
            "expression": "calculate([ST Incremental Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Incremental Val Comp Sales All Selected",
            "expression": "calculate([ST Incremental Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Incremental Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Incremental Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Incremental Val Prod Sales All Selected",
            "expression": "calculate([ST Incremental Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Lost Unit Comp Sales All Selected",
            "expression": "calculate([ST Lost Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Lost Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Lost Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Lost Unit Prod Sales All Selected",
            "expression": "calculate([ST Lost Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Lost Val Comp Sales All Selected",
            "expression": "calculate([ST Lost Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Lost Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Lost Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Lost Val Prod Sales All Selected",
            "expression": "calculate([ST Lost Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Non Promo Unit Comp Sales All Selected",
            "expression": "calculate([ST Non Promo Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Non Promo Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Non Promo Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Non Promo Unit Prod Sales All Selected",
            "expression": "calculate([ST Non Promo Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Non Promo Val Comp Sales All Selected",
            "expression": "calculate([ST Non Promo Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Non Promo Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Non Promo Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Non Promo Val Prod Sales All Selected",
            "expression": "calculate([ST Non Promo Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Online Unit Comp Sales All Selected",
            "expression": "calculate([ST Online Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Online Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Online Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Online Unit Prod Sales All Selected",
            "expression": "calculate([ST Online Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Online Val Comp Sales All Selected",
            "expression": "calculate([ST Online Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Online Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Online Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Online Val Prod Sales All Selected",
            "expression": "calculate([ST Online Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Pack Count Comp All Selected",
            "expression": "calculate([ST Pack Count All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Pack Count Mkt All Selected",
            "expression": "CALCULATE ( [ST Pack Count All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Pack Count Prod All Selected",
            "expression": "calculate([ST Pack Count All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Promo Unit Comp Sales All Selected",
            "expression": "calculate([ST Promo Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Promo Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Promo Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Promo Unit Prod Sales All Selected",
            "expression": "calculate([ST Promo Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Promo Val Comp Sales All Selected",
            "expression": "calculate([ST Promo Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Promo Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Promo Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Promo Val Prod Sales All Selected",
            "expression": "calculate([ST Promo Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Retail Unit Comp Sales All Selected",
            "expression": "calculate([ST Retail Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Retail Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Retail Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Retail Unit Prod Sales All Selected",
            "expression": "calculate([ST Retail Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Retail Val Comp Sales All Selected",
            "expression": "calculate([ST Retail Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Retail Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Retail Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Retail Val Prod Sales All Selected",
            "expression": "calculate([ST Retail Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Scanout Unit Comp Sales All Selected",
            "expression": "calculate([ST Scanout Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Scanout Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Scanout Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Scanout Unit Prod Sales All Selected",
            "expression": "calculate([ST Scanout Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Scanout Val Comp Sales All Selected",
            "expression": "calculate([ST Scanout Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Scanout Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Scanout Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Scanout Val Prod Sales All Selected",
            "expression": "calculate([ST Scanout Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Sellin Unit Comp Sales All Selected",
            "expression": "calculate([ST Sellin Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Sellin Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Sellin Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Sellin Unit Prod Sales All Selected",
            "expression": "calculate([ST Sellin Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Sellin Val Comp Sales All Selected",
            "expression": "calculate([ST Sellin Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Sellin Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Sellin Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Sellin Val Prod Sales All Selected",
            "expression": "calculate([ST Sellin Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Unit Comp Sales All Selected",
            "expression": "calculate([ST Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Unit Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Unit Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Unit Prod Sales All Selected",
            "expression": "calculate([ST Unit Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Val Comp Sales All Selected",
            "expression": "calculate([ST Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Competitor\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Val Mkt Sales All Selected",
            "expression": "CALCULATE ( [ST Val Sales All Selected], ALL ( 'Dim_Product'[Product Ownership]) )",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Val Prod Sales All Selected",
            "expression": "calculate([ST Val Sales All Selected], filter(all('Dim_Product'[Product Ownership]), 'Dim_Product'[Product Ownership] = \"Own Products\"))",
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST SO/SI Unit Sales Ratio",
            "expression": "DIVIDE ( [ST Scanout Unit Sales], [ST Sellin Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST SO/SI Val Sales Ratio",
            "expression": "DIVIDE ( [ST Scanout Val Sales], [ST Sellin Val Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Ret/Gr Unit Sales Ratio",
            "expression": "DIVIDE ( [ST Retail Unit Sales], [ST Grocery Unit Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Ret/Gr Val Sales Ratio",
            "expression": "DIVIDE ( [ST Retail Val Sales], [ST Grocery Val Sales] )",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Unit Comp Sales Contrib %",
            "expression": "divide([ST B&M Unit Comp Sales], [ST B&M Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Unit Mkt Sales Contrib %",
            "expression": "divide([ST B&M Unit Mkt Sales], [ST B&M Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Unit Prod Sales Contrib %",
            "expression": "divide([ST B&M Unit Prod Sales], [ST B&M Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Unit Sales Contrib %",
            "expression": "divide([ST B&M Unit Sales], [ST B&M Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Val Comp Sales Contrib %",
            "expression": "divide([ST B&M Val Comp Sales], [ST B&M Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Val Mkt Sales Contrib %",
            "expression": "divide([ST B&M Val Mkt Sales], [ST B&M Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Val Prod Sales Contrib %",
            "expression": "divide([ST B&M Val Prod Sales], [ST B&M Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST B&M Val Sales Contrib %",
            "expression": "divide([ST B&M Val Sales], [ST B&M Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Unit Comp Sales Contrib %",
            "expression": "divide([ST Baseline Unit Comp Sales], [ST Baseline Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Unit Mkt Sales Contrib %",
            "expression": "divide([ST Baseline Unit Mkt Sales], [ST Baseline Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Unit Prod Sales Contrib %",
            "expression": "divide([ST Baseline Unit Prod Sales], [ST Baseline Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Unit Sales Contrib %",
            "expression": "divide([ST Baseline Unit Sales], [ST Baseline Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Val Comp Sales Contrib %",
            "expression": "divide([ST Baseline Val Comp Sales], [ST Baseline Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Val Mkt Sales Contrib %",
            "expression": "divide([ST Baseline Val Mkt Sales], [ST Baseline Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Val Prod Sales Contrib %",
            "expression": "divide([ST Baseline Val Prod Sales], [ST Baseline Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Baseline Val Sales Contrib %",
            "expression": "divide([ST Baseline Val Sales], [ST Baseline Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Unit Comp Sales Contrib %",
            "expression": "divide([ST Domestic Unit Comp Sales], [ST Domestic Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Unit Mkt Sales Contrib %",
            "expression": "divide([ST Domestic Unit Mkt Sales], [ST Domestic Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Unit Prod Sales Contrib %",
            "expression": "divide([ST Domestic Unit Prod Sales], [ST Domestic Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Unit Sales Contrib %",
            "expression": "divide([ST Domestic Unit Sales], [ST Domestic Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Val Comp Sales Contrib %",
            "expression": "divide([ST Domestic Val Comp Sales], [ST Domestic Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Val Mkt Sales Contrib %",
            "expression": "divide([ST Domestic Val Mkt Sales], [ST Domestic Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Val Prod Sales Contrib %",
            "expression": "divide([ST Domestic Val Prod Sales], [ST Domestic Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Domestic Val Sales Contrib %",
            "expression": "divide([ST Domestic Val Sales], [ST Domestic Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Unit Comp Sales Contrib %",
            "expression": "divide([ST Export Unit Comp Sales], [ST Export Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Unit Mkt Sales Contrib %",
            "expression": "divide([ST Export Unit Mkt Sales], [ST Export Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Unit Prod Sales Contrib %",
            "expression": "divide([ST Export Unit Prod Sales], [ST Export Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Unit Sales Contrib %",
            "expression": "divide([ST Export Unit Sales], [ST Export Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Val Comp Sales Contrib %",
            "expression": "divide([ST Export Val Comp Sales], [ST Export Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Val Mkt Sales Contrib %",
            "expression": "divide([ST Export Val Mkt Sales], [ST Export Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Val Prod Sales Contrib %",
            "expression": "divide([ST Export Val Prod Sales], [ST Export Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Export Val Sales Contrib %",
            "expression": "divide([ST Export Val Sales], [ST Export Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Unit Comp Sales Contrib %",
            "expression": "divide([ST Grocery Unit Comp Sales], [ST Grocery Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Unit Mkt Sales Contrib %",
            "expression": "divide([ST Grocery Unit Mkt Sales], [ST Grocery Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Unit Prod Sales Contrib %",
            "expression": "divide([ST Grocery Unit Prod Sales], [ST Grocery Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Unit Sales Contrib %",
            "expression": "divide([ST Grocery Unit Sales], [ST Grocery Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Val Comp Sales Contrib %",
            "expression": "divide([ST Grocery Val Comp Sales], [ST Grocery Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Val Mkt Sales Contrib %",
            "expression": "divide([ST Grocery Val Mkt Sales], [ST Grocery Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Val Prod Sales Contrib %",
            "expression": "divide([ST Grocery Val Prod Sales], [ST Grocery Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Grocery Val Sales Contrib %",
            "expression": "divide([ST Grocery Val Sales], [ST Grocery Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Unit Comp Sales Contrib %",
            "expression": "divide([ST Incremental Unit Comp Sales], [ST Incremental Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Unit Mkt Sales Contrib %",
            "expression": "divide([ST Incremental Unit Mkt Sales], [ST Incremental Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Unit Prod Sales Contrib %",
            "expression": "divide([ST Incremental Unit Prod Sales], [ST Incremental Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Unit Sales Contrib %",
            "expression": "divide([ST Incremental Unit Sales], [ST Incremental Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Val Comp Sales Contrib %",
            "expression": "divide([ST Incremental Val Comp Sales], [ST Incremental Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Val Mkt Sales Contrib %",
            "expression": "divide([ST Incremental Val Mkt Sales], [ST Incremental Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Val Prod Sales Contrib %",
            "expression": "divide([ST Incremental Val Prod Sales], [ST Incremental Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Incremental Val Sales Contrib %",
            "expression": "divide([ST Incremental Val Sales], [ST Incremental Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Unit Comp Sales Contrib %",
            "expression": "divide([ST Lost Unit Comp Sales], [ST Lost Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Unit Mkt Sales Contrib %",
            "expression": "divide([ST Lost Unit Mkt Sales], [ST Lost Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Unit Prod Sales Contrib %",
            "expression": "divide([ST Lost Unit Prod Sales], [ST Lost Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Unit Sales Contrib %",
            "expression": "divide([ST Lost Unit Sales], [ST Lost Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Val Comp Sales Contrib %",
            "expression": "divide([ST Lost Val Comp Sales], [ST Lost Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Val Mkt Sales Contrib %",
            "expression": "divide([ST Lost Val Mkt Sales], [ST Lost Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Val Prod Sales Contrib %",
            "expression": "divide([ST Lost Val Prod Sales], [ST Lost Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Lost Val Sales Contrib %",
            "expression": "divide([ST Lost Val Sales], [ST Lost Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Unit Comp Sales Contrib %",
            "expression": "divide([ST Non Promo Unit Comp Sales], [ST Non Promo Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Unit Mkt Sales Contrib %",
            "expression": "divide([ST Non Promo Unit Mkt Sales], [ST Non Promo Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Unit Prod Sales Contrib %",
            "expression": "divide([ST Non Promo Unit Prod Sales], [ST Non Promo Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Unit Sales Contrib %",
            "expression": "divide([ST Non Promo Unit Sales], [ST Non Promo Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Val Comp Sales Contrib %",
            "expression": "divide([ST Non Promo Val Comp Sales], [ST Non Promo Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Val Mkt Sales Contrib %",
            "expression": "divide([ST Non Promo Val Mkt Sales], [ST Non Promo Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Val Prod Sales Contrib %",
            "expression": "divide([ST Non Promo Val Prod Sales], [ST Non Promo Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Non Promo Val Sales Contrib %",
            "expression": "divide([ST Non Promo Val Sales], [ST Non Promo Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Unit Comp Sales Contrib %",
            "expression": "divide([ST Online Unit Comp Sales], [ST Online Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Unit Mkt Sales Contrib %",
            "expression": "divide([ST Online Unit Mkt Sales], [ST Online Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Unit Prod Sales Contrib %",
            "expression": "divide([ST Online Unit Prod Sales], [ST Online Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Unit Sales Contrib %",
            "expression": "divide([ST Online Unit Sales], [ST Online Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Val Comp Sales Contrib %",
            "expression": "divide([ST Online Val Comp Sales], [ST Online Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Val Mkt Sales Contrib %",
            "expression": "divide([ST Online Val Mkt Sales], [ST Online Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Val Prod Sales Contrib %",
            "expression": "divide([ST Online Val Prod Sales], [ST Online Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Online Val Sales Contrib %",
            "expression": "divide([ST Online Val Sales], [ST Online Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Pack Count Contrib %",
            "expression": "divide([ST Pack Count], [ST Pack Count All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Pack Count Comp Contrib %",
            "expression": "divide([ST Pack Count Comp], [ST Pack Count Comp All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Pack Count Mkt Contrib %",
            "expression": "divide([ST Pack Count Mkt], [ST Pack Count Mkt All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Pack Count Prod Contrib %",
            "expression": "divide([ST Pack Count Prod], [ST Pack Count Prod All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Unit Comp Sales Contrib %",
            "expression": "divide([ST Promo Unit Comp Sales], [ST Promo Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Unit Mkt Sales Contrib %",
            "expression": "divide([ST Promo Unit Mkt Sales], [ST Promo Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Unit Prod Sales Contrib %",
            "expression": "divide([ST Promo Unit Prod Sales], [ST Promo Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Unit Sales Contrib %",
            "expression": "divide([ST Promo Unit Sales], [ST Promo Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Val Comp Sales Contrib %",
            "expression": "divide([ST Promo Val Comp Sales], [ST Promo Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Val Mkt Sales Contrib %",
            "expression": "divide([ST Promo Val Mkt Sales], [ST Promo Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Val Prod Sales Contrib %",
            "expression": "divide([ST Promo Val Prod Sales], [ST Promo Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Promo Val Sales Contrib %",
            "expression": "divide([ST Promo Val Sales], [ST Promo Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Unit Comp Sales Contrib %",
            "expression": "divide([ST Retail Unit Comp Sales], [ST Retail Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Unit Mkt Sales Contrib %",
            "expression": "divide([ST Retail Unit Mkt Sales], [ST Retail Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Unit Prod Sales Contrib %",
            "expression": "divide([ST Retail Unit Prod Sales], [ST Retail Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Unit Sales Contrib %",
            "expression": "divide([ST Retail Unit Sales], [ST Retail Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Val Comp Sales Contrib %",
            "expression": "divide([ST Retail Val Comp Sales], [ST Retail Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Val Mkt Sales Contrib %",
            "expression": "divide([ST Retail Val Mkt Sales], [ST Retail Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Val Prod Sales Contrib %",
            "expression": "divide([ST Retail Val Prod Sales], [ST Retail Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Retail Val Sales Contrib %",
            "expression": "divide([ST Retail Val Sales], [ST Retail Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Unit Comp Sales Contrib %",
            "expression": "divide([ST Scanout Unit Comp Sales], [ST Scanout Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Unit Mkt Sales Contrib %",
            "expression": "divide([ST Scanout Unit Mkt Sales], [ST Scanout Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Unit Prod Sales Contrib %",
            "expression": "divide([ST Scanout Unit Prod Sales], [ST Scanout Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Unit Sales Contrib %",
            "expression": "divide([ST Scanout Unit Sales], [ST Scanout Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Val Comp Sales Contrib %",
            "expression": "divide([ST Scanout Val Comp Sales], [ST Scanout Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Val Mkt Sales Contrib %",
            "expression": "divide([ST Scanout Val Mkt Sales], [ST Scanout Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Val Prod Sales Contrib %",
            "expression": "divide([ST Scanout Val Prod Sales], [ST Scanout Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Scanout Val Sales Contrib %",
            "expression": "divide([ST Scanout Val Sales], [ST Scanout Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Unit Comp Sales Contrib %",
            "expression": "divide([ST Sellin Unit Comp Sales], [ST Sellin Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Unit Mkt Sales Contrib %",
            "expression": "divide([ST Sellin Unit Mkt Sales], [ST Sellin Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Unit Prod Sales Contrib %",
            "expression": "divide([ST Sellin Unit Prod Sales], [ST Sellin Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Unit Sales Contrib %",
            "expression": "divide([ST Sellin Unit Sales], [ST Sellin Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Val Comp Sales Contrib %",
            "expression": "divide([ST Sellin Val Comp Sales], [ST Sellin Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Val Mkt Sales Contrib %",
            "expression": "divide([ST Sellin Val Mkt Sales], [ST Sellin Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Val Prod Sales Contrib %",
            "expression": "divide([ST Sellin Val Prod Sales], [ST Sellin Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Sellin Val Sales Contrib %",
            "expression": "divide([ST Sellin Val Sales], [ST Sellin Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Unit Comp Sales Contrib %",
            "expression": "divide([ST Unit Comp Sales], [ST Unit Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Unit Mkt Sales Contrib %",
            "expression": "divide([ST Unit Mkt Sales], [ST Unit Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Unit Prod Sales Contrib %",
            "expression": "divide([ST Unit Prod Sales], [ST Unit Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Unit Sales Contrib %",
            "expression": "divide([ST Unit Sales], [ST Unit Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Val Comp Sales Contrib %",
            "expression": "divide([ST Val Comp Sales], [ST Val Comp Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Val Mkt Sales Contrib %",
            "expression": "divide([ST Val Mkt Sales], [ST Val Mkt Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Val Prod Sales Contrib %",
            "expression": "divide([ST Val Prod Sales], [ST Val Prod Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Val Sales Contrib %",
            "expression": "divide([ST Val Sales], [ST Val Sales All Selected])",
            "isHidden": true,
            "displayFolder": "Current Period Metrics"
          },
          {
            "name": "ST Val Sales LY",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var lymat = [const_Selected_Last_MAT_Year]",
              "var seqmat = [const_Selected_Period_Seq_Mat]",
              "var lyvalue = calculate([ST Val Sales], filter(all('Dim_Date'), 'Dim_Date'[MAT Year] = lymat && 'Dim_Date'[period_seq_mat] = seqmat && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Last Year Metrics"
          },
          {
            "name": "ST Val Sales PP",
            "expression": [
              "var pt = [const_Selected_Period_Type]",
              "var seq = [const_Selected_Period_Seq] + 1",
              "var lyvalue = calculate([ST Val Sales], filter(all('Dim_Date'), 'Dim_Date'[period_seq] = seq && 'Dim_Date'[Period Type] = pt))",
              "return lyvalue"
            ],
            "isHidden": true,
            "displayFolder": "Previous Period Metrics"
          },
          {
            "name": "ST B&M Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST B&M Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST B&M Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST B&M Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST B&M Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST B&M Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST B&M Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST B&M Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST B&M Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST B&M Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Baseline Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Baseline Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Baseline Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Baseline Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Baseline Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Baseline Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Baseline Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Baseline Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Baseline Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Baseline Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Domestic Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Domestic Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Domestic Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Domestic Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Domestic Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Domestic Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Domestic Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Domestic Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Domestic Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Domestic Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Export Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Export Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Export Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Export Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Export Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Export Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Export Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Export Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Export Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Export Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Grocery Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Grocery Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Grocery Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Grocery Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Grocery Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Grocery Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Grocery Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Grocery Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Grocery Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Grocery Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Incremental Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Incremental Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Incremental Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Incremental Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Incremental Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Incremental Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Incremental Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Incremental Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Incremental Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Incremental Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Lost Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Lost Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Lost Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Lost Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Lost Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Lost Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Lost Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Lost Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Lost Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Lost Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Non Promo Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Non Promo Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Non Promo Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Non Promo Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Non Promo Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Non Promo Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Non Promo Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Non Promo Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Non Promo Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Non Promo Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Online Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Online Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Online Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Online Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Online Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Online Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Online Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Online Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Online Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Online Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Pack Count % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Pack Count % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Pack Count % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Pack Count % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Pack Count % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Promo Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Promo Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Promo Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Promo Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Promo Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Promo Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Promo Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Promo Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Promo Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Promo Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Retail Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Retail Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Retail Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Retail Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Retail Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Retail Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Retail Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Retail Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Retail Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Retail Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Scanout Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Scanout Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Scanout Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Scanout Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Scanout Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Scanout Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Scanout Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Scanout Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Scanout Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Scanout Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Sellin Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Sellin Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Sellin Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Sellin Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Sellin Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Sellin Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Sellin Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Sellin Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Sellin Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Sellin Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Unit % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Unit % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Unit % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Unit % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Unit % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST Val % Mkt Shr All Selected",
            "expression": [
              "VAR pt = [const_Selected_Period_Type]",
              "VAR cp = [const_Selected_Current_Period]",
              "VAR f_date = [f_DimDate]",
              "VAR val_nocat =",
              "    CALCULATE (",
              "        [ST Val % Mkt Shr],",
              "        FILTER (",
              "            ALL ( 'Dim_Date' ),",
              "            'Dim_Date'[Period Type] = pt",
              "                && 'Dim_Date'[Date Code] = cp",
              "        ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_nocat_date =",
              "    CALCULATE (",
              "        [ST Val % Mkt Shr],",
              "        FILTER ( ALL ( 'Dim_Date' ), 'Dim_Date'[Period Type] = pt ),",
              "        ALLSELECTED ()",
              "    )",
              "VAR val_currrent =",
              "    IF ( NOT ISBLANK ( [ST Val % Mkt Shr] ), val_nocat )",
              "VAR val_date_select =",
              "    IF ( NOT ISBLANK ( [ST Val % Mkt Shr] ), val_nocat_date )",
              "RETURN",
              "    IF ( f_date, val_date_select, val_currrent )"
            ],
            "isHidden": true,
            "displayFolder": "Current All Selected"
          },
          {
            "name": "ST B&M Unit PI",
            "expression": "divide([ST B&M Unit % Mkt Shr], [ST B&M Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST B&M Val PI",
            "expression": "divide([ST B&M Val % Mkt Shr], [ST B&M Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Baseline Unit PI",
            "expression": "divide([ST Baseline Unit % Mkt Shr], [ST Baseline Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Baseline Val PI",
            "expression": "divide([ST Baseline Val % Mkt Shr], [ST Baseline Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Domestic Unit PI",
            "expression": "divide([ST Domestic Unit % Mkt Shr], [ST Domestic Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Domestic Val PI",
            "expression": "divide([ST Domestic Val % Mkt Shr], [ST Domestic Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Export Unit PI",
            "expression": "divide([ST Export Unit % Mkt Shr], [ST Export Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Export Val PI",
            "expression": "divide([ST Export Val % Mkt Shr], [ST Export Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Grocery Unit PI",
            "expression": "divide([ST Grocery Unit % Mkt Shr], [ST Grocery Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Grocery Val PI",
            "expression": "divide([ST Grocery Val % Mkt Shr], [ST Grocery Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Incremental Unit PI",
            "expression": "divide([ST Incremental Unit % Mkt Shr], [ST Incremental Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Incremental Val PI",
            "expression": "divide([ST Incremental Val % Mkt Shr], [ST Incremental Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Lost Unit PI",
            "expression": "divide([ST Lost Unit % Mkt Shr], [ST Lost Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Lost Val PI",
            "expression": "divide([ST Lost Val % Mkt Shr], [ST Lost Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Non Promo Unit PI",
            "expression": "divide([ST Non Promo Unit % Mkt Shr], [ST Non Promo Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Non Promo Val PI",
            "expression": "divide([ST Non Promo Val % Mkt Shr], [ST Non Promo Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Online Unit PI",
            "expression": "divide([ST Online Unit % Mkt Shr], [ST Online Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Online Val PI",
            "expression": "divide([ST Online Val % Mkt Shr], [ST Online Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Pack Count PI",
            "expression": "divide([ST Pack Count % Mkt Shr], [ST Pack Count % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Promo Unit PI",
            "expression": "divide([ST Promo Unit % Mkt Shr], [ST Promo Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Promo Val PI",
            "expression": "divide([ST Promo Val % Mkt Shr], [ST Promo Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Retail Unit PI",
            "expression": "divide([ST Retail Unit % Mkt Shr], [ST Retail Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Retail Val PI",
            "expression": "divide([ST Retail Val % Mkt Shr], [ST Retail Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Scanout Unit PI",
            "expression": "divide([ST Scanout Unit % Mkt Shr], [ST Scanout Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Scanout Val PI",
            "expression": "divide([ST Scanout Val % Mkt Shr], [ST Scanout Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Sellin Unit PI",
            "expression": "divide([ST Sellin Unit % Mkt Shr], [ST Sellin Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Sellin Val PI",
            "expression": "divide([ST Sellin Val % Mkt Shr], [ST Sellin Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Unit PI",
            "expression": "divide([ST Unit % Mkt Shr], [ST Unit % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          },
          {
            "name": "ST Val PI",
            "expression": "divide([ST Val % Mkt Shr], [ST Val % Mkt Shr All Selected]) * 100",
            "isHidden": true,
            "displayFolder": "Current Period Metrics\\Current MS"
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_IsMQueryFoldable",
            "value": "True"
          }
        ]
      },
      {
        "name": "Metric_Filter",
        "isHidden": true,
        "columns": [
          {
            "name": "Filter_Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Filter_Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Filter_Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Metric_Filter-c71a8cf5-f22d-4024-8144-964ff0671cea",
            "mode": "import",
            "queryGroup": "Auxiliary_Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WSinNza1Uio0FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Filter_Name = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Filter_Name\", type text}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "f_PackName",
            "expression": "isfiltered('Dim_Product'[Pack Name])",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Boolean\" />"
              }
            ]
          },
          {
            "name": "f_ProductName",
            "expression": "isfiltered('Dim_Product'[Product Name])",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Boolean\" />"
              }
            ]
          },
          {
            "name": "f_APN",
            "expression": "isfiltered('Dim_Product'[APN])",
            "isHidden": true
          },
          {
            "name": "f_Brand",
            "expression": "isfiltered('Dim_Product'[Brand])",
            "isHidden": true
          },
          {
            "name": "f_FCC",
            "expression": "isfiltered('Dim_Product_Base'[FCC])",
            "isHidden": true
          },
          {
            "name": "f_Manufacturer",
            "expression": "isfiltered('Dim_Product'[Manufacturer])",
            "isHidden": true
          },
          {
            "name": "f_PackLongName",
            "expression": "isfiltered('Dim_Product'[Pack Long Name])",
            "isHidden": true
          },
          {
            "name": "f_PFC",
            "expression": "isfiltered('Dim_Product'[PFC])",
            "isHidden": true
          },
          {
            "name": "f_SubBrand",
            "expression": "isfiltered('Dim_Product'[Sub Brand])",
            "isHidden": true
          },
          {
            "name": "f_Category",
            "expression": "isfiltered('Dim_Product'[Category])",
            "isHidden": true
          },
          {
            "name": "f_MarketName",
            "expression": "isfiltered('Dim_Product'[Market Name])",
            "isHidden": true
          },
          {
            "name": "f_ClientManufacturer",
            "expression": "isfiltered('Dim_Product'[Client Manufacturer])",
            "isHidden": true
          },
          {
            "name": "crossf_Product",
            "expression": "iscrossfiltered('Dim_Product'[FCC])",
            "isHidden": true
          },
          {
            "name": "crossf_Brick",
            "expression": "iscrossfiltered('Dim_Brick'[Brick ID])",
            "isHidden": true
          },
          {
            "name": "crossf_Banner",
            "expression": "iscrossfiltered('Dim_Banner_State'[banner_id])",
            "isHidden": true
          },
          {
            "name": "crossf_Date",
            "expression": "iscrossfiltered('Dim_Date'[period_id])",
            "isHidden": true
          },
          {
            "name": "f_DateCode",
            "expression": "isfiltered('Dim_Date'[Date Code])",
            "isHidden": true
          },
          {
            "name": "f_DimDate",
            "expression": "[f_DateCode] + [f_PeriodDate] + [f_PeriodLongDate] + [f_PeriodName] + [f_PeriodSequenceName] >= 1",
            "isHidden": true
          },
          {
            "name": "f_MATYear",
            "expression": "isfiltered('Dim_Date'[MAT Year])",
            "isHidden": true
          },
          {
            "name": "f_PeriodDate",
            "expression": "isfiltered('Dim_Date'[Period Date])",
            "isHidden": true
          },
          {
            "name": "f_PeriodLongDate",
            "expression": "isfiltered('Dim_Date'[Period Long Name])",
            "isHidden": true
          },
          {
            "name": "f_PeriodName",
            "expression": "isfiltered('Dim_Date'[Period Name])",
            "isHidden": true
          },
          {
            "name": "f_PeriodYear",
            "expression": "isfiltered('Dim_Date'[Period Year])",
            "isHidden": true
          },
          {
            "name": "f_SKUSelected",
            "description": "This is to check if the context attributes has the product information selected",
            "expression": "[f_APN] + [f_FCC] + [f_PackLongName] + [f_PackName] + [f_PFC] + [f_ProductName] +  [f_Brand] + [f_Manufacturer] + [f_SubBrand] >= 1",
            "isHidden": true
          },
          {
            "name": "f_CWHRelated",
            "expression": "[f_CWHBrickID] + [f_CWHBrickName] + [f_BannerforCWHBrick] + [f_State] >= 1",
            "isHidden": true
          },
          {
            "name": "f_CWHNotRelated",
            "expression": "[f_BannerAssociation] + [f_BannerModel] + [f_BannerName] + [f_BannerReportGroup] + [f_BannerScanReportable] + [f_BannerStateReportable] + [f_StateBannerReportable] >= 1",
            "isHidden": true
          },
          {
            "name": "f_BannerAssociation",
            "expression": "isfiltered('Dim_Banner'[Banner Association])",
            "isHidden": true
          },
          {
            "name": "f_BannerforCWHBrick",
            "expression": "isfiltered('Dim_Banner'[Banner for CWH Brick])",
            "isHidden": true
          },
          {
            "name": "f_BannerModel",
            "expression": "isfiltered('Dim_Banner'[Banner Model])",
            "isHidden": true
          },
          {
            "name": "f_BannerName",
            "expression": "isfiltered('Dim_Banner'[Banner Name])",
            "isHidden": true
          },
          {
            "name": "f_BannerReportGroup",
            "expression": "isfiltered('Dim_Banner'[Banner Report Group])",
            "isHidden": true
          },
          {
            "name": "f_BannerScanReportable",
            "expression": "isfiltered('Dim_Banner_State'[Banner Scan Reportable])",
            "isHidden": true
          },
          {
            "name": "f_BannerStateReportable",
            "expression": "isfiltered('Dim_Banner_State'[Banner State Reportable])",
            "isHidden": true
          },
          {
            "name": "f_StateBannerReportable",
            "expression": "isfiltered('Dim_Banner_State'[State Banner Reportable])",
            "isHidden": true
          },
          {
            "name": "f_CWHBrickID",
            "expression": "isfiltered('Dim_Brick'[CWH Brick ID])",
            "isHidden": true
          },
          {
            "name": "f_CWHBrickName",
            "expression": "isfiltered('Dim_Brick'[CWH Brick Name])",
            "isHidden": true
          },
          {
            "name": "f_ScanRelated",
            "expression": "or([f_BannerScanReportable] + [f_BannerStateReportable] + [f_StateBannerReportable] >= 1, [f_State])",
            "isHidden": true
          },
          {
            "name": "f_ScanNotRelated",
            "expression": "[f_BannerName] + [f_BannerReportGroup] >= 1",
            "isHidden": true
          },
          {
            "name": "f_CBGRelated",
            "expression": "[f_BannerName] + [f_BannerReportGroup] + [f_BannerAssociation] + [f_BannerModel] + [f_State] >= 1",
            "isHidden": true
          },
          {
            "name": "f_CBGNotRelated",
            "expression": "[f_BannerforCWHBrick] + [f_BannerScanReportable] + [f_BannerStateReportable] + [f_StateBannerReportable] + [f_CWHBrickID] + [f_CWHBrickName] >= 1",
            "isHidden": true
          },
          {
            "name": "f_State",
            "expression": "isfiltered('Dim_Brick'[State])",
            "isHidden": true
          },
          {
            "name": "f_BannerCurrent",
            "description": "This measure is to check if the object 'Dim_Store'[Banner Current] is filtered",
            "expression": "IsFiltered('Dim_Store'[Banner Current])",
            "isHidden": true
          },
          {
            "name": "f_CWHBrick",
            "description": "This measure is to check if the object 'Dim_Store'[CWH Brick] is filtered",
            "expression": "IsFiltered('Dim_Store'[CWH Brick])",
            "isHidden": true
          },
          {
            "name": "f_CWHBrickName_St",
            "description": "This measure is to check if the object 'Dim_Store'[CWH Brick Name] is filtered",
            "expression": "IsFiltered('Dim_Store'[CWH Brick Name])",
            "isHidden": true
          },
          {
            "name": "f_DateClose",
            "description": "This measure is to check if the object 'Dim_Store'[Date Close] is filtered",
            "expression": "IsFiltered('Dim_Store'[Date Close])",
            "isHidden": true
          },
          {
            "name": "f_DateFirstOpen",
            "description": "This measure is to check if the object 'Dim_Store'[Date First Open] is filtered",
            "expression": "IsFiltered('Dim_Store'[Date First Open])",
            "isHidden": true
          },
          {
            "name": "f_EID",
            "description": "This measure is to check if the object 'Dim_Store'[EID] is filtered",
            "expression": "IsFiltered('Dim_Store'[EID])",
            "isHidden": true
          },
          {
            "name": "f_FullAddress",
            "description": "This measure is to check if the object 'Dim_Store'[Full Address] is filtered",
            "expression": "IsFiltered('Dim_Store'[Full Address])",
            "isHidden": true
          },
          {
            "name": "f_GCCSAName",
            "description": "This measure is to check if the object 'Dim_Store'[GCCSA Name] is filtered",
            "expression": "IsFiltered('Dim_Store'[GCCSA Name])",
            "isHidden": true
          },
          {
            "name": "f_Latitude",
            "description": "This measure is to check if the object 'Dim_Store'[Latitude] is filtered",
            "expression": "IsFiltered('Dim_Store'[Latitude])",
            "isHidden": true
          },
          {
            "name": "f_LGACode",
            "description": "This measure is to check if the object 'Dim_Store'[LGA Code] is filtered",
            "expression": "IsFiltered('Dim_Store'[LGA Code])",
            "isHidden": true
          },
          {
            "name": "f_LGAName",
            "description": "This measure is to check if the object 'Dim_Store'[LGA Name] is filtered",
            "expression": "IsFiltered('Dim_Store'[LGA Name])",
            "isHidden": true
          },
          {
            "name": "f_LGAState",
            "description": "This measure is to check if the object 'Dim_Store'[LGA State] is filtered",
            "expression": "IsFiltered('Dim_Store'[LGA State])",
            "isHidden": true
          },
          {
            "name": "f_Longitude",
            "description": "This measure is to check if the object 'Dim_Store'[Longitude] is filtered",
            "expression": "IsFiltered('Dim_Store'[Longitude])",
            "isHidden": true
          },
          {
            "name": "f_Name",
            "description": "This measure is to check if the object 'Dim_Store'[Name] is filtered",
            "expression": "IsFiltered('Dim_Store'[Name])",
            "isHidden": true
          },
          {
            "name": "f_Phone",
            "description": "This measure is to check if the object 'Dim_Store'[Phone] is filtered",
            "expression": "IsFiltered('Dim_Store'[Phone])",
            "isHidden": true
          },
          {
            "name": "f_Postcode",
            "description": "This measure is to check if the object 'Dim_Store'[Postcode] is filtered",
            "expression": "IsFiltered('Dim_Store'[Postcode])",
            "isHidden": true
          },
          {
            "name": "f_Remoteness",
            "description": "This measure is to check if the object 'Dim_Store'[Remoteness] is filtered",
            "expression": "IsFiltered('Dim_Store'[Remoteness])",
            "isHidden": true
          },
          {
            "name": "f_RemotenessClass",
            "description": "This measure is to check if the object 'Dim_Store'[Remoteness Class] is filtered",
            "expression": "IsFiltered('Dim_Store'[Remoteness Class])",
            "isHidden": true
          },
          {
            "name": "f_RetailBrick",
            "description": "This measure is to check if the object 'Dim_Store'[Retail Brick] is filtered",
            "expression": "IsFiltered('Dim_Store'[Retail Brick])",
            "isHidden": true
          },
          {
            "name": "f_RetailBrickName",
            "description": "This measure is to check if the object 'Dim_Store'[Retail Brick Name] is filtered",
            "expression": "IsFiltered('Dim_Store'[Retail Brick Name])",
            "isHidden": true
          },
          {
            "name": "f_SA2Name",
            "description": "This measure is to check if the object 'Dim_Store'[SA2 Name] is filtered",
            "expression": "IsFiltered('Dim_Store'[SA2 Name])",
            "isHidden": true
          },
          {
            "name": "f_SA3Name",
            "description": "This measure is to check if the object 'Dim_Store'[SA3 Name] is filtered",
            "expression": "IsFiltered('Dim_Store'[SA3 Name])",
            "isHidden": true
          },
          {
            "name": "f_SA4Name",
            "description": "This measure is to check if the object 'Dim_Store'[SA4 Name] is filtered",
            "expression": "IsFiltered('Dim_Store'[SA4 Name])",
            "isHidden": true
          },
          {
            "name": "f_ScanBrick",
            "description": "This measure is to check if the object 'Dim_Store'[Scan Brick] is filtered",
            "expression": "IsFiltered('Dim_Store'[Scan Brick])",
            "isHidden": true
          },
          {
            "name": "f_ScanBrickName",
            "description": "This measure is to check if the object 'Dim_Store'[Scan Brick Name] is filtered",
            "expression": "IsFiltered('Dim_Store'[Scan Brick Name])",
            "isHidden": true
          },
          {
            "name": "f_StateCode",
            "description": "This measure is to check if the object 'Dim_Store'[State Code] is filtered",
            "expression": "IsFiltered('Dim_Store'[State Code])",
            "isHidden": true
          },
          {
            "name": "f_StoreType",
            "description": "This measure is to check if the object 'Dim_Store'[Store Type] is filtered",
            "expression": "IsFiltered('Dim_Store'[Store Type])",
            "isHidden": true
          },
          {
            "name": "f_StoreTypeDescription",
            "description": "This measure is to check if the object 'Dim_Store'[Store Type Description] is filtered",
            "expression": "IsFiltered('Dim_Store'[Store Type Description])",
            "isHidden": true
          },
          {
            "name": "f_SUAName",
            "description": "This measure is to check if the object 'Dim_Store'[SUA Name] is filtered",
            "expression": "IsFiltered('Dim_Store'[SUA Name])",
            "isHidden": true
          },
          {
            "name": "f_Suburb",
            "description": "This measure is to check if the object 'Dim_Store'[Suburb] is filtered",
            "expression": "IsFiltered('Dim_Store'[Suburb])",
            "isHidden": true
          },
          {
            "name": "f_ProfitRelated",
            "expression": "[f_RetailBrick] + [f_RetailBrickName] + [f_ScanBrick] + [f_ScanBrickName] + [f_CWHBrick] + [f_CWHBrickName_St] + [f_StateCode] >= 1",
            "isHidden": true
          },
          {
            "name": "f_ProfitNotRelated",
            "expression": [
              "[f_BannerCurrent] + [f_DateClose] + [f_DateFirstOpen] + [f_EID] + [f_FullAddress] + [f_GCCSAName] + ",
              "[f_Latitude] + [f_LGACode] + [f_LGAName] + [f_LGAState] + [f_Longitude] + [f_Name] + [f_Phone] +",
              "[f_Postcode] + [f_Remoteness] + [f_RemotenessClass] + [f_SA2Name] +  [f_SA3Name] + [f_SA4Name] +",
              "[f_StoreType] + [f_StoreTypeDescription] + [f_SUAName] + [f_Suburb] >= 1"
            ],
            "isHidden": true
          },
          {
            "name": "f_ProbeRelated",
            "expression": "if(and([crossf_EID], Not [f_ProbeExcluded]), TRUE, FALSE)",
            "isHidden": true
          },
          {
            "name": "f_ProbeNotRelated",
            "expression": "not [crossf_EID]",
            "isHidden": true
          },
          {
            "name": "crossf_EID",
            "expression": "iscrossfiltered('Dim_Store'[EID])",
            "isHidden": true
          },
          {
            "name": "f_ProbeExcluded",
            "expression": "if(values('Dim_Store'[Store Type Description]) in {\"Hidden Pharmacy\", \"Capital Chemists\", \"Additional Exclusions\", \"CWH Stores\"}, TRUE, FALSE)",
            "isHidden": true
          },
          {
            "name": "f_IsCategorySelected",
            "expression": "[f_Category] + [f_MarketName] >= 1",
            "isHidden": true
          },
          {
            "name": "f_Channel",
            "expression": "isfiltered('Dim_Channel'[Channel])",
            "isHidden": true
          },
          {
            "name": "f_DimDateOnline",
            "expression": "[f_DateCode] + [f_PeriodDate] + [f_PeriodLongDate] + [f_PeriodName] + [f_PeriodSequenceName] + [f_MATYear] >= 1",
            "isHidden": true
          },
          {
            "name": "f_DimBannerNot",
            "expression": "[f_BannerAssociation] + [f_BannerforCWHBrick] + [f_BannerModel] + [f_BannerName] + [f_BannerReportGroup] = 0",
            "isHidden": true
          },
          {
            "name": "f_DimBannerStateNot",
            "expression": "[f_BannerScanReportable] + [f_BannerStateReportable] + [f_StateBannerReportable] = 0",
            "isHidden": true
          },
          {
            "name": "f_DimBrickNot",
            "expression": [
              "[crossf_Brick] = FALSE",
              ""
            ],
            "isHidden": true
          },
          {
            "name": "f_OnlineAllowed",
            "expression": "[f_DimBannerNot] + [f_DimBannerStateNot] + [f_DimBrickNot] + [f_DimStoreNot] = 4",
            "isHidden": true
          },
          {
            "name": "f_DimStoreNot",
            "expression": "[crossf_EID] = FALSE",
            "isHidden": true
          },
          {
            "name": "f_PeriodSequenceName",
            "expression": "isfiltered('Dim_Date'[Period Sequence Name])",
            "isHidden": true
          },
          {
            "name": "f_ProductOwnership",
            "expression": "isfiltered('Dim_Product'[Product Ownership])",
            "isHidden": true
          },
          {
            "name": "ff_CategorySelected",
            "expression": "[f_Category] + [f_MarketName] >= 1",
            "isHidden": true
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Metric_Constant",
        "isHidden": true,
        "columns": [
          {
            "name": "Constant_Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Constant_Name",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Constant_Name"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Metric_Constant-156f9109-8926-468d-b6e9-fe12064a6ed3",
            "mode": "import",
            "queryGroup": "Auxiliary_Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WSinNza1Uio0FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Constant_Name = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Constant_Name\", type text}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "const_Default_Period_Type",
            "expression": "values('Dim_Client'[default_period_name])",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              }
            ]
          },
          {
            "name": "const_Default_Source",
            "expression": "calculate(values(Dim_Client_Subscription[Source]), filter(all('Dim_Client_Subscription'), 'Dim_Client_Subscription'[Default_Service] = 1))",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              }
            ]
          },
          {
            "name": "const_Default_Service",
            "expression": "calculate(values(Dim_Client_Subscription[Subscription]), filter(all('Dim_Client_Subscription'), 'Dim_Client_Subscription'[Default_Service] = 1))",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              }
            ]
          },
          {
            "name": "const_Selected_Current_Period",
            "expression": [
              "",
              "Var pt = [const_Selected_Period_Type]",
              "return Calculate(max('Dim_Date'[Date Code]), filter(all('Dim_Date'[Period Type]), 'Dim_Date'[Period Type] = pt))"
            ],
            "formatString": "0",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              }
            ]
          },
          {
            "name": "const_Selected_Period_Type",
            "expression": "selectedvalue('Dim_Date'[Period Type], [const_Default_Period_Type])",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              }
            ]
          },
          {
            "name": "const_Current_Period_Name",
            "expression": [
              "",
              "Var pt = [const_Selected_Period_Type]",
              "return Calculate(max('Dim_Date'[Period Name]), filter(all('Dim_Date'[Period Type]), 'Dim_Date'[Period Type] = pt))"
            ],
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              }
            ]
          },
          {
            "name": "const_Selected_Source",
            "expression": [
              "selectedvalue('Dim_Sellin_Scanout'[Sales Type], [const_Selected_Subscribe_Source])",
              "",
              "//selectedvalue('Dim_Sellin_Scanout'[Sales Type], [const_Default_Source])"
            ],
            "isHidden": true
          },
          {
            "name": "const_Selected_Service",
            "expression": "selectedvalue(Dim_Client_Subscription[Subscription], [const_Default_Service])",
            "isHidden": true
          },
          {
            "name": "const_Selected_Last_MAT_Year",
            "expression": [
              "",
              "Var pt = [const_Selected_Period_Type]",
              "Var cp = [const_Selected_Current_Period]",
              "Var lymat = CALCULATE(max('Dim_Date'[MAT Year]), filter(all('Dim_Date'),'Dim_Date'[Period Type] = pt && 'Dim_Date'[Date Code] = cp)) - 1",
              "return lymat",
              ""
            ],
            "formatString": "0",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              }
            ]
          },
          {
            "name": "const_Selected_Period_Seq_Mat",
            "expression": [
              "",
              "Var pt = [const_Selected_Period_Type]",
              "Var cp = [const_Selected_Current_Period]",
              "Var pseqmat = CALCULATE(values('Dim_Date'[period_seq_mat]), filter(all('Dim_Date'),'Dim_Date'[Period Type] = pt && 'Dim_Date'[Date Code] = cp))",
              "return pseqmat"
            ],
            "formatString": "0",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              }
            ]
          },
          {
            "name": "const_Selected_Period_Seq",
            "expression": [
              "Var pt = [const_Selected_Period_Type]",
              "Var cp = [const_Selected_Current_Period]",
              "Var pseq = CALCULATE(values('Dim_Date'[period_seq]), filter(all('Dim_Date'),'Dim_Date'[Period Type] = pt && 'Dim_Date'[Date Code] = cp))",
              "return pseq"
            ],
            "isHidden": true
          },
          {
            "name": "const_Selected_Last_Period_Year",
            "expression": [
              "Var pt = [const_Selected_Period_Type]",
              "Var cp = [const_Selected_Current_Period]",
              "Var lyperiod = CALCULATE(values('Dim_Date'[Period Year]), filter(all('Dim_Date'),'Dim_Date'[Period Type] = pt && 'Dim_Date'[Date Code] = cp)) - 1",
              "return lyperiod"
            ],
            "isHidden": true
          },
          {
            "name": "const_Selected_MAT_Year",
            "expression": [
              "Var pt = [const_Selected_Period_Type]",
              "Var cp = [const_Selected_Current_Period]",
              "Var lymat = CALCULATE(max('Dim_Date'[MAT Year]), filter(all('Dim_Date'),'Dim_Date'[Period Type] = pt && 'Dim_Date'[Date Code] = cp))",
              "return lymat",
              ""
            ],
            "formatString": "0",
            "isHidden": true,
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              }
            ]
          },
          {
            "name": "const_Selected_Period_Year",
            "expression": [
              "Var pt = [const_Selected_Period_Type]",
              "Var cp = [const_Selected_Current_Period]",
              "Var lyperiod = CALCULATE(values('Dim_Date'[Period Year]), filter(all('Dim_Date'),'Dim_Date'[Period Type] = pt && 'Dim_Date'[Date Code] = cp))",
              "return lyperiod"
            ],
            "isHidden": true
          },
          {
            "name": "const_Selected_Category",
            "expression": "selectedvalue('Dim_Product'[Category])",
            "isHidden": true
          },
          {
            "name": "const_UseSTSales",
            "expression": "if([const_Selected_Service] in {\"PROBE Data\", \"PROFITS Data\"}, TRUE, FALSE)",
            "isHidden": true
          },
          {
            "name": "const_UseBBSales",
            "expression": "if([const_Selected_Service] in {\"CBG Dashboard Data\", \"Scan Data\"}, TRUE, FALSE)",
            "isHidden": true
          },
          {
            "name": "const_Selected_Subscribe_Source",
            "expression": [
              "selectedvalue('Dim_Client_Subscription'[Source], [const_Default_Source])",
              ""
            ],
            "isHidden": true
          },
          {
            "name": "const_Selected_CBG",
            "expression": "[const_Selected_Service] = \"CBG Dashboard Data\"",
            "isHidden": true
          },
          {
            "name": "const_Selected_Probe",
            "expression": "[const_Selected_Service] = \"PROBE Data\"",
            "isHidden": true
          },
          {
            "name": "const_Selected_Profit",
            "expression": "[const_Selected_Service] = \"PROFITS Data\"",
            "isHidden": true
          },
          {
            "name": "const_Selected_Scan",
            "expression": "[const_Selected_Service] = \"Scan Data\"",
            "isHidden": true
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Dim_Client_Subscription",
        "isHidden": true,
        "columns": [
          {
            "name": "ClientNumber",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ClientNumber",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "ClientNumber"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Subscription",
            "dataType": "string",
            "sourceColumn": "Subscription",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Subscription"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Source",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Source",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Source"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          },
          {
            "name": "Default_Service",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Default_Service",
            "formatString": "0",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "User"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"NumberWhole\" Accuracy=\"0\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "Int64#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Default_Service"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Client_Subscription-14425fc7-4bdc-4af2-ab4d-9a520a83afaa",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Client_Subscription = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Client_Subscription\"]}[Data],",
                "    #\"Renamed Columns\" = Table.RenameColumns(dbo_Dim_Client_Subscription,{{\"Service\", \"Subscription\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      },
      {
        "name": "Dim_Channel",
        "columns": [
          {
            "name": "Channel",
            "dataType": "string",
            "sourceColumn": "Channel",
            "summarizeBy": "none",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "Format",
                "value": "<Format Format=\"Text\" />"
              },
              {
                "name": "DataTypeAtRefresh",
                "value": "String#####not a type"
              },
              {
                "name": "PBI_NameAtRefresh",
                "value": "Channel"
              },
              {
                "name": "PBI_WasHiddenAtRefresh",
                "value": "False"
              }
            ]
          }
        ],
        "partitions": [
          {
            "name": "Dim_Channel-6d28d65d-0f1f-477d-856e-f1a9ad84acaa",
            "mode": "import",
            "queryGroup": "Dimension Table",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = Sql.Database(Server_Name, Database_Name),",
                "    dbo_Dim_Channel = Source{[Schema=\"dbo\",Item=\"vp_\"&Client_Name&\"_Dim_Channel\"]}[Data]",
                "in",
                "    dbo_Dim_Channel"
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "beb23abd-ee8b-42cf-a3ac-5edd55ce9a28",
        "fromTable": "Dim_Banner_State",
        "fromColumn": "banner_id",
        "toTable": "Dim_Banner",
        "toColumn": "banner_id"
      },
      {
        "name": "449778c9-cca8-4b4d-9fa0-8fb2e0be865b",
        "fromTable": "Dim_Date",
        "fromColumn": "period_id",
        "toTable": "Dim_Date_Base",
        "toColumn": "period_id"
      },
      {
        "name": "c162134c-a65e-4b54-913d-ce24d18654ff",
        "fromTable": "Fact_Banner_Brick_Sales",
        "fromColumn": "period_id",
        "toTable": "Dim_Date_Base",
        "toColumn": "period_id"
      },
      {
        "name": "d2b27363-0a8f-46ae-87a2-ba4e8f48c43d",
        "fromTable": "Dim_Product",
        "fromColumn": "Client Name",
        "toTable": "Dim_Client",
        "toColumn": "Company Name"
      },
      {
        "name": "64a5373f-d6ab-4b55-b45d-bc75021a0bcf",
        "fromTable": "Dim_Banner_Store_Period",
        "fromColumn": "banner_state_id",
        "toTable": "Dim_Banner_State",
        "toColumn": "banner_state_id"
      },
      {
        "name": "3155b6fc-1a28-4020-a0aa-c46bf9871f80",
        "fromTable": "Fact_Banner_Brick_Sales",
        "fromColumn": "banner_state_id",
        "toTable": "Dim_Banner_State",
        "toColumn": "banner_state_id"
      },
      {
        "name": "baba27ba-33c4-405d-8005-f9a1c6b72977",
        "fromTable": "Fact_Banner_Brick_Sales",
        "fromColumn": "partition_key",
        "toTable": "Dim_Sellin_Scanout",
        "toColumn": "partition_key"
      },
      {
        "name": "afa58e07-b913-4ed6-8e35-b2f5949047a2",
        "fromTable": "Fact_Banner_Brick_Sales",
        "fromColumn": "brick_id",
        "toTable": "Dim_Brick",
        "toColumn": "Brick ID"
      },
      {
        "name": "bf426f76-f402-45cf-bc79-5bf3a710b44f",
        "fromTable": "Dim_Product",
        "fromColumn": "FCC",
        "toTable": "Dim_Product_Base",
        "toColumn": "FCC"
      },
      {
        "name": "7c679ebb-24c8-4739-82a9-06e0af752a51",
        "fromTable": "Fact_Banner_Brick_Sales",
        "fromColumn": "fcc",
        "toTable": "Dim_Product_Base",
        "toColumn": "FCC"
      },
      {
        "name": "841847c4-5184-493a-9564-9695fdaff93e",
        "fromTable": "Dim_Banner_Store_Period",
        "fromColumn": "eid",
        "toTable": "Dim_Store",
        "toColumn": "EID"
      },
      {
        "name": "9c6bd865-26ba-488b-9152-75b566c33167",
        "fromTable": "Fact_Store_Sales",
        "fromColumn": "partition_key",
        "toTable": "Dim_Sellin_Scanout",
        "toColumn": "partition_key"
      },
      {
        "name": "c50faced-4ff5-490d-9f57-95637ed2b37f",
        "fromTable": "Fact_Store_Sales",
        "fromColumn": "fcc",
        "toTable": "Dim_Product_Base",
        "toColumn": "FCC"
      },
      {
        "name": "c60f2100-72bc-49e0-911e-b935c3b05baf",
        "fromTable": "Dim_Client_Subscription",
        "fromColumn": "ClientNumber",
        "toTable": "Dim_Client",
        "toColumn": "client_number"
      },
      {
        "name": "e8ed481b-029a-47c6-85de-768ed8f3384d",
        "fromTable": "Dim_Banner_Store_Period",
        "fromColumn": "period_id",
        "toTable": "Dim_Date_Base",
        "toColumn": "period_id"
      },
      {
        "name": "8961c9cc-42b4-4486-b847-967bb4be05cf",
        "fromTable": "Fact_Store_Sales",
        "fromColumn": "period_outlet_id",
        "toTable": "Dim_Banner_Store_Period",
        "toColumn": "period_outlet_id"
      },
      {
        "name": "7f919194-b234-4f1c-b5c0-7e82f4696ce0",
        "fromTable": "Dim_Banner",
        "fromColumn": "Channel",
        "toTable": "Dim_Channel",
        "toColumn": "Channel"
      },
      {
        "name": "854525ab-011f-42ab-96eb-3fe8e066d634",
        "fromTable": "Dim_Store",
        "fromColumn": "brick_link",
        "toTable": "Dim_Brick",
        "toColumn": "Brick ID"
      }
    ],
    "cultures": [
      {
        "name": "en-AU",
        "linguisticMetadata": {
          "content": {
            "Version": "1.0.0",
            "Language": "en-US",
            "DynamicImprovement": "HighConfidence"
          },
          "contentType": "json"
        }
      }
    ],
    "expressions": [
      {
        "name": "Client_Name",
        "description": "This is the client object name",
        "kind": "m",
        "expression": "\"BayerConsumer\" meta [IsParameterQuery=true, Type=\"Text\", IsParameterQueryRequired=true]",
        "queryGroup": "Parameter",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ]
      },
      {
        "name": "Server_Name",
        "description": "The server name of data model",
        "kind": "m",
        "expression": "\"10.66.1.15\" meta [IsParameterQuery=true, Type=\"Text\", IsParameterQueryRequired=true]",
        "queryGroup": "Parameter",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ]
      },
      {
        "name": "Database_Name",
        "description": "The database to feed the data model",
        "kind": "m",
        "expression": "\"iqviaau_reporting_db\" meta [IsParameterQuery=true, Type=\"Text\", IsParameterQueryRequired=true]",
        "queryGroup": "Parameter",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ]
      },
      {
        "name": "RangeStart",
        "kind": "m",
        "expression": "#datetime(2016, 1, 1, 0, 0, 0) meta [IsParameterQuery=true, Type=\"DateTime\", IsParameterQueryRequired=true]",
        "queryGroup": "Parameter",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "DateTime"
          }
        ]
      },
      {
        "name": "RangeEnd",
        "kind": "m",
        "expression": "#datetime(2035, 9, 1, 0, 0, 0) meta [IsParameterQuery=true, Type=\"DateTime\", IsParameterQueryRequired=true]",
        "queryGroup": "Parameter",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "DateTime"
          }
        ]
      },
      {
        "name": "fun_CDatetoInt",
        "kind": "m",
        "expression": [
          "let",
          "    Source = (dfilter as datetime) => (Date.Year(dfilter) * 10000 + Date.Month(dfilter) * 100 + Date.Day(dfilter)) * 100 + 1",
          "in",
          "    Source"
        ],
        "queryGroup": "Function",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ]
      }
    ],
    "queryGroups": [
      {
        "folder": "Dimension Table",
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ]
      },
      {
        "folder": "Fact Table",
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "1"
          }
        ]
      },
      {
        "folder": "Parameter",
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "2"
          }
        ]
      },
      {
        "folder": "Auxiliary_Table",
        "description": "Assistance Tables",
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "3"
          }
        ]
      },
      {
        "folder": "Function",
        "description": "Custom Functions",
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "4"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "__PBI_TimeIntelligenceEnabled",
        "value": "0"
      },
      {
        "name": "PBIDesktopVersion",
        "value": "2.85.681.0 (20.09)"
      },
      {
        "name": "PBI_QueryOrder",
        "value": "[\"Dim_Banner\",\"Dim_Banner_State\",\"Dim_Banner_Store_Period\",\"Dim_Brick\",\"Dim_Client\",\"Dim_Date_Base\",\"Dim_Date\",\"Dim_Product_Base\",\"Dim_Product\",\"Dim_Sellin_Scanout\",\"Dim_Store\",\"Fact_Banner_Brick_Sales\",\"Client_Name\",\"Server_Name\",\"Database_Name\",\"RangeStart\",\"RangeEnd\",\"Fact_Metrics\",\"fun_CDatetoInt\",\"Fact_Store_Sales\",\"Metric_Filter\",\"Metric_Constant\",\"Dim_Client_Subscription\",\"Dim_Channel\"]"
      },
      {
        "name": "TabularEditor_SerializeOptions",
        "value": "{\"IgnoreInferredObjects\":true,\"IgnoreInferredProperties\":true,\"IgnoreTimestamps\":true,\"SplitMultilineStrings\":true,\"PrefixFilenames\":false,\"LocalTranslations\":false,\"LocalPerspectives\":false,\"LocalRelationships\":false,\"Levels\":[\"Data Sources\",\"Perspectives\",\"Relationships\",\"Roles\",\"Tables\",\"Tables/Columns\",\"Tables/Hierarchies\",\"Tables/Measures\",\"Tables/Partitions\",\"Tables/Calculation Items\",\"Translations\"]}"
      }
    ]
  }
}